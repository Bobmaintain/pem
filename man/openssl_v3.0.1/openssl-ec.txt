OPENSSL-EC(1ossl)                   OpenSSL                  OPENSSL-EC(1ossl)



NNAAMMEE
       openssl-ec - EC key processing

SSYYNNOOPPSSIISS
       ooppeennssssll eecc [--hheellpp] [--iinnffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE] [--oouuttffoorrmm DDEERR|PPEEMM] [--iinn
       _f_i_l_e_n_a_m_e|_u_r_i] [--ppaassssiinn _a_r_g] [--oouutt _f_i_l_e_n_a_m_e] [--ppaassssoouutt _a_r_g] [--ddeess]
       [--ddeess33] [--iiddeeaa] [--tteexxtt] [--nnoooouutt] [--ppaarraamm__oouutt] [--ppuubbiinn] [--ppuubboouutt]
       [--ccoonnvv__ffoorrmm _a_r_g] [--ppaarraamm__eenncc _a_r_g] [--nnoo__ppuubblliicc] [--cchheecckk] [--eennggiinnee _i_d]
       [--pprroovviiddeerr _n_a_m_e] [--pprroovviiddeerr--ppaatthh _p_a_t_h] [--pprrooppqquueerryy _p_r_o_p_q]

DDEESSCCRRIIPPTTIIOONN
       The ooppeennssssll--eecc(1) command processes EC keys. They can be converted
       between various forms and their components printed out. NNoottee OpenSSL
       uses the private key format specified in 'SEC 1: Elliptic Curve
       Cryptography' (http://www.secg.org/). To convert an OpenSSL EC private
       key into the PKCS#8 private key format use the ooppeennssssll--ppkkccss88(1)
       command.

OOPPTTIIOONNSS
       --hheellpp
           Print out a usage message.

       --iinnffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE
           The key input format; unspecified by default.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --oouuttffoorrmm DDEERR|PPEEMM
           The key output format; the default is PPEEMM.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

           Private keys are an SEC1 private key or PKCS#8 format.  Public keys
           are a SSuubbjjeeccttPPuubblliiccKKeeyyIInnffoo as specified in IETF RFC 3280.

       --iinn _f_i_l_e_n_a_m_e|_u_r_i
           This specifies the input to read a key from or standard input if
           this option is not specified. If the key is encrypted a pass phrase
           will be prompted for.

       --oouutt _f_i_l_e_n_a_m_e
           This specifies the output filename to write a key to or standard
           output by is not specified. If any encryption options are set then
           a pass phrase will be prompted for. The output filename should nnoott
           be the same as the input filename.

       --ppaassssiinn _a_r_g, --ppaassssoouutt _a_r_g
           The password source for the input and output file.  For more
           information about the format of aarrgg see
           ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1).

       --ddeess|--ddeess33|--iiddeeaa
           These options encrypt the private key with the DES, triple DES,
           IDEA or any other cipher supported by OpenSSL before outputting it.
           A pass phrase is prompted for.  If none of these options is
           specified the key is written in plain text. This means that using
           this command to read in an encrypted key with no encryption option
           can be used to remove the pass phrase from a key, or by setting the
           encryption options it can be use to add or change the pass phrase.
           These options can only be used with PEM format output files.

       --tteexxtt
           Prints out the public, private key components and parameters.

       --nnoooouutt
           This option prevents output of the encoded version of the key.

       --ppaarraamm__oouutt
           Print the elliptic curve parameters.

       --ppuubbiinn
           By default, a private key is read from the input file. With this
           option a public key is read instead.

       --ppuubboouutt
           By default a private key is output. With this option a public key
           will be output instead. This option is automatically set if the
           input is a public key.

       --ccoonnvv__ffoorrmm _a_r_g
           This specifies how the points on the elliptic curve are converted
           into octet strings. Possible values are: ccoommpprreesssseedd (the default
           value), uunnccoommpprreesssseedd and hhyybbrriidd. For more information regarding the
           point conversion forms please read the X9.62 standard.  NNoottee Due to
           patent issues the ccoommpprreesssseedd option is disabled by default for
           binary curves and can be enabled by defining the preprocessor macro
           OOPPEENNSSSSLL__EECC__BBIINN__PPTT__CCOOMMPP at compile time.

       --ppaarraamm__eenncc _a_r_g
           This specifies how the elliptic curve parameters are encoded.
           Possible value are: nnaammeedd__ccuurrvvee, i.e. the ec parameters are
           specified by an OID, or eexxpplliicciitt where the ec parameters are
           explicitly given (see RFC 3279 for the definition of the EC
           parameters structures). The default value is nnaammeedd__ccuurrvvee.  NNoottee the
           iimmpplliicciittllyyCCAA alternative, as specified in RFC 3279, is currently
           not implemented in OpenSSL.

       --nnoo__ppuubblliicc
           This option omits the public key components from the private key
           output.

       --cchheecckk
           This option checks the consistency of an EC private or public key.

       --eennggiinnee _i_d
           See "Engine Options" in ooppeennssssll(1).  This option is deprecated.

       --pprroovviiddeerr _n_a_m_e
       --pprroovviiddeerr--ppaatthh _p_a_t_h
       --pprrooppqquueerryy _p_r_o_p_q
           See "Provider Options" in ooppeennssssll(1), pprroovviiddeerr(7), and pprrooppeerrttyy(7).

       The ooppeennssssll--ppkkeeyy(1) command is capable of performing all the operations
       this command can, as well as supporting other public key types.

EEXXAAMMPPLLEESS
       The documentation for the ooppeennssssll--ppkkeeyy(1) command contains examples
       equivalent to the ones listed here.

       To encrypt a private key using triple DES:

        openssl ec -in key.pem -des3 -out keyout.pem

       To convert a private key from PEM to DER format:

        openssl ec -in key.pem -outform DER -out keyout.der

       To print out the components of a private key to standard output:

        openssl ec -in key.pem -text -noout

       To just output the public part of a private key:

        openssl ec -in key.pem -pubout -out pubkey.pem

       To change the parameters encoding to eexxpplliicciitt:

        openssl ec -in key.pem -param_enc explicit -out keyout.pem

       To change the point conversion form to ccoommpprreesssseedd:

        openssl ec -in key.pem -conv_form compressed -out keyout.pem

SSEEEE AALLSSOO
       ooppeennssssll(1), ooppeennssssll--ppkkeeyy(1), ooppeennssssll--eeccppaarraamm(1), ooppeennssssll--ddssaa(1),
       ooppeennssssll--rrssaa(1)

HHIISSTTOORRYY
       The --eennggiinnee option was deprecated in OpenSSL 3.0.

       The --ccoonnvv__ffoorrmm and --nnoo__ppuubblliicc options are no longer supported with keys
       loaded from an engine in OpenSSL 3.0.

CCOOPPYYRRIIGGHHTT
       Copyright 2003-2021 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



3.0.1                             2022-01-31                 OPENSSL-EC(1ossl)
