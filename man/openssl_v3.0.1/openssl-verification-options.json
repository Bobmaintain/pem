{"_values": ["Creator     : groff version 1.22.4", "CreationDate: Tue Feb  1 14:19:37 2022", "html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\""], "html": [{"head": [{"meta": [{"_attributes": {"name": "generator", "content": "groff -Thtml, see www.gnu.org"}}, {"_attributes": {"http-equiv": "Content-Type", "content": "text/html; charset=US-ASCII"}}, {"_attributes": {"name": "Content-Style", "content": "text/css"}}], "style": [{"_attributes": {"type": "text/css"}, "_value": "p       { margin-top: 0; margin-bottom: 0; vertical-align: top }\n       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }\n       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }\n       h1      { text-align: center }"}], "title": [{"_value": "OPENSSL-VERIFICATION-OPTIONS"}]}], "body": [{"h1": [{"_attributes": {"align": "center"}, "_value": "OPENSSL-VERIFICATION-OPTIONS"}], "a": [{"_attributes": {"href": "#NAME"}, "_value": "NAME"}, {"_attributes": {"href": "#SYNOPSIS"}, "_value": "SYNOPSIS"}, {"_attributes": {"href": "#DESCRIPTION"}, "_value": "DESCRIPTION"}, {"_attributes": {"href": "#OPTIONS"}, "_value": "OPTIONS"}, {"_attributes": {"href": "#BUGS"}, "_value": "BUGS"}, {"_attributes": {"href": "#SEE ALSO"}, "_value": "SEE ALSO"}, {"_attributes": {"href": "#HISTORY"}, "_value": "HISTORY"}, {"_attributes": {"href": "#COPYRIGHT"}, "_value": "COPYRIGHT"}], "br": [{}, {}, {}, {}, {}, {}, {}, {}], "hr": [{}, {}], "h2": [{"_value": "NAME", "a": [{"_attributes": {"name": "NAME"}}]}, {"_value": "SYNOPSIS", "a": [{"_attributes": {"name": "SYNOPSIS"}}]}, {"_value": "DESCRIPTION", "a": [{"_attributes": {"name": "DESCRIPTION"}}]}, {"_value": "OPTIONS", "a": [{"_attributes": {"name": "OPTIONS"}}]}, {"_value": "BUGS", "a": [{"_attributes": {"name": "BUGS"}}]}, {"_value": "SEE ALSO", "a": [{"_attributes": {"name": "SEE ALSO"}}]}, {"_value": "HISTORY", "a": [{"_attributes": {"name": "HISTORY"}}]}, {"_value": "COPYRIGHT", "a": [{"_attributes": {"name": "COPYRIGHT"}}]}], "p": [{"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "openssl-verification-options\n- generic X.509 certificate verification options"}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "openssl"}], "i": [{"_value": "command"}, {"_value": "options"}, {"_value": "parameters"}], "_values": ["[", "... ] [", "... ]"]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "There are many\nsituations where X.509 certificates are verified within the\nOpenSSL libraries and in various OpenSSL commands."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "X509_verify_cert"}], "_values": ["Certificate\nverification is implemented by", "(3).\nIt is a complicated process consisting of a number of steps\nand depending on numerous options. The most important of\nthem are detailed in the following sections."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "i": [{"_value": "target certificate"}, {"_value": "purpose"}], "_values": ["In a nutshell,\na valid chain of certificates needs to be built up and\nverified starting from the", "that is\nto be verified and ending in a certificate that due to some\npolicy is trusted. Verification is done relative to the\ngiven", ", which is the intended use of the\ntarget certificate, such as", "server, or by\ndefault for any purpose."], "small": [{"_value": "SSL"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "The details of\nhow each OpenSSL command handles errors are documented on\nthe specific command page."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "DANE"}], "b": [{"_value": "openssl-s_client"}, {"_value": "SSL_CTX_dane_enable"}, {"_value": "SSL_set1_host"}, {"_value": "X509_VERIFY_PARAM_set_flags"}, {"_value": "X509_check_host"}], "_values": ["support is documented in", "(1),", "(3),", "(3),", "(3), and", "(3)."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Trust\nAnchors"}], "br": [{}], "small": [{"_value": "RFC 4158"}, {"_value": "RFC 5280,"}, {"_value": "DN"}], "_values": ["In general, according to", "and", "a", "is any public\nkey and related subject distinguished name (", ") that for some reason is considered\ntrusted and thus is acceptable as the root of a chain of\ncertificates."], "i": [{"_value": "trust anchor"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "DN."}, {"_value": "RFC 5280,"}], "_values": ["In practice,\ntrust anchors are given in the form of certificates, where\ntheir essential fields are the public key and the subject", "In addition to the requirements in", "OpenSSL checks the validity period\nof such certificates and makes use of some further fields.\nIn particular, the subject key identifier extension, if\npresent, is used for matching trust anchors during chain\nbuilding."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}], "_values": ["In the most\nsimple and common case, trust anchors are by default all\nself-signed \"root\"", "certificates\nthat are placed in the", ", which is a\ncollection of certificates that are trusted for certain\nuses. This is akin to what is used in the trust stores of\nMozilla Firefox, or Apple\u2019s and Microsoft\u2019s\ncertificate stores, ..."], "i": [{"_value": "trust store"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "PEM"}], "_values": ["From the\nOpenSSL perspective, a trust anchor is a certificate that\nshould be augmented with an explicit designation for which\nuses of a target certificate the certificate may serve as a\ntrust anchor. In", "encoding, this is\nindicated by the \"TRUSTED CERTIFICATE\" string.\nSuch a designation provides a set of positive trust\nattributes explicitly stating trust for the listed purposes\nand/or a set of negative trust attributes explicitly\nrejecting the use for the listed purposes. The purposes are\nencoded using the values defined for the extended key usages\n(EKUs) that may be given in X.509 extensions of end-entity\ncertificates. See also the \"Extended Key Usage\"\nsection below."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "clientAuth"}, {"_value": "serverAuth"}, {"_value": "emailProtection"}, {"_value": "codeSigning"}, {"_value": "OCSPSigning"}, {"small": [{"_value": "OCSP"}]}, {"_value": "timeStamping"}, {"_value": "anyExtendedKeyUsage"}], "_values": ["The currently\nrecognized uses are", "(", "client use),", "(", "server\nuse),", "(S/MIME email use),", "(object signer use),", "(", "responder use),", "(", "request\nuse),", "(", "server use),\nand", ". As of OpenSSL 1.1.0, the\nlast of these blocks all uses when rejected or enables all\nuses when trusted."], "small": [{"_value": "SSL"}, {"_value": "SSL"}, {"_value": "OCSP"}, {"_value": "OCSP"}, {"_value": "TSA"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}], "_values": ["A certificate,\nwhich may be", "certificate or an end-entity\ncertificate, is considered a trust anchor for the given use\nif and only if all the following conditions hold:"]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Certification\nPath Building"}], "br": [{}], "_value": "First, a certificate chain is built up starting from the\ntarget certificate and ending in a trust anchor."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "The chain is\nbuilt up iteratively, looking up in turn a certificate with\nsuitable key usage that matches as an issuer of the current\n\"subject\" certificate as described below. If there\nis such a certificate, the first one found that is currently\nvalid is taken, otherwise the one that expired most recently\nof all such certificates. For efficiency, no backtracking is\nperformed, thus any further candidate issuer certificates\nthat would match equally are ignored."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "When a\nself-signed certificate has been added, chain construction\nstops. In this case it must fully match a trust anchor,\notherwise chain building fails."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "A candidate\nissuer certificate matches a subject certificate if all of\nthe following conditions hold:"}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}], "_values": ["The lookup\nfirst searches for issuer certificates in the trust store.\nIf it does not find a match there it consults the list of\nuntrusted (\"intermediate\"", ")\ncertificates, if provided."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Certification\nPath Validation"}], "br": [{}], "_value": "When the certificate chain building process was successful\nthe chain components and their links are checked\nthoroughly."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "-x509_strict"}], "_values": ["The first step\nis to check that each certificate is well-formed. Part of\nthese checks are enabled only if the", "option is given."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "-purpose"}, {"_value": "openssl-x509"}], "_values": ["The second step\nis to check the extensions of every untrusted certificate\nfor consistency with the supplied purpose. If the", "option is not given then no such checks are\ndone except for", "connection setup,\nwhere by default \"sslserver\" or\n\"sslclient\", are checked. The target or\n\"leaf\" certificate, as well as any other untrusted\ncertificates, must have extensions compatible with the\nspecified purpose. All certificates except the target or\n\"leaf\" must also be valid", "certificates. The precise extensions required are described\nin more detail in \"", "in", "(1)."], "small": [{"_value": "SSL/TLS"}, {"_value": "CA"}, {"_value": "CERTIFICATE\nEXTENSIONS\""}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}], "_values": ["The third step\nis to check the trust settings on the last certificate\n(which typically is a self-signed root", "certificate). It must be trusted for the given use. For\ncompatibility with previous versions of OpenSSL, a\nself-signed certificate with no trust attributes is\nconsidered to be valid for all uses."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}, {"_value": "CA"}], "_values": ["The fourth, and\nfinal, step is to check the validity of the certificate\nchain. For each element in the chain, including the root", "certificate, the validity period as\nspecified by the \"notBefore\" and\n\"notAfter\" fields is checked against the current\nsystem time. The", "flag may be used to use a\nreference time other than \"now.\" The certificate\nsignature is checked as well (except for the signature of\nthe typically self-signed root", "certificate, which is verified only if the", "option is given). When verifying a\ncertificate signature the keyUsage extension (if present) of\nthe candidate issuer certificate is checked to permit\ndigitalSignature for signing proxy certificates or to permit\nkeyCertSign for signing other certificates, respectively. If\nall operations complete successfully then certificate is\nconsidered valid. If any operation fails then the\ncertificate is not valid."], "b": [{"_value": "-attime"}, {"_value": "-check_ss_sig"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Trusted\nCertificate Options"}], "br": [{}], "i": [{"_value": "trust store"}], "_values": ["The following options specify how to supply the certificates\nthat can be used as trust anchors for certain uses. As\nmentioned, a collection of such certificates is called a", "."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "Note that\nOpenSSL does not provide a default set of trust anchors.\nMany Linux distributions include a system default and\nconfigure OpenSSL to point to that. Mozilla maintains an\ninfluential trust store that can be found at\n<https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/>."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "The\ncertificates to add to the trust store can be specified\nusing following options.", "b": [{"br": [{}], "_value": "-CAfile"}], "i": [{"_value": "file"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "PEM"}], "_values": ["Load the specified file which\ncontains a certificate or several of them in case the input\nis in", "or PKCS#12 format. PEM-encoded\ncertificates may also have trust attributes set."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-no-CAfile"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Do not load the default file of\ntrusted certificates."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-CApath"}], "i": [{"_value": "dir"}]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "openssl-rehash"}], "_values": ["Use the specified directory as\na collection of trusted certificates, i.e., a trust store.\nFiles should be named with the hash value of the X.509\nSubjectName of each certificate. This is so that the library\ncan extract the IssuerName, hash it, and directly lookup the\nfile to get the issuer certificate. See", "(1) for information on creating this\ntype of directory."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-no-CApath"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Do not use the default\ndirectory of trusted certificates."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-CAstore"}], "i": [{"_value": "uri"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "uri"}], "_values": ["Use", "as a store of", "certificates. The", "may\nindicate a single certificate, as well as a collection of\nthem. With URIs in the \"file:\" scheme, this acts\nas", "or", ", depending on if the", "indicates a single file or directory. See", "(7) for more information on the\n\"file:\" scheme."], "small": [{"_value": "CA"}, {"_value": "URI"}, {"_value": "URI"}], "b": [{"_value": "-CAfile"}, {"_value": "-CApath"}, {"_value": "ossl_store-file"}]}, {"_attributes": {"style": "margin-left:17%; margin-top: 1em"}, "b": [{"_value": "openssl-s_server"}, {"_value": "openssl-s_time"}], "_values": ["These\ncertificates are also used when building the server\ncertificate chain (for example with", "(1)) or client certificate chain (for\nexample with", "(1))."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-no-CAstore"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CA"}], "_values": ["Do not use the default store of\ntrusted", "certificates."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Verification\nOptions"}, {"br": [{}], "_value": "-verbose"}], "br": [{}], "_value": "The certificate verification can be fine-tuned with the\nfollowing flags."}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Print extra information about\nthe operations being performed."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-attime"}], "i": [{"_value": "timestamp"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "timestamp"}, {"_value": "timestamp"}], "_values": ["Perform validation checks using\ntime specified by", "and not current system\ntime.", "is the number of seconds since\nJanuary 1, 1970 (i.e., the Unix Epoch)."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-no_check_time"}]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "-attime"}], "_values": ["This option suppresses checking\nthe validity period of certificates and CRLs against the\ncurrent time. If option", "is used to specify a\nverification time, the check is not suppressed."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-x509_strict"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "This disables non-compliant\nworkarounds for broken certificates. Thus errors are thrown\non certificates not compliant with", "small": [{"_value": "RFC\n5280."}]}, {"_attributes": {"style": "margin-left:17%; margin-top: 1em"}, "_value": "When this\noption is set, among others, the following certificate\nwell-formedness conditions are checked:"}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-ignore_critical"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "RFC5280"}], "_values": ["Normally if an unhandled\ncritical extension is present that is not supported by\nOpenSSL the certificate is rejected (as required by", "). If this option is set critical\nextensions are ignored."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-issuer_checks"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Ignored."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-crl_check"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CRL."}, {"_value": "CRL"}], "_values": ["Checks end entity certificate\nvalidity by attempting to look up a valid", "If a valid", "cannot be\nfound an error occurs."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-crl_check_all"}]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "all"}], "_values": ["Checks the validity of", "certificates in the chain by attempting to look\nup valid CRLs."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-use_deltas"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Enable support for delta\nCRLs."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-extended_crl"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CRL"}, {"_value": "CRL"}], "_values": ["Enable extended", "features such as indirect CRLs and\nalternate", "signing keys."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-suiteB_128_only"}, {"_value": "-suiteB_128"}, {"_value": "-suiteB_192"}], "_values": [",", ","]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "RFC6460"}, {"_value": "ECDSA"}, {"_value": "SHA256"}, {"_value": "SHA384"}], "_values": ["Enable the Suite B mode\noperation at 128 bit Level of Security, 128 bit or 192 bit,\nor only 192 bit Level of Security respectively. See", "for details. In particular the\nsupported signature algorithms are reduced to support only", "and", "or", "and only the elliptic curves P-256 and\nP-384."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-auth_level"}], "i": [{"_value": "level"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "level"}, {"_value": "level"}, {"_value": "trust anchor"}], "_values": ["Set the certificate chain\nauthentication security level to", ". The\nauthentication security level determines the acceptable\nsignature and public key strength when verifying certificate\nchains. For a certificate chain to validate, the public keys\nof all the certificates must meet the specified security", ". The signature algorithm security level is\nenforced for all the certificates in the chain except for\nthe chain\u2019s", ", which is either\ndirectly trusted or validated by means other than its\nsignature. See", "(3) for the\ndefinitions of the available levels. The default security\nlevel is -1, or \"not set\". At security level 0 or\nlower all algorithms are acceptable. Security level 1\nrequires at least 80-bit-equivalent security and is broadly\ninteroperable, though it will, for example, reject", "signatures or", "keys\nshorter than 1024 bits."], "b": [{"_value": "SSL_CTX_set_security_level"}], "small": [{"_value": "MD5"}, {"_value": "RSA"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-partial_chain"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Allow verification to succeed\nif an incomplete chain can be built. That is, a chain ending\nin a certificate that normally would not be trusted (because\nit has no matching positive trust attributes and is not\nself-signed) but is an element of the trust store. This\ncertificate may be self-issued or belong to an intermediate", "small": [{"_value": "CA."}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-check_ss_sig"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CA"}], "_values": ["Verify the signature of the\nlast certificate in a chain if the certificate is supposedly\nself-signed. This is prohibited and will result in an error\nif it is a non-conforming", "certificate with\nkey usage restrictions not including the keyCertSign bit.\nThis verification is disabled by default because it\ndoesn\u2019t add any security."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-allow_proxy_certs"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Allow the verification of proxy\ncertificates."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-trusted_first"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "As of OpenSSL 1.1.0 this option\nis on by default and cannot be disabled."}, {"_attributes": {"style": "margin-left:17%; margin-top: 1em"}, "b": [{"_value": "-CAfile"}, {"_value": "-CApath"}, {"_value": "-CAstore"}, {"_value": "-trusted"}, {"_value": "-untrusted"}], "_values": ["When\nconstructing the certificate chain, the trusted certificates\nspecified via", ",", ",", "or", "are always used before\nany certificates specified via", "."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-no_alt_chains"}]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "-trusted_first"}], "_values": ["As of OpenSSL 1.1.0, since", "always on, this option has no\neffect."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-trusted"}], "i": [{"_value": "file"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "file"}], "_values": ["Parse", "as a set of\none or more certificates. Each of them qualifies as trusted\nif has a suitable positive trust attribute or it is\nself-signed or the", "option is\nspecified. This option implies the", ",", ", and", "options and it\ncannot be used with the", ",", "or", "options, so only certificates specified\nusing the", "option are trust anchors. This\noption may be used multiple times."], "b": [{"_value": "-partial_chain"}, {"_value": "-no-CAfile"}, {"_value": "-no-CApath"}, {"_value": "-no-CAstore"}, {"_value": "-CAfile"}, {"_value": "-CApath"}, {"_value": "-CAstore"}, {"_value": "-trusted"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-untrusted"}], "i": [{"_value": "file"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "file"}], "_values": ["Parse", "as a set of\none or more certificates. All certificates (typically of\nintermediate CAs) are considered untrusted and may be used\nto construct a certificate chain from the target certificate\nto a trust anchor. This option may be used multiple\ntimes."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-policy"}], "i": [{"_value": "arg"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "arg"}, {"_value": "arg"}], "_values": ["Enable policy processing and\nadd", "to the user-initial-policy-set (see", "). The policy", "can be an\nobject name an", "in numeric form. This\nargument can appear more than once."], "small": [{"_value": "RFC5280"}, {"_value": "OID"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-explicit_policy"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "RFC5280"}], "_values": ["Set policy variable\nrequire-explicit-policy (see", ")."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-policy_check"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Enables certificate policy\nprocessing."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-policy_print"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "Print out diagnostics related\nto policy processing."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-inhibit_any"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "RFC5280"}], "_values": ["Set policy variable\ninhibit-any-policy (see", ")."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-inhibit_map"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "RFC5280"}], "_values": ["Set policy variable\ninhibit-policy-mapping (see", ")."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-purpose"}], "i": [{"_value": "purpose"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "TLS"}, {"_value": "TLS"}, {"_value": "TLS"}], "_values": ["The intended use for the\ncertificate. Currently defined purposes are\n\"sslclient\", \"sslserver\",\n\"nssslserver\", \"smimesign\",\n\"smimeencrypt\", \"crlsign\",\n\"ocsphelper\", \"timestampsign\", and\n\"any\". If peer certificate verification is\nenabled, by default the", "implementation as\nwell as the commands", "and", "check for consistency with", "server or", "client use, respectively."], "b": [{"_value": "s_client"}, {"_value": "s_server"}]}, {"_attributes": {"style": "margin-left:17%; margin-top: 1em"}, "small": [{"_value": "IETF RFC 5280"}, {"_value": "WWW"}, {"_value": "TLS"}], "_values": ["While", "says that", "and", "are only\nfor", "use, in practice they are used for\nall kinds of", "clients and servers, and\nthis is what OpenSSL assumes as well."], "b": [{"_value": "id-kp-serverAuth"}, {"_value": "id-kp-clientAuth"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-verify_depth"}], "i": [{"_value": "num"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "num"}, {"_value": "num"}], "_values": ["Limit the certificate chain to", "intermediate", "certificates. A\nmaximal depth chain can have up to", "+2\ncertificates, since neither the end-entity certificate nor\nthe trust-anchor certificate count against the", "limit."], "small": [{"_value": "CA"}], "b": [{"_value": "-verify_depth"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-verify_email"}], "i": [{"_value": "email"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "email"}], "_values": ["Verify if", "matches\nthe email address in Subject Alternative Name or the email\nin the subject Distinguished Name."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-verify_hostname"}], "i": [{"_value": "hostname"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "hostname"}], "_values": ["Verify if", "matches", "name in Subject Alternative Name\nor Common Name in the subject certificate."], "small": [{"_value": "DNS"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-verify_ip"}], "i": [{"_value": "ip"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "ip"}], "_values": ["Verify if", "matches the", "address in Subject Alternative Name of the\nsubject certificate."], "small": [{"_value": "IP"}]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-verify_name"}], "i": [{"_value": "name"}]}, {"_attributes": {"style": "margin-left:17%;"}, "i": [{"_value": "name"}], "_values": ["Use default verification\npolicies like trust model and required certificate policies\nidentified by", ". The trust model determines which\nauxiliary trust or reject OIDs are applicable to verifying\nthe given certificate chain. They can be given using the", "and", "options for", "(1). Supported policy names include:", ",", ",", ",", ",", ". These mimics the\ncombinations of purpose and trust settings used in", "and S/MIME. As of OpenSSL 1.1.0, the\ntrust model is inferred from the purpose when not specified,\nso the", "options are functionally\nequivalent to the corresponding", "settings."], "b": [{"_value": "-addtrust"}, {"_value": "-addreject"}, {"_value": "openssl-x509"}, {"_value": "default"}, {"_value": "pkcs7"}, {"_value": "smime_sign"}, {"_value": "ssl_client"}, {"_value": "ssl_server"}, {"_value": "-verify_name"}, {"_value": "-purpose"}], "small": [{"_value": "SSL, CMS"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Extended\nVerification Options"}], "br": [{}], "small": [{"_value": "CA"}, {"_value": "CA"}, {"_value": "CA"}, {"_value": "SHA-1"}, {"_value": "SHA-256"}], "_values": ["Sometimes there may be more than one certificate chain\nleading to an end-entity certificate. This usually happens\nwhen a root or intermediate", "signs a\ncertificate for another a", "in other\norganization. Another reason is when a", "might have intermediates that use two different signature\nformats, such as a", "and a", "digest."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"br": [{}], "_value": "-xkey"}, {"_value": "-xcert"}, {"_value": "-xchain"}], "i": [{"_value": "infile"}, {"_value": "infile"}], "_values": ["The following\noptions can be used to provide data that will allow the\nOpenSSL command to generate an alternative chain.", ",", ","]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "-cert"}, {"_value": "-key"}, {"_value": "-cert_chain"}], "_values": ["Specify an extra certificate,\nprivate key and certificate chain. These behave in the same\nmanner as the", ",", "and", "options. When specified, the callback\nreturning the first valid chain will be in use by the\nclient."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-xchain_build"}]}, {"_attributes": {"style": "margin-left:17%;"}, "b": [{"_value": "-xkey"}, {"_value": "-xcert"}, {"_value": "-xchain"}], "_values": ["Specify whether the application\nshould build the certificate chain to be provided to the\nserver for the extra certificates via the", ",", ", and", "options."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-xcertform", "small": [{"_value": "DER"}]}, {"small": [{"_value": "PEM"}]}, {"_value": "P12"}], "_values": ["|", "|"]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "The input format for the extra\ncertificate. This option has no effect and is retained for\nbackward compatibility only."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "-xkeyform", "small": [{"_value": "DER"}]}, {"small": [{"_value": "PEM"}]}, {"_value": "P12"}], "_values": ["|", "|"]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "The input format for the extra\nkey. This option has no effect and is retained for backward\ncompatibility only."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "Certificate\nExtensions"}, {"_value": "-purpose"}], "br": [{}], "_values": ["Options like", "lead to checking the\ncertificate extensions, which determine what the target\ncertificate and intermediate", "certificates\ncan be used for."], "small": [{"_value": "CA"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "i": [{"_value": "Basic\nConstraints"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}, {"_value": "CA."}, {"_value": "CA"}, {"_value": "CA,"}, {"_value": "CA"}, {"_value": "CA."}, {"_value": "CA"}], "_values": ["The\nbasicConstraints extension", "flag is used to\ndetermine whether the certificate can be used as a", "If the", "flag is true\nthen it is a", "if the", "flag is false then it is not a", "CAs should have the", "flag set to true."], "b": [{"_value": "All"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA\""}, {"_value": "CA"}], "_values": ["If the\nbasicConstraints extension is absent, which includes the\ncase that it is an X.509v1 certificate, then the certificate\nis considered to be a \"possible", "and other extensions are checked according to the intended\nuse of the certificate. The treatment of certificates\nwithout basicConstraints as a", "is presently\nsupported, but this could change in the future."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "i": [{"_value": "Key\nUsage"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "CA"}], "_values": ["If the keyUsage\nextension is present then additional restraints are made on\nthe uses of the certificate. A", "certificate", "have the keyCertSign bit set if the keyUsage\nextension is present."], "b": [{"_value": "must"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "i": [{"_value": "Extended Key\nUsage"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "EKU"}], "_values": ["The extKeyUsage\n(", ") extension places additional\nrestrictions on the certificate uses. If this extension is\npresent (whether critical or not) the key can only be used\nfor the purposes specified."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "all"}, {"small": [{"br": [{}], "_value": "SSL"}], "_value": "Client"}], "small": [{"_value": "CA"}], "_values": ["A complete\ndescription of each check is given below. The comments about\nbasicConstraints and keyUsage and X.509v1 certificates above\napply to", "certificates."]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "OID."}, {"_value": "SSL"}], "_values": ["The extended key usage\nextension must be absent or include the \"web client\nauthentication\"", "The keyUsage\nextension must be absent or it must have the\ndigitalSignature bit set. The Netscape certificate type must\nbe absent or it must have the", "client bit\nset."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "SSL"}, {"_value": "CA"}], "_value": "Client"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "OID."}, {"_value": "SSL CA"}], "_values": ["The extended key usage\nextension must be absent or include the \"web client\nauthentication\"", "The Netscape\ncertificate type must be absent or it must have the", "bit set. This is used as a work around\nif the basicConstraints extension is absent."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "SSL"}], "_value": "Server"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "SGC"}, {"_value": "SSL"}], "_values": ["The extended key usage\nextension must be absent or include the \"web server\nauthentication\" and/or one of the", "OIDs. The keyUsage extension must be absent or it must have\nthe digitalSignature, the keyEncipherment set or both bits\nset. The Netscape certificate type must be absent or have\nthe", "server bit set."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "SSL"}, {"_value": "CA"}], "_value": "Server"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "SGC"}, {"_value": "SSL CA"}], "_values": ["The extended key usage\nextension must be absent or include the \"web server\nauthentication\" and/or one of the", "OIDs. The Netscape certificate type must be absent or the", "bit must be set. This is used as a\nwork around if the basicConstraints extension is absent."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "SSL"}], "_values": ["Netscape", "Server"]}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "SSL"}, {"_value": "SSL"}, {"_value": "SSL"}], "_values": ["For Netscape", "clients to connect to an", "server it must\nhave the keyEncipherment bit set if the keyUsage extension\nis present. This isn\u2019t always valid because some\ncipher suites use the key for digital signing. Otherwise it\nis the same as a normal", "server."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "Common S/MIME Client\nTests"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "OID."}, {"_value": "SSL"}], "_values": ["The extended key usage\nextension must be absent or include the \"email\nprotection\"", "The Netscape\ncertificate type must be absent or should have the S/MIME\nbit set. If the S/MIME bit is not set in the Netscape\ncertificate type then the", "client bit is\ntolerated as an alternative but a warning is shown. This is\nbecause some Verisign certificates don\u2019t set the\nS/MIME bit."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "S/MIME Signing"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "In addition to the common\nS/MIME client tests the digitalSignature bit or the\nnonRepudiation bit must be set if the keyUsage extension is\npresent."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "S/MIME Encryption"}]}, {"_attributes": {"style": "margin-left:17%;"}, "_value": "In addition to the common\nS/MIME tests the keyEncipherment bit must be set if the\nkeyUsage extension is present."}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"_value": "S/MIME", "small": [{"_value": "CA"}]}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "OID."}, {"_value": "CA"}], "_values": ["The extended key usage\nextension must be absent or include the \"email\nprotection\"", "The Netscape\ncertificate type must be absent or must have the S/MIME", "bit set. This is used as a work around if\nthe basicConstraints extension is absent."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "CRL"}], "_value": "Signing"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CRL"}], "_values": ["The keyUsage extension must be\nabsent or it must have the", "signing bit\nset."]}, {"_attributes": {"style": "margin-left:11%;"}, "b": [{"small": [{"_value": "CRL"}, {"_value": "CA"}], "_value": "Signing"}]}, {"_attributes": {"style": "margin-left:17%;"}, "small": [{"_value": "CA"}], "_values": ["The normal", "tests apply. Except in this case the basicConstraints\nextension must be present."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "API."}], "_values": ["The issuer\nchecks still suffer from limitations in the underlying\nX509_LOOKUP", "One consequence of this is\nthat trusted certificates with matching subject name must\nappear in a file (as specified by the", "option), a directory (as specified by", "), or a\nstore (as specified by", "). If there are\nmultiple such matches, possibly in multiple locations, only\nthe first one (in the mentioned order of locations) is\nrecognised."], "b": [{"_value": "-CAfile"}, {"_value": "-CApath"}, {"_value": "-CAstore"}]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "X509_verify_cert"}, {"_value": "openssl-verify"}, {"_value": "openssl-ocsp"}, {"_value": "openssl-ts"}, {"_value": "openssl-s_client"}, {"_value": "openssl-s_server"}, {"_value": "openssl-smime"}, {"_value": "openssl-cmp"}, {"_value": "openssl-cms"}], "_values": ["(3),", "(1),", "(1),", "(1),", "(1),", "(1),", "(1),", "(1),", "(1)"]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "b": [{"_value": "-x509_strict"}], "_values": ["The checks\nenabled by", "have been extended in OpenSSL\n3.0."]}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "_value": "Copyright\n2000-2021 The OpenSSL Project Authors. All Rights\nReserved."}, {"_attributes": {"style": "margin-left:11%; margin-top: 1em"}, "small": [{"_value": "LICENSE"}], "_values": ["Licensed under\nthe Apache License 2.0 (the \"License\"). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file", "in the\nsource distribution or at\n<https://www.openssl.org/source/license.html>."]}], "table": [{"_attributes": {"width": "100%", "border": "0", "rules": "none", "frame": "void", "cellspacing": "0", "cellpadding": "0"}, "tr": [{"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"_value": "It is an an element of the trust store."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"_value": "It does not have a negative trust attribute rejecting\nthe given use."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"b": [{"_value": "-partial_chain"}, {"_value": "X509_V_FLAG_PARTIAL_CHAIN"}], "_values": ["It has a positive trust attribute accepting the given\nuse or (by default) one of the following compatibilty\nconditions apply: It is self-signed or the", "option is given (which corresponds to\nthe", "flag being set)."]}]}]}]}, {"_attributes": {"width": "100%", "border": "0", "rules": "none", "frame": "void", "cellspacing": "0", "cellpadding": "0"}, "tr": [{"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_attributes": {"style": "margin-top: 1em"}, "_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"_attributes": {"style": "margin-top: 1em"}, "_value": "Its subject name matches the\nissuer name of the subject certificate."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"_value": "If the subject certificate has an authority key\nidentifier extension, each of its sub-fields equals the\ncorresponding subject key identifier, serial number, and\nissuer field of the candidate issuer certificate, as far as\nthe respective fields are present in both certificates."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "11%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "83%"}, "p": [{"_value": "The certificate signature algorithm used to sign the\nsubject certificate is supported and equals the public key\nalgorithm of the candidate issuer certificate."}]}]}]}, {"_attributes": {"width": "100%", "border": "0", "rules": "none", "frame": "void", "cellspacing": "0", "cellpadding": "0"}, "tr": [{"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"small": [{"_value": "CA"}], "_values": ["The basicConstraints of", "certificates\nmust be marked critical."]}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"small": [{"_value": "CA"}], "_value": "certificates must explicitly include\nthe keyUsage extension."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "If a pathlenConstraint is given the key usage\nkeyCertSign must be allowed."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "The pathlenConstraint must not be given for non-CA\ncertificates."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "The issuer name of any certificate must not be\nempty."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"small": [{"_value": "CA"}], "_values": ["The subject name of", "certs, certs with\nkeyUsage crlSign, and certs without subjectAlternativeName\nmust not be empty."]}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "If a subjectAlternativeName extension is given it must\nnot be empty."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "The signatureAlgorithm field and the cert signature must\nbe consistent."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "Any given authorityKeyIdentifier and any given\nsubjectKeyIdentifier must not be marked critical."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"_value": "The authorityKeyIdentifier must be given for X.509v3\ncerts unless they are self-signed."}]}]}, {"_attributes": {"valign": "top", "align": "left"}, "td": [{"_attributes": {"width": "17%"}}, {"_attributes": {"width": "1%"}, "p": [{"_value": "\u2022"}]}, {"_attributes": {"width": "5%"}}, {"_attributes": {"width": "77%"}, "p": [{"small": [{"_value": "CA"}], "_values": ["The subjectKeyIdentifier must be given for all X.509v3", "certs."]}]}]}]}]}]}]}