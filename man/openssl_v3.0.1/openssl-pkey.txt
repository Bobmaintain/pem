OPENSSL-PKEY(1ossl)                 OpenSSL                OPENSSL-PKEY(1ossl)



NNAAMMEE
       openssl-pkey - public or private key processing command

SSYYNNOOPPSSIISS
       ooppeennssssll ppkkeeyy [--hheellpp] [--eennggiinnee _i_d] [--pprroovviiddeerr _n_a_m_e] [--pprroovviiddeerr--ppaatthh
       _p_a_t_h] [--pprrooppqquueerryy _p_r_o_p_q] [--cchheecckk] [--ppuubbcchheecckk] [--iinn _f_i_l_e_n_a_m_e|_u_r_i]
       [--iinnffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE] [--ppaassssiinn _a_r_g] [--ppuubbiinn] [--oouutt _f_i_l_e_n_a_m_e]
       [--oouuttffoorrmm DDEERR|PPEEMM] [--_cc_ii_pp_hh_ee_rr] [--ppaassssoouutt _a_r_g] [--ttrraaddiittiioonnaall] [--ppuubboouutt]
       [--nnoooouutt] [--tteexxtt] [--tteexxtt__ppuubb] [--eecc__ccoonnvv__ffoorrmm _a_r_g] [--eecc__ppaarraamm__eenncc _a_r_g]

DDEESSCCRRIIPPTTIIOONN
       This command processes public or private keys. They can be converted
       between various forms and their components printed.

OOPPTTIIOONNSS
   GGeenneerraall ooppttiioonnss
       --hheellpp
           Print out a usage message.

       --eennggiinnee _i_d
           See "Engine Options" in ooppeennssssll(1).  This option is deprecated.

       --pprroovviiddeerr _n_a_m_e
       --pprroovviiddeerr--ppaatthh _p_a_t_h
       --pprrooppqquueerryy _p_r_o_p_q
           See "Provider Options" in ooppeennssssll(1), pprroovviiddeerr(7), and pprrooppeerrttyy(7).

       --cchheecckk
           This option checks the consistency of a key pair for both public
           and private components.

       --ppuubbcchheecckk
           This option checks the correctness of either a public key or the
           public component of a key pair.

   IInnppuutt ooppttiioonnss
       --iinn _f_i_l_e_n_a_m_e|_u_r_i
           This specifies the input to read a key from or standard input if
           this option is not specified.  If the key input is encrypted and
           --ppaassssiinn is not given a pass phrase will be prompted for.

       --iinnffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE
           The key input format; unspecified by default.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --ppaassssiinn _a_r_g
           The password source for the key input.

           For more information about the format of aarrgg see
           ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1).

       --ppuubbiinn
           By default a private key is read from the input.  With this option
           only the public components are read.

   OOuuttppuutt ooppttiioonnss
       --oouutt _f_i_l_e_n_a_m_e
           This specifies the output filename to save the encoded and/or text
           output of key or standard output if this option is not specified.
           If any cipher option is set but no --ppaassssoouutt is given then a pass
           phrase will be prompted for.  The output filename should nnoott be the
           same as the input filename.

       --oouuttffoorrmm DDEERR|PPEEMM
           The key output format; the default is PPEEMM.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --_cc_ii_pp_hh_ee_rr
           Encrypt the PEM encoded private key with the supplied cipher. Any
           algorithm name accepted by EEVVPP__ggeett__cciipphheerrbbyynnaammee(()) is acceptable
           such as aaeess112288.  Encryption is not supported for DER output.

       --ppaassssoouutt _a_r_g
           The password source for the output file.

           For more information about the format of aarrgg see
           ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1).

       --ttrraaddiittiioonnaall
           Normally a private key is written using standard format: this is
           PKCS#8 form with the appropriate encryption algorithm (if any). If
           the --ttrraaddiittiioonnaall option is specified then the older "traditional"
           format is used instead.

       --ppuubboouutt
           By default the private and public key is output; this option
           restricts the output to the public components.  This option is
           automatically set if the input is a public key.

           When combined with --tteexxtt, this is equivalent to --tteexxtt__ppuubb.

       --nnoooouutt
           Do not output the key in encoded form.

       --tteexxtt
           Output the various key components in plain text (possibly in
           addition to the PEM encoded form).  This cannot be combined with
           encoded output in DER format.

       --tteexxtt__ppuubb
           Output in text form only the public key components (also for
           private keys).  This cannot be combined with encoded output in DER
           format.

       --eecc__ccoonnvv__ffoorrmm _a_r_g
           This option only applies to elliptic-curve based keys.

           This specifies how the points on the elliptic curve are converted
           into octet strings. Possible values are: ccoommpprreesssseedd (the default
           value), uunnccoommpprreesssseedd and hhyybbrriidd. For more information regarding the
           point conversion forms please read the X9.62 standard.  NNoottee Due to
           patent issues the ccoommpprreesssseedd option is disabled by default for
           binary curves and can be enabled by defining the preprocessor macro
           OOPPEENNSSSSLL__EECC__BBIINN__PPTT__CCOOMMPP at compile time.

       --eecc__ppaarraamm__eenncc _a_r_g
           This option only applies to elliptic curve based public and private
           keys.

           This specifies how the elliptic curve parameters are encoded.
           Possible value are: nnaammeedd__ccuurrvvee, i.e. the ec parameters are
           specified by an OID, or eexxpplliicciitt where the ec parameters are
           explicitly given (see RFC 3279 for the definition of the EC
           parameters structures). The default value is nnaammeedd__ccuurrvvee.  NNoottee the
           iimmpplliicciittllyyCCAA alternative, as specified in RFC 3279, is currently
           not implemented in OpenSSL.

EEXXAAMMPPLLEESS
       To remove the pass phrase on a private key:

        openssl pkey -in key.pem -out keyout.pem

       To encrypt a private key using triple DES:

        openssl pkey -in key.pem -des3 -out keyout.pem

       To convert a private key from PEM to DER format:

        openssl pkey -in key.pem -outform DER -out keyout.der

       To print out the components of a private key to standard output:

        openssl pkey -in key.pem -text -noout

       To print out the public components of a private key to standard output:

        openssl pkey -in key.pem -text_pub -noout

       To just output the public part of a private key:

        openssl pkey -in key.pem -pubout -out pubkey.pem

       To change the EC parameters encoding to eexxpplliicciitt:

        openssl pkey -in key.pem -ec_param_enc explicit -out keyout.pem

       To change the EC point conversion form to ccoommpprreesssseedd:

        openssl pkey -in key.pem -ec_conv_form compressed -out keyout.pem

SSEEEE AALLSSOO
       ooppeennssssll(1), ooppeennssssll--ggeennppkkeeyy(1), ooppeennssssll--rrssaa(1), ooppeennssssll--ppkkccss88(1),
       ooppeennssssll--ddssaa(1), ooppeennssssll--ggeennrrssaa(1), ooppeennssssll--ggeennddssaa(1)

HHIISSTTOORRYY
       The --eennggiinnee option was deprecated in OpenSSL 3.0.

CCOOPPYYRRIIGGHHTT
       Copyright 2006-2021 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



3.0.1                             2022-01-31               OPENSSL-PKEY(1ossl)
