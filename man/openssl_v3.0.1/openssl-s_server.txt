OPENSSL-S_SERVER(1ossl)             OpenSSL            OPENSSL-S_SERVER(1ossl)



NNAAMMEE
       openssl-s_server - SSL/TLS server program

SSYYNNOOPPSSIISS
       ooppeennssssll ss__sseerrvveerr [--hheellpp] [--ppoorrtt _+_i_n_t] [--aacccceepptt _v_a_l] [--uunniixx _v_a_l] [--44]
       [--66] [--uunnlliinnkk] [--ccoonntteexxtt _v_a_l] [--vveerriiffyy _i_n_t] [--VVeerriiffyy _i_n_t] [--cceerrtt
       _i_n_f_i_l_e] [--cceerrtt22 _i_n_f_i_l_e] [--cceerrttffoorrmm DDEERR|PPEEMM|PP1122] [--cceerrtt__cchhaaiinn _i_n_f_i_l_e]
       [--bbuuiilldd__cchhaaiinn] [--sseerrvveerriinnffoo _v_a_l] [--kkeeyy _f_i_l_e_n_a_m_e|_u_r_i] [--kkeeyy22
       _f_i_l_e_n_a_m_e|_u_r_i] [--kkeeyyffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE] [--ppaassss _v_a_l] [--ddcceerrtt _i_n_f_i_l_e]
       [--ddcceerrttffoorrmm DDEERR|PPEEMM|PP1122] [--ddcceerrtt__cchhaaiinn _i_n_f_i_l_e] [--ddkkeeyy _f_i_l_e_n_a_m_e|_u_r_i]
       [--ddkkeeyyffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE] [--ddppaassss _v_a_l] [--nnbbiioo__tteesstt] [--ccrrllff]
       [--ddeebbuugg] [--mmssgg] [--mmssggffiillee _o_u_t_f_i_l_e] [--ssttaattee] [--nnoocceerrtt] [--qquuiieett]
       [--nnoo__rreessuummee__eepphheemmeerraall] [--wwwwww] [--WWWWWW] [--hhttttpp__sseerrvveerr__bbiinnmmooddee]
       [--nnoo__ccaa__nnaammeess] [--iiggnnoorree__uunneexxppeecctteedd__eeooff] [--sseerrvveerrnnaammee]
       [--sseerrvveerrnnaammee__ffaattaall] [--ttllsseexxttddeebbuugg] [--HHTTTTPP] [--iidd__pprreeffiixx _v_a_l]
       [--kkeeyymmaatteexxppoorrtt _v_a_l] [--kkeeyymmaatteexxppoorrttlleenn _+_i_n_t] [--CCRRLL _i_n_f_i_l_e] [--CCRRLLffoorrmm
       DDEERR|PPEEMM] [--ccrrll__ddoowwnnllooaadd] [--cchhaaiinnCCAAffiillee _i_n_f_i_l_e] [--cchhaaiinnCCAAppaatthh _d_i_r]
       [--cchhaaiinnCCAAssttoorree _u_r_i] [--vveerriiffyyCCAAffiillee _i_n_f_i_l_e] [--vveerriiffyyCCAAppaatthh _d_i_r]
       [--vveerriiffyyCCAAssttoorree _u_r_i] [--nnoo__ccaacchhee] [--eexxtt__ccaacchhee] [--vveerriiffyy__rreettuurrnn__eerrrroorr]
       [--vveerriiffyy__qquuiieett] [--iiggnn__eeooff] [--nnoo__iiggnn__eeooff] [--nnoo__eettmm] [--ssttaattuuss]
       [--ssttaattuuss__vveerrbboossee] [--ssttaattuuss__ttiimmeeoouutt _i_n_t] [--pprrooxxyy
       _[_h_t_t_p_[_s_]_:_/_/_]_[_u_s_e_r_i_n_f_o_@_]_h_o_s_t_[_:_p_o_r_t_]_[_/_p_a_t_h_]] [--nnoo__pprrooxxyy _a_d_d_r_e_s_s_e_s]
       [--ssttaattuuss__uurrll _v_a_l] [--ssttaattuuss__ffiillee _i_n_f_i_l_e] [--ssssll__ccoonnffiigg _v_a_l] [--ttrraaccee]
       [--sseeccuurriittyy__ddeebbuugg] [--sseeccuurriittyy__ddeebbuugg__vveerrbboossee] [--bbrriieeff] [--rreevv] [--aassyynncc]
       [--mmaaxx__sseenndd__ffrraagg _+_i_n_t] [--sspplliitt__sseenndd__ffrraagg _+_i_n_t] [--mmaaxx__ppiippeelliinneess _+_i_n_t]
       [--nnaacccceepptt _+_i_n_t] [--rreeaadd__bbuuff _+_i_n_t] [--bbuuggss] [--nnoo__ccoommpp] [--ccoommpp]
       [--nnoo__ttiicckkeett] [--sseerrvveerrpprreeff] [--lleeggaaccyy__rreenneeggoottiiaattiioonn] [--nnoo__rreenneeggoottiiaattiioonn]
       [--nnoo__rreessuummppttiioonn__oonn__rreenneegg] [--nnoo__lleeggaaccyy__sseerrvveerr__ccoonnnneecctt]
       [--aallllooww__nnoo__ddhhee__kkeexx] [--pprriioorriittiizzee__cchhaacchhaa] [--ssttrriicctt] [--ssiiggaallggss _v_a_l]
       [--cclliieenntt__ssiiggaallggss _v_a_l] [--ggrroouuppss _v_a_l] [--ccuurrvveess _v_a_l] [--nnaammeedd__ccuurrvvee _v_a_l]
       [--cciipphheerr _v_a_l] [--cciipphheerrssuuiitteess _v_a_l] [--ddhhppaarraamm _i_n_f_i_l_e] [--rreeccoorrdd__ppaaddddiinngg
       _v_a_l] [--ddeebbuugg__bbrrookkeenn__pprroottooccooll] [--nnbbiioo] [--ppsskk__iiddeennttiittyy _v_a_l] [--ppsskk__hhiinntt
       _v_a_l] [--ppsskk _v_a_l] [--ppsskk__sseessssiioonn _f_i_l_e] [--ssrrppvvffiillee _i_n_f_i_l_e] [--ssrrppuusseerrsseeeedd
       _v_a_l] [--ttiimmeeoouutt] [--mmttuu _+_i_n_t] [--lliisstteenn] [--ssccttpp] [--ssccttpp__llaabbeell__bbuugg]
       [--uussee__ssrrttpp _v_a_l] [--nnoo__ddhhee] [--nneexxttpprroottoonneegg _v_a_l] [--aallppnn _v_a_l] [--sseennddffiillee]
       [--kkeeyyllooggffiillee _o_u_t_f_i_l_e] [--rreeccvv__mmaaxx__eeaarrllyy__ddaattaa _i_n_t] [--mmaaxx__eeaarrllyy__ddaattaa _i_n_t]
       [--eeaarrllyy__ddaattaa] [--ssttaatteelleessss] [--aannttii__rreeppllaayy] [--nnoo__aannttii__rreeppllaayy]
       [--nnuumm__ttiicckkeettss] [--nnaammeeoopptt _o_p_t_i_o_n] [--nnoo__ssssll33] [--nnoo__ttllss11] [--nnoo__ttllss11__11]
       [--nnoo__ttllss11__22] [--nnoo__ttllss11__33] [--ssssll33] [--ttllss11] [--ttllss11__11] [--ttllss11__22] [--ttllss11__33]
       [--ddttllss] [--ddttllss11] [--ddttllss11__22] [--aallllooww__pprrooxxyy__cceerrttss] [--aattttiimmee _t_i_m_e_s_t_a_m_p]
       [--nnoo__cchheecckk__ttiimmee] [--cchheecckk__ssss__ssiigg] [--ccrrll__cchheecckk] [--ccrrll__cchheecckk__aallll]
       [--eexxpplliicciitt__ppoolliiccyy] [--eexxtteennddeedd__ccrrll] [--iiggnnoorree__ccrriittiiccaall] [--iinnhhiibbiitt__aannyy]
       [--iinnhhiibbiitt__mmaapp] [--ppaarrttiiaall__cchhaaiinn] [--ppoolliiccyy _a_r_g] [--ppoolliiccyy__cchheecckk]
       [--ppoolliiccyy__pprriinntt] [--ppuurrppoossee _p_u_r_p_o_s_e] [--ssuuiitteeBB__112288] [--ssuuiitteeBB__112288__oonnllyy]
       [--ssuuiitteeBB__119922] [--ttrruusstteedd__ffiirrsstt] [--nnoo__aalltt__cchhaaiinnss] [--uussee__ddeellttaass]
       [--aauutthh__lleevveell _n_u_m] [--vveerriiffyy__ddeepptthh _n_u_m] [--vveerriiffyy__eemmaaiill _e_m_a_i_l]
       [--vveerriiffyy__hhoossttnnaammee _h_o_s_t_n_a_m_e] [--vveerriiffyy__iipp _i_p] [--vveerriiffyy__nnaammee _n_a_m_e]
       [--xx550099__ssttrriicctt] [--iissssuueerr__cchheecckkss] [--bbuuggss] [--nnoo__ccoommpp] [--ccoommpp] [--nnoo__ttiicckkeett]
       [--sseerrvveerrpprreeff] [--cclliieenntt__rreenneeggoottiiaattiioonn] [--lleeggaaccyy__rreenneeggoottiiaattiioonn]
       [--nnoo__rreenneeggoottiiaattiioonn] [--nnoo__rreessuummppttiioonn__oonn__rreenneegg] [--lleeggaaccyy__sseerrvveerr__ccoonnnneecctt]
       [--nnoo__lleeggaaccyy__sseerrvveerr__ccoonnnneecctt] [--nnoo__eettmm] [--aallllooww__nnoo__ddhhee__kkeexx]
       [--pprriioorriittiizzee__cchhaacchhaa] [--ssttrriicctt] [--ssiiggaallggss _a_l_g_s] [--cclliieenntt__ssiiggaallggss _a_l_g_s]
       [--ggrroouuppss _g_r_o_u_p_s] [--ccuurrvveess _c_u_r_v_e_s] [--nnaammeedd__ccuurrvvee _c_u_r_v_e] [--cciipphheerr
       _c_i_p_h_e_r_s] [--cciipphheerrssuuiitteess _1_._3_c_i_p_h_e_r_s] [--mmiinn__pprroottooccooll _m_i_n_p_r_o_t]
       [--mmaaxx__pprroottooccooll _m_a_x_p_r_o_t] [--rreeccoorrdd__ppaaddddiinngg _p_a_d_d_i_n_g]
       [--ddeebbuugg__bbrrookkeenn__pprroottooccooll] [--nnoo__mmiiddddlleebbooxx] [--xxkkeeyy _i_n_f_i_l_e] [--xxcceerrtt _f_i_l_e]
       [--xxcchhaaiinn _f_i_l_e] [--xxcchhaaiinn__bbuuiilldd _f_i_l_e] [--xxcceerrttffoorrmm DDEERR|PPEEMM]> [--xxkkeeyyffoorrmm
       DDEERR|PPEEMM]> [--CCAAffiillee _f_i_l_e] [--nnoo--CCAAffiillee] [--CCAAppaatthh _d_i_r] [--nnoo--CCAAppaatthh]
       [--CCAAssttoorree _u_r_i] [--nnoo--CCAAssttoorree] [--rraanndd _f_i_l_e_s] [--wwrriitteerraanndd _f_i_l_e] [--eennggiinnee
       _i_d] [--pprroovviiddeerr _n_a_m_e] [--pprroovviiddeerr--ppaatthh _p_a_t_h] [--pprrooppqquueerryy _p_r_o_p_q]

DDEESSCCRRIIPPTTIIOONN
       This command implements a generic SSL/TLS server which listens for
       connections on a given port using SSL/TLS.

OOPPTTIIOONNSS
       In addition to the options below, this command also supports the common
       and server only options documented "Supported Command Line Commands" in
       SSSSLL__CCOONNFF__ccmmdd(3)

       --hheellpp
           Print out a usage message.

       --ppoorrtt _+_i_n_t
           The TCP port to listen on for connections. If not specified 4433 is
           used.

       --aacccceepptt _v_a_l
           The optional TCP host and port to listen on for connections. If not
           specified, *:4433 is used.

       --uunniixx _v_a_l
           Unix domain socket to accept on.

       --44  Use IPv4 only.

       --66  Use IPv6 only.

       --uunnlliinnkk
           For -unix, unlink any existing socket first.

       --ccoonntteexxtt _v_a_l
           Sets the SSL context id. It can be given any string value. If this
           option is not present a default value will be used.

       --vveerriiffyy _i_n_t, --VVeerriiffyy _i_n_t
           The verify depth to use. This specifies the maximum length of the
           client certificate chain and makes the server request a certificate
           from the client. With the --vveerriiffyy option a certificate is requested
           but the client does not have to send one, with the --VVeerriiffyy option
           the client must supply a certificate or an error occurs.

           If the cipher suite cannot request a client certificate (for
           example an anonymous cipher suite or PSK) this option has no
           effect.

       --cceerrtt _i_n_f_i_l_e
           The certificate to use, most servers cipher suites require the use
           of a certificate and some require a certificate with a certain
           public key type: for example the DSS cipher suites require a
           certificate containing a DSS (DSA) key. If not specified then the
           filename _s_e_r_v_e_r_._p_e_m will be used.

       --cceerrtt22 _i_n_f_i_l_e
           The certificate file to use for servername; default is
           "server2.pem".

       --cceerrttffoorrmm DDEERR|PPEEMM|PP1122
           The server certificate file format; unspecified by default.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --cceerrtt__cchhaaiinn
           A file or URI of untrusted certificates to use when attempting to
           build the certificate chain related to the certificate specified
           via the --cceerrtt option.  The input can be in PEM, DER, or PKCS#12
           format.

       --bbuuiilldd__cchhaaiinn
           Specify whether the application should build the server certificate
           chain to be provided to the client.

       --sseerrvveerriinnffoo _v_a_l
           A file containing one or more blocks of PEM data.  Each PEM block
           must encode a TLS ServerHello extension (2 bytes type, 2 bytes
           length, followed by "length" bytes of extension data).  If the
           client sends an empty TLS ClientHello extension matching the type,
           the corresponding ServerHello extension will be returned.

       --kkeeyy _f_i_l_e_n_a_m_e|_u_r_i
           The private key to use. If not specified then the certificate file
           will be used.

       --kkeeyy22 _f_i_l_e_n_a_m_e|_u_r_i
           The private Key file to use for servername if not given via --cceerrtt22.

       --kkeeyyffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE
           The key format; unspecified by default.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --ppaassss _v_a_l
           The private key and certificate file password source.  For more
           information about the format of _v_a_l, see
           ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1).

       --ddcceerrtt _i_n_f_i_l_e, --ddkkeeyy _f_i_l_e_n_a_m_e|_u_r_i
           Specify an additional certificate and private key, these behave in
           the same manner as the --cceerrtt and --kkeeyy options except there is no
           default if they are not specified (no additional certificate and
           key is used). As noted above some cipher suites require a
           certificate containing a key of a certain type. Some cipher suites
           need a certificate carrying an RSA key and some a DSS (DSA) key. By
           using RSA and DSS certificates and keys a server can support
           clients which only support RSA or DSS cipher suites by using an
           appropriate certificate.

       --ddcceerrtt__cchhaaiinn
           A file or URI of untrusted certificates to use when attempting to
           build the server certificate chain when a certificate specified via
           the --ddcceerrtt option is in use.  The input can be in PEM, DER, or
           PKCS#12 format.

       --ddcceerrttffoorrmm DDEERR|PPEEMM|PP1122
           The format of the additional certificate file; unspecified by
           default.  See ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --ddkkeeyyffoorrmm DDEERR|PPEEMM|PP1122|EENNGGIINNEE
           The format of the additional private key; unspecified by default.
           See ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --ddppaassss _v_a_l
           The passphrase for the additional private key and certificate.  For
           more information about the format of _v_a_l, see
           ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1).

       --nnbbiioo__tteesstt
           Tests non blocking I/O.

       --ccrrllff
           This option translated a line feed from the terminal into CR+LF.

       --ddeebbuugg
           Print extensive debugging information including a hex dump of all
           traffic.

       --sseeccuurriittyy__ddeebbuugg
           Print output from SSL/TLS security framework.

       --sseeccuurriittyy__ddeebbuugg__vveerrbboossee
           Print more output from SSL/TLS security framework

       --mmssgg
           Show all protocol messages with hex dump.

       --mmssggffiillee _o_u_t_f_i_l_e
           File to send output of --mmssgg or --ttrraaccee to, default standard output.

       --ssttaattee
           Prints the SSL session states.

       --CCRRLL _i_n_f_i_l_e
           The CRL file to use.

       --CCRRLLffoorrmm DDEERR|PPEEMM
           The CRL file format; unspecified by default.  See
           ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for details.

       --ccrrll__ddoowwnnllooaadd
           Download CRLs from distribution points given in CDP extensions of
           certificates

       --vveerriiffyyCCAAffiillee _f_i_l_e_n_a_m_e
           A file in PEM format CA containing trusted certificates to use for
           verifying client certificates.

       --vveerriiffyyCCAAppaatthh _d_i_r
           A directory containing trusted certificates to use for verifying
           client certificates.  This directory must be in "hash format", see
           ooppeennssssll--vveerriiffyy(1) for more information.

       --vveerriiffyyCCAAssttoorree _u_r_i
           The URI of a store containing trusted certificates to use for
           verifying client certificates.

       --cchhaaiinnCCAAffiillee _f_i_l_e
           A file in PEM format containing trusted certificates to use when
           attempting to build the server certificate chain.

       --cchhaaiinnCCAAppaatthh _d_i_r
           A directory containing trusted certificates to use for building the
           server certificate chain provided to the client.  This directory
           must be in "hash format", see ooppeennssssll--vveerriiffyy(1) for more
           information.

       --cchhaaiinnCCAAssttoorree _u_r_i
           The URI of a store containing trusted certificates to use for
           building the server certificate chain provided to the client.  The
           URI may indicate a single certificate, as well as a collection of
           them.  With URIs in the "file:" scheme, this acts as --cchhaaiinnCCAAffiillee
           or --cchhaaiinnCCAAppaatthh, depending on if the URI indicates a directory or a
           single file.  See oossssll__ssttoorree--ffiillee(7) for more information on the
           "file:" scheme.

       --nnoocceerrtt
           If this option is set then no certificate is used. This restricts
           the cipher suites available to the anonymous ones (currently just
           anonymous DH).

       --qquuiieett
           Inhibit printing of session and certificate information.

       --nnoo__rreessuummee__eepphheemmeerraall
           Disable caching and tickets if ephemeral (EC)DH is used.

       --ttllsseexxttddeebbuugg
           Print a hex dump of any TLS extensions received from the server.

       --wwwwww
           Sends a status message back to the client when it connects. This
           includes information about the ciphers used and various session
           parameters.  The output is in HTML format so this option can be
           used with a web browser.  The special URL "/renegcert" turns on
           client cert validation, and "/reneg" tells the server to request
           renegotiation.  The --eeaarrllyy__ddaattaa option cannot be used with this
           option.

       --WWWWWW, --HHTTTTPP
           Emulates a simple web server. Pages will be resolved relative to
           the current directory, for example if the URL
           "https://myhost/page.html" is requested the file _._/_p_a_g_e_._h_t_m_l will
           be sent.  If the --HHTTTTPP flag is used, the files are sent directly,
           and should contain any HTTP response headers (including status
           response line).  If the --WWWWWW option is used, the response headers
           are generated by the server, and the file extension is examined to
           determine the CCoonntteenntt--TTyyppee header.  Extensions of "html", "htm",
           and "php" are "text/html" and all others are "text/plain".  In
           addition, the special URL "/stats" will return status information
           like the --wwwwww option.  Neither of these options can be used in
           conjunction with --eeaarrllyy__ddaattaa.

       --hhttttpp__sseerrvveerr__bbiinnmmooddee
           When acting as web-server (using option --WWWWWW or --HHTTTTPP) open files
           requested by the client in binary mode.

       --nnoo__ccaa__nnaammeess
           Disable TLS Extension CA Names. You may want to disable it for
           security reasons or for compatibility with some Windows TLS
           implementations crashing when this extension is larger than 1024
           bytes.

       --iiggnnoorree__uunneexxppeecctteedd__eeooff
           Some TLS implementations do not send the mandatory close_notify
           alert on shutdown. If the application tries to wait for the
           close_notify alert but the peer closes the connection without
           sending it, an error is generated. When this option is enabled the
           peer does not need to send the close_notify alert and a closed
           connection will be treated as if the close_notify alert was
           received.  For more information on shutting down a connection, see
           SSSSLL__sshhuuttddoowwnn(3).

       --sseerrvveerrnnaammee
           Servername for HostName TLS extension.

       --sseerrvveerrnnaammee__ffaattaall
           On servername mismatch send fatal alert (default: warning alert).

       --iidd__pprreeffiixx _v_a_l
           Generate SSL/TLS session IDs prefixed by _v_a_l. This is mostly useful
           for testing any SSL/TLS code (e.g. proxies) that wish to deal with
           multiple servers, when each of which might be generating a unique
           range of session IDs (e.g. with a certain prefix).

       --kkeeyymmaatteexxppoorrtt
           Export keying material using label.

       --kkeeyymmaatteexxppoorrttlleenn
           Export the given number of bytes of keying material; default 20.

       --nnoo__ccaacchhee
           Disable session cache.

       --eexxtt__ccaacchhee.
           Disable internal cache, set up and use external cache.

       --vveerriiffyy__rreettuurrnn__eerrrroorr
           Verification errors normally just print a message but allow the
           connection to continue, for debugging purposes.  If this option is
           used, then verification errors close the connection.

       --vveerriiffyy__qquuiieett
           No verify output except verify errors.

       --iiggnn__eeooff
           Ignore input EOF (default: when --qquuiieett).

       --nnoo__iiggnn__eeooff
           Do not ignore input EOF.

       --nnoo__eettmm
           Disable Encrypt-then-MAC negotiation.

       --ssttaattuuss
           Enables certificate status request support (aka OCSP stapling).

       --ssttaattuuss__vveerrbboossee
           Enables certificate status request support (aka OCSP stapling) and
           gives a verbose printout of the OCSP response.

       --ssttaattuuss__ttiimmeeoouutt _i_n_t
           Sets the timeout for OCSP response to _i_n_t seconds.

       --pprrooxxyy _[_h_t_t_p_[_s_]_:_/_/_]_[_u_s_e_r_i_n_f_o_@_]_h_o_s_t_[_:_p_o_r_t_]_[_/_p_a_t_h_]
           The HTTP(S) proxy server to use for reaching the OCSP server unless
           --nnoo__pprrooxxyy applies, see below.  The proxy port defaults to 80 or 443
           if the scheme is "https"; apart from that the optional "http://" or
           "https://" prefix is ignored, as well as any userinfo and path
           components.  Defaults to the environment variable "http_proxy" if
           set, else "HTTP_PROXY" in case no TLS is used, otherwise
           "https_proxy" if set, else "HTTPS_PROXY".

       --nnoo__pprrooxxyy _a_d_d_r_e_s_s_e_s
           List of IP addresses and/or DNS names of servers not to use an
           HTTP(S) proxy for, separated by commas and/or whitespace (where in
           the latter case the whole argument must be enclosed in "...").
           Default is from the environment variable "no_proxy" if set, else
           "NO_PROXY".

       --ssttaattuuss__uurrll _v_a_l
           Sets a fallback responder URL to use if no responder URL is present
           in the server certificate. Without this option an error is returned
           if the server certificate does not contain a responder address.
           The optional userinfo and fragment URL components are ignored.  Any
           given query component is handled as part of the path component.

       --ssttaattuuss__ffiillee _i_n_f_i_l_e
           Overrides any OCSP responder URLs from the certificate and always
           provides the OCSP Response stored in the file. The file must be in
           DER format.

       --ssssll__ccoonnffiigg _v_a_l
           Configure SSL_CTX using the given configuration value.

       --ttrraaccee
           Show verbose trace output of protocol messages.

       --bbrriieeff
           Provide a brief summary of connection parameters instead of the
           normal verbose output.

       --rreevv
           Simple echo server that sends back received text reversed. Also
           sets --bbrriieeff.  Cannot be used in conjunction with --eeaarrllyy__ddaattaa.

       --aassyynncc
           Switch on asynchronous mode. Cryptographic operations will be
           performed asynchronously. This will only have an effect if an
           asynchronous capable engine is also used via the --eennggiinnee option.
           For test purposes the dummy async engine (dasync) can be used (if
           available).

       --mmaaxx__sseenndd__ffrraagg _+_i_n_t
           The maximum size of data fragment to send.  See
           SSSSLL__CCTTXX__sseett__mmaaxx__sseenndd__ffrraaggmmeenntt(3) for further information.

       --sspplliitt__sseenndd__ffrraagg _+_i_n_t
           The size used to split data for encrypt pipelines. If more data is
           written in one go than this value then it will be split into
           multiple pipelines, up to the maximum number of pipelines defined
           by max_pipelines. This only has an effect if a suitable cipher
           suite has been negotiated, an engine that supports pipelining has
           been loaded, and max_pipelines is greater than 1. See
           SSSSLL__CCTTXX__sseett__sspplliitt__sseenndd__ffrraaggmmeenntt(3) for further information.

       --mmaaxx__ppiippeelliinneess _+_i_n_t
           The maximum number of encrypt/decrypt pipelines to be used. This
           will only have an effect if an engine has been loaded that supports
           pipelining (e.g. the dasync engine) and a suitable cipher suite has
           been negotiated. The default value is 1.  See
           SSSSLL__CCTTXX__sseett__mmaaxx__ppiippeelliinneess(3) for further information.

       --nnaacccceepptt _+_i_n_t
           The server will exit after receiving the specified number of
           connections, default unlimited.

       --rreeaadd__bbuuff _+_i_n_t
           The default read buffer size to be used for connections. This will
           only have an effect if the buffer size is larger than the size that
           would otherwise be used and pipelining is in use (see
           SSSSLL__CCTTXX__sseett__ddeeffaauulltt__rreeaadd__bbuuffffeerr__lleenn(3) for further information).

       --bbuuggss
           There are several known bugs in SSL and TLS implementations. Adding
           this option enables various workarounds.

       --nnoo__ccoommpp
           Disable negotiation of TLS compression.  TLS compression is not
           recommended and is off by default as of OpenSSL 1.1.0.

       --ccoommpp
           Enable negotiation of TLS compression.  This option was introduced
           in OpenSSL 1.1.0.  TLS compression is not recommended and is off by
           default as of OpenSSL 1.1.0.

       --nnoo__ttiicckkeett
           Disable RFC4507bis session ticket support. This option has no
           effect if TLSv1.3 is negotiated. See --nnuumm__ttiicckkeettss.

       --nnuumm__ttiicckkeettss
           Control the number of tickets that will be sent to the client after
           a full handshake in TLSv1.3. The default number of tickets is 2.
           This option does not affect the number of tickets sent after a
           resumption handshake.

       --sseerrvveerrpprreeff
           Use the server's cipher preferences, rather than the client's
           preferences.

       --pprriioorriittiizzee__cchhaacchhaa
           Prioritize ChaCha ciphers when preferred by clients. Requires
           --sseerrvveerrpprreeff.

       --nnoo__rreessuummppttiioonn__oonn__rreenneegg
           Set the SSSSLL__OOPP__NNOO__SSEESSSSIIOONN__RREESSUUMMPPTTIIOONN__OONN__RREENNEEGGOOTTIIAATTIIOONN option.

       --cclliieenntt__ssiiggaallggss _v_a_l
           Signature algorithms to support for client certificate
           authentication (colon-separated list).

       --nnaammeedd__ccuurrvvee _v_a_l
           Specifies the elliptic curve to use. NOTE: this is single curve,
           not a list.  For a list of all possible curves, use:

               $ openssl ecparam -list_curves

       --cciipphheerr _v_a_l
           This allows the list of TLSv1.2 and below ciphersuites used by the
           server to be modified. This list is combined with any TLSv1.3
           ciphersuites that have been configured. When the client sends a
           list of supported ciphers the first client cipher also included in
           the server list is used. Because the client specifies the
           preference order, the order of the server cipherlist is irrelevant.
           See ooppeennssssll--cciipphheerrss(1) for more information.

       --cciipphheerrssuuiitteess _v_a_l
           This allows the list of TLSv1.3 ciphersuites used by the server to
           be modified.  This list is combined with any TLSv1.2 and below
           ciphersuites that have been configured. When the client sends a
           list of supported ciphers the first client cipher also included in
           the server list is used. Because the client specifies the
           preference order, the order of the server cipherlist is irrelevant.
           See ooppeennssssll--cciipphheerrss(1) command for more information. The format for
           this list is a simple colon (":") separated list of TLSv1.3
           ciphersuite names.

       --ddhhppaarraamm _i_n_f_i_l_e
           The DH parameter file to use. The ephemeral DH cipher suites
           generate keys using a set of DH parameters. If not specified then
           an attempt is made to load the parameters from the server
           certificate file.  If this fails then a static set of parameters
           hard coded into this command will be used.

       --nnbbiioo
           Turns on non blocking I/O.

       --ttiimmeeoouutt
           Enable timeouts.

       --mmttuu
           Set link-layer MTU.

       --ppsskk__iiddeennttiittyy _v_a_l
           Expect the client to send PSK identity _v_a_l when using a PSK cipher
           suite, and warn if they do not.  By default, the expected PSK
           identity is the string "Client_identity".

       --ppsskk__hhiinntt _v_a_l
           Use the PSK identity hint _v_a_l when using a PSK cipher suite.

       --ppsskk _v_a_l
           Use the PSK key _v_a_l when using a PSK cipher suite. The key is given
           as a hexadecimal number without leading 0x, for example -psk
           1a2b3c4d.  This option must be provided in order to use a PSK
           cipher.

       --ppsskk__sseessssiioonn _f_i_l_e
           Use the pem encoded SSL_SESSION data stored in _f_i_l_e as the basis of
           a PSK.  Note that this will only work if TLSv1.3 is negotiated.

       --ssrrppvvffiillee
           The verifier file for SRP.  This option is deprecated.

       --ssrrppuusseerrsseeeedd
           A seed string for a default user salt.  This option is deprecated.

       --lliisstteenn
           This option can only be used in conjunction with one of the DTLS
           options above.  With this option, this command will listen on a UDP
           port for incoming connections.  Any ClientHellos that arrive will
           be checked to see if they have a cookie in them or not.  Any
           without a cookie will be responded to with a HelloVerifyRequest.
           If a ClientHello with a cookie is received then this command will
           connect to that peer and complete the handshake.

       --ssccttpp
           Use SCTP for the transport protocol instead of UDP in DTLS. Must be
           used in conjunction with --ddttllss, --ddttllss11 or --ddttllss11__22. This option is
           only available where OpenSSL has support for SCTP enabled.

       --ssccttpp__llaabbeell__bbuugg
           Use the incorrect behaviour of older OpenSSL implementations when
           computing endpoint-pair shared secrets for DTLS/SCTP. This allows
           communication with older broken implementations but breaks
           interoperability with correct implementations. Must be used in
           conjunction with --ssccttpp. This option is only available where OpenSSL
           has support for SCTP enabled.

       --uussee__ssrrttpp
           Offer SRTP key management with a colon-separated profile list.

       --nnoo__ddhhee
           If this option is set then no DH parameters will be loaded
           effectively disabling the ephemeral DH cipher suites.

       --aallppnn _v_a_l, --nneexxttpprroottoonneegg _v_a_l
           These flags enable the Application-Layer Protocol Negotiation or
           Next Protocol Negotiation (NPN) extension, respectively. ALPN is
           the IETF standard and replaces NPN.  The _v_a_l list is a comma-
           separated list of supported protocol names.  The list should
           contain the most desirable protocols first.  Protocol names are
           printable ASCII strings, for example "http/1.1" or "spdy/3".  The
           flag --nneexxttpprroottoonneegg cannot be specified if --ttllss11__33 is used.

       --sseennddffiillee
           If this option is set and KTLS is enabled, SSSSLL__sseennddffiillee(()) will be
           used instead of BBIIOO__wwrriittee(()) to send the HTTP response requested by
           a client.  This option is only valid if --WWWWWW or --HHTTTTPP is specified.

       --kkeeyyllooggffiillee _o_u_t_f_i_l_e
           Appends TLS secrets to the specified keylog file such that external
           programs (like Wireshark) can decrypt TLS connections.

       --mmaaxx__eeaarrllyy__ddaattaa _i_n_t
           Change the default maximum early data bytes that are specified for
           new sessions and any incoming early data (when used in conjunction
           with the --eeaarrllyy__ddaattaa flag). The default value is approximately 16k.
           The argument must be an integer greater than or equal to 0.

       --rreeccvv__mmaaxx__eeaarrllyy__ddaattaa _i_n_t
           Specify the hard limit on the maximum number of early data bytes
           that will be accepted.

       --eeaarrllyy__ddaattaa
           Accept early data where possible. Cannot be used in conjunction
           with --wwwwww, --WWWWWW, --HHTTTTPP or --rreevv.

       --ssttaatteelleessss
           Require TLSv1.3 cookies.

       --aannttii__rreeppllaayy, --nnoo__aannttii__rreeppllaayy
           Switches replay protection on or off, respectively. Replay
           protection is on by default unless overridden by a configuration
           file. When it is on, OpenSSL will automatically detect if a session
           ticket has been used more than once, TLSv1.3 has been negotiated,
           and early data is enabled on the server. A full handshake is forced
           if a session ticket is used a second or subsequent time. Any early
           data that was sent will be rejected.

       --nnaammeeoopptt _o_p_t_i_o_n
           This specifies how the subject or issuer names are displayed.  See
           ooppeennssssll--nnaammeeddiissppllaayy--ooppttiioonnss(1) for details.

       --nnoo__ssssll33, --nnoo__ttllss11, --nnoo__ttllss11__11, --nnoo__ttllss11__22, --nnoo__ttllss11__33, --ssssll33, --ttllss11,
       --ttllss11__11, --ttllss11__22, --ttllss11__33
           See "TLS Version Options" in ooppeennssssll(1).

       --ddttllss, --ddttllss11, --ddttllss11__22
           These specify the use of DTLS instead of TLS.  See "TLS Version
           Options" in ooppeennssssll(1).

       --bbuuggss, --ccoommpp, --nnoo__ccoommpp, --nnoo__ttiicckkeett, --sseerrvveerrpprreeff, --cclliieenntt__rreenneeggoottiiaattiioonn,
       --lleeggaaccyy__rreenneeggoottiiaattiioonn, --nnoo__rreenneeggoottiiaattiioonn, --nnoo__rreessuummppttiioonn__oonn__rreenneegg,
       --lleeggaaccyy__sseerrvveerr__ccoonnnneecctt, --nnoo__lleeggaaccyy__sseerrvveerr__ccoonnnneecctt, --nnoo__eettmm
       --aallllooww__nnoo__ddhhee__kkeexx, --pprriioorriittiizzee__cchhaacchhaa, --ssttrriicctt, --ssiiggaallggss _a_l_g_s,
       --cclliieenntt__ssiiggaallggss _a_l_g_s, --ggrroouuppss _g_r_o_u_p_s, --ccuurrvveess _c_u_r_v_e_s, --nnaammeedd__ccuurrvvee
       _c_u_r_v_e, --cciipphheerr _c_i_p_h_e_r_s, --cciipphheerrssuuiitteess _1_._3_c_i_p_h_e_r_s, --mmiinn__pprroottooccooll
       _m_i_n_p_r_o_t, --mmaaxx__pprroottooccooll _m_a_x_p_r_o_t, --rreeccoorrdd__ppaaddddiinngg _p_a_d_d_i_n_g,
       --ddeebbuugg__bbrrookkeenn__pprroottooccooll, --nnoo__mmiiddddlleebbooxx
           See "SUPPORTED COMMAND LINE COMMANDS" in SSSSLL__CCOONNFF__ccmmdd(3) for
           details.

       --xxkkeeyy _i_n_f_i_l_e, --xxcceerrtt _f_i_l_e, --xxcchhaaiinn _f_i_l_e, --xxcchhaaiinn__bbuuiilldd _f_i_l_e, --xxcceerrttffoorrmm
       DDEERR|PPEEMM, --xxkkeeyyffoorrmm DDEERR|PPEEMM
           Set extended certificate verification options.  See "Extended
           Verification Options" in ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) for
           details.

       --CCAAffiillee _f_i_l_e, --nnoo--CCAAffiillee, --CCAAppaatthh _d_i_r, --nnoo--CCAAppaatthh, --CCAAssttoorree _u_r_i,
       --nnoo--CCAAssttoorree
           See "Trusted Certificate Options" in
           ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) for details.

       --rraanndd _f_i_l_e_s, --wwrriitteerraanndd _f_i_l_e
           See "Random State Options" in ooppeennssssll(1) for details.

       --eennggiinnee _i_d
           See "Engine Options" in ooppeennssssll(1).  This option is deprecated.

       --pprroovviiddeerr _n_a_m_e
       --pprroovviiddeerr--ppaatthh _p_a_t_h
       --pprrooppqquueerryy _p_r_o_p_q
           See "Provider Options" in ooppeennssssll(1), pprroovviiddeerr(7), and pprrooppeerrttyy(7).

       --aallllooww__pprrooxxyy__cceerrttss, --aattttiimmee, --nnoo__cchheecckk__ttiimmee, --cchheecckk__ssss__ssiigg, --ccrrll__cchheecckk,
       --ccrrll__cchheecckk__aallll, --eexxpplliicciitt__ppoolliiccyy, --eexxtteennddeedd__ccrrll, --iiggnnoorree__ccrriittiiccaall,
       --iinnhhiibbiitt__aannyy, --iinnhhiibbiitt__mmaapp, --nnoo__aalltt__cchhaaiinnss, --ppaarrttiiaall__cchhaaiinn, --ppoolliiccyy,
       --ppoolliiccyy__cchheecckk, --ppoolliiccyy__pprriinntt, --ppuurrppoossee, --ssuuiitteeBB__112288, --ssuuiitteeBB__112288__oonnllyy,
       --ssuuiitteeBB__119922, --ttrruusstteedd__ffiirrsstt, --uussee__ddeellttaass, --aauutthh__lleevveell, --vveerriiffyy__ddeepptthh,
       --vveerriiffyy__eemmaaiill, --vveerriiffyy__hhoossttnnaammee, --vveerriiffyy__iipp, --vveerriiffyy__nnaammee, --xx550099__ssttrriicctt
       --iissssuueerr__cchheecckkss
           Set various options of certificate chain verification.  See
           "Verification Options" in ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) for
           details.

           If the server requests a client certificate, then verification
           errors are displayed, for debugging, but the command will proceed
           unless the --vveerriiffyy__rreettuurrnn__eerrrroorr option is used.

CCOONNNNEECCTTEEDD CCOOMMMMAANNDDSS
       If a connection request is established with an SSL client and neither
       the --wwwwww nor the --WWWWWW option has been used then normally any data
       received from the client is displayed and any key presses will be sent
       to the client.

       Certain commands are also recognized which perform special operations.
       These commands are a letter which must appear at the start of a line.
       They are listed below.

       qq   End the current SSL connection but still accept new connections.

       QQ   End the current SSL connection and exit.

       rr   Renegotiate the SSL session (TLSv1.2 and below only).

       RR   Renegotiate the SSL session and request a client certificate
           (TLSv1.2 and below only).

       PP   Send some plain text down the underlying TCP connection: this
           should cause the client to disconnect due to a protocol violation.

       SS   Print out some session cache status information.

       kk   Send a key update message to the client (TLSv1.3 only)

       KK   Send a key update message to the client and request one back
           (TLSv1.3 only)

       cc   Send a certificate request to the client (TLSv1.3 only)

NNOOTTEESS
       This command can be used to debug SSL clients. To accept connections
       from a web browser the command:

        openssl s_server -accept 443 -www

       can be used for example.

       Although specifying an empty list of CAs when requesting a client
       certificate is strictly speaking a protocol violation, some SSL clients
       interpret this to mean any CA is acceptable. This is useful for
       debugging purposes.

       The session parameters can printed out using the ooppeennssssll--sseessss__iidd(1)
       command.

BBUUGGSS
       Because this program has a lot of options and also because some of the
       techniques used are rather old, the C source for this command is rather
       hard to read and not a model of how things should be done.  A typical
       SSL server program would be much simpler.

       The output of common ciphers is wrong: it just gives the list of
       ciphers that OpenSSL recognizes and the client supports.

       There should be a way for this command to print out details of any
       unknown cipher suites a client says it supports.

SSEEEE AALLSSOO
       ooppeennssssll(1), ooppeennssssll--sseessss__iidd(1), ooppeennssssll--ss__cclliieenntt(1),
       ooppeennssssll--cciipphheerrss(1), SSSSLL__CCOONNFF__ccmmdd(3), SSSSLL__CCTTXX__sseett__mmaaxx__sseenndd__ffrraaggmmeenntt(3),
       SSSSLL__CCTTXX__sseett__sspplliitt__sseenndd__ffrraaggmmeenntt(3), SSSSLL__CCTTXX__sseett__mmaaxx__ppiippeelliinneess(3),
       oossssll__ssttoorree--ffiillee(7)

HHIISSTTOORRYY
       The -no_alt_chains option was added in OpenSSL 1.1.0.

       The -allow-no-dhe-kex and -prioritize_chacha options were added in
       OpenSSL 1.1.1.

       The --ssrrppvvffiillee, --ssrrppuusseerrsseeeedd, and --eennggiinnee option were deprecated in
       OpenSSL 3.0.

CCOOPPYYRRIIGGHHTT
       Copyright 2000-2021 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



3.0.1                             2022-01-31           OPENSSL-S_SERVER(1ossl)
