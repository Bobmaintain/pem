OPENSSL-S_TIME(1ossl)               OpenSSL              OPENSSL-S_TIME(1ossl)



NNAAMMEE
       openssl-s_time - SSL/TLS performance timing program

SSYYNNOOPPSSIISS
       ooppeennssssll ss__ttiimmee [--hheellpp] [--ccoonnnneecctt _h_o_s_t:_p_o_r_t] [--wwwwww _p_a_g_e] [--cceerrtt
       _f_i_l_e_n_a_m_e] [--kkeeyy _f_i_l_e_n_a_m_e] [--rreeuussee] [--nneeww] [--vveerriiffyy _d_e_p_t_h] [--ttiimmee
       _s_e_c_o_n_d_s] [--ssssll33] [--ttllss11] [--ttllss11__11] [--ttllss11__22] [--ttllss11__33] [--bbuuggss] [--cciipphheerr
       _c_i_p_h_e_r_l_i_s_t] [--cciipphheerrssuuiitteess _v_a_l] [--nnaammeeoopptt _o_p_t_i_o_n] [--ccaaffiillee _f_i_l_e]
       [--CCAAffiillee _f_i_l_e] [--nnoo--CCAAffiillee] [--CCAAppaatthh _d_i_r] [--nnoo--CCAAppaatthh] [--CCAAssttoorree _u_r_i]
       [--nnoo--CCAAssttoorree] [--pprroovviiddeerr _n_a_m_e] [--pprroovviiddeerr--ppaatthh _p_a_t_h] [--pprrooppqquueerryy _p_r_o_p_q]

DDEESSCCRRIIPPTTIIOONN
       This command implements a generic SSL/TLS client which connects to a
       remote host using SSL/TLS. It can request a page from the server and
       includes the time to transfer the payload data in its timing
       measurements.  It measures the number of connections within a given
       timeframe, the amount of data transferred (if any), and calculates the
       average time spent for one connection.

OOPPTTIIOONNSS
       --hheellpp
           Print out a usage message.

       --ccoonnnneecctt _h_o_s_t:_p_o_r_t
           This specifies the host and optional port to connect to.

       --wwwwww _p_a_g_e
           This specifies the page to GET from the server. A value of '/' gets
           the _i_n_d_e_x_._h_t_m_l page. If this parameter is not specified, then this
           command will only perform the handshake to establish SSL
           connections but not transfer any payload data.

       --cceerrtt _c_e_r_t_n_a_m_e
           The certificate to use, if one is requested by the server. The
           default is not to use a certificate. The file is in PEM format.

       --kkeeyy _k_e_y_f_i_l_e
           The private key to use. If not specified then the certificate file
           will be used. The file is in PEM format.

       --vveerriiffyy _d_e_p_t_h
           The verify depth to use. This specifies the maximum length of the
           server certificate chain and turns on server certificate
           verification.  Currently the verify operation continues after
           errors so all the problems with a certificate chain can be seen. As
           a side effect the connection will never fail due to a server
           certificate verify failure.

       --nneeww
           Performs the timing test using a new session ID for each
           connection.  If neither --nneeww nor --rreeuussee are specified, they are
           both on by default and executed in sequence.

       --rreeuussee
           Performs the timing test using the same session ID; this can be
           used as a test that session caching is working. If neither --nneeww nor
           --rreeuussee are specified, they are both on by default and executed in
           sequence.

       --bbuuggss
           There are several known bugs in SSL and TLS implementations. Adding
           this option enables various workarounds.

       --cciipphheerr _c_i_p_h_e_r_l_i_s_t
           This allows the TLSv1.2 and below cipher list sent by the client to
           be modified.  This list will be combined with any TLSv1.3
           ciphersuites that have been configured. Although the server
           determines which cipher suite is used it should take the first
           supported cipher in the list sent by the client. See
           ooppeennssssll--cciipphheerrss(1) for more information.

       --cciipphheerrssuuiitteess _v_a_l
           This allows the TLSv1.3 ciphersuites sent by the client to be
           modified. This list will be combined with any TLSv1.2 and below
           ciphersuites that have been configured. Although the server
           determines which cipher suite is used it should take the first
           supported cipher in the list sent by the client. See
           ooppeennssssll--cciipphheerrss(1) for more information. The format for this list
           is a simple colon (":") separated list of TLSv1.3 ciphersuite
           names.

       --ttiimmee _l_e_n_g_t_h
           Specifies how long (in seconds) this command should establish
           connections and optionally transfer payload data from a server.
           Server and client performance and the link speed determine how many
           connections it can establish.

       --nnaammeeoopptt _o_p_t_i_o_n
           This specifies how the subject or issuer names are displayed.  See
           ooppeennssssll--nnaammeeddiissppllaayy--ooppttiioonnss(1) for details.

       --CCAAffiillee _f_i_l_e, --nnoo--CCAAffiillee, --CCAAppaatthh _d_i_r, --nnoo--CCAAppaatthh, --CCAAssttoorree _u_r_i,
       --nnoo--CCAAssttoorree
           See "Trusted Certificate Options" in
           ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) for details.

       --pprroovviiddeerr _n_a_m_e
       --pprroovviiddeerr--ppaatthh _p_a_t_h
       --pprrooppqquueerryy _p_r_o_p_q
           See "Provider Options" in ooppeennssssll(1), pprroovviiddeerr(7), and pprrooppeerrttyy(7).

       --ccaaffiillee _f_i_l_e
           This is an obsolete synonym for --CCAAffiillee.

       --ssssll33, --ttllss11, --ttllss11__11, --ttllss11__22, --ttllss11__33
           See "TLS Version Options" in ooppeennssssll(1).

NNOOTTEESS
       This command can be used to measure the performance of an SSL
       connection.  To connect to an SSL HTTP server and get the default page
       the command

        openssl s_time -connect servername:443 -www / -CApath yourdir -CAfile yourfile.pem -cipher commoncipher [-ssl3]

       would typically be used (https uses port 443). _c_o_m_m_o_n_c_i_p_h_e_r is a cipher
       to which both client and server can agree, see the ooppeennssssll--cciipphheerrss(1)
       command for details.

       If the handshake fails then there are several possible causes, if it is
       nothing obvious like no client certificate then the --bbuuggss and --ssssll33
       options can be tried in case it is a buggy server. In particular you
       should play with these options bbeeffoorree submitting a bug report to an
       OpenSSL mailing list.

       A frequent problem when attempting to get client certificates working
       is that a web client complains it has no certificates or gives an empty
       list to choose from. This is normally because the server is not sending
       the clients certificate authority in its "acceptable CA list" when it
       requests a certificate. By using ooppeennssssll--ss__cclliieenntt(1) the CA list can be
       viewed and checked. However, some servers only request client
       authentication after a specific URL is requested. To obtain the list in
       this case it is necessary to use the --pprreexxiitt option of
       ooppeennssssll--ss__cclliieenntt(1) and send an HTTP request for an appropriate page.

       If a certificate is specified on the command line using the --cceerrtt
       option it will not be used unless the server specifically requests a
       client certificate. Therefore, merely including a client certificate on
       the command line is no guarantee that the certificate works.

BBUUGGSS
       Because this program does not have all the options of the
       ooppeennssssll--ss__cclliieenntt(1) program to turn protocols on and off, you may not
       be able to measure the performance of all protocols with all servers.

       The --vveerriiffyy option should really exit if the server verification fails.

HHIISSTTOORRYY
       The --ccaaffiillee option was deprecated in OpenSSL 3.0.

SSEEEE AALLSSOO
       ooppeennssssll(1), ooppeennssssll--ss__cclliieenntt(1), ooppeennssssll--ss__sseerrvveerr(1),
       ooppeennssssll--cciipphheerrss(1), oossssll__ssttoorree--ffiillee(7)

CCOOPPYYRRIIGGHHTT
       Copyright 2004-2021 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



3.0.1                             2022-01-31             OPENSSL-S_TIME(1ossl)
