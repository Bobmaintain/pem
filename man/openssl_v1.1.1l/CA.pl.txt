CA.PL(1)                            OpenSSL                           CA.PL(1)



NNAAMMEE
       CA.pl - friendlier interface for OpenSSL certificate programs

SSYYNNOOPPSSIISS
       CCAA..ppll --?? | --hh | --hheellpp

       CCAA..ppll --nneewwcceerrtt | --nneewwrreeqq | --nneewwrreeqq--nnooddeess | --xxssiiggnn | --ssiiggnn | --ssiiggnnCCAA |
       --ssiiggnncceerrtt | --ccrrll | --nneewwccaa [--eexxttrraa--ccmmdd extra-params]

       CCAA..ppll --ppkkccss1122 [--eexxttrraa--ppkkccss1122 extra-params] [cceerrttnnaammee]

       CCAA..ppll --vveerriiffyy [--eexxttrraa--vveerriiffyy extra-params] cceerrttffiillee...

       CCAA..ppll --rreevvookkee [--eexxttrraa--ccaa extra-params] cceerrttffiillee [rreeaassoonn]

DDEESSCCRRIIPPTTIIOONN
       The CCAA..ppll script is a perl script that supplies the relevant command
       line arguments to the ooppeennssssll command for some common certificate
       operations.  It is intended to simplify the process of certificate
       creation and management by the use of some simple options.

OOPPTTIIOONNSS
       ??, --hh, --hheellpp
           Prints a usage message.

       --nneewwcceerrtt
           Creates a new self signed certificate. The private key is written
           to the file "newkey.pem" and the request written to the file
           "newreq.pem".  This argument invokes ooppeennssssll rreeqq command.

       --nneewwrreeqq
           Creates a new certificate request. The private key is written to
           the file "newkey.pem" and the request written to the file
           "newreq.pem".  Executes ooppeennssssll rreeqq command below the hood.

       --nneewwrreeqq--nnooddeess
           Is like --nneewwrreeqq except that the private key will not be encrypted.
           Uses ooppeennssssll rreeqq command.

       --nneewwccaa
           Creates a new CA hierarchy for use with the ccaa program (or the
           --ssiiggnncceerrtt and --xxssiiggnn options). The user is prompted to enter the
           filename of the CA certificates (which should also contain the
           private key) or by hitting ENTER details of the CA will be prompted
           for. The relevant files and directories are created in a directory
           called "demoCA" in the current directory.  ooppeennssssll rreeqq and ooppeennssssll
           ccaa commands are get invoked.

       --ppkkccss1122
           Create a PKCS#12 file containing the user certificate, private key
           and CA certificate. It expects the user certificate and private key
           to be in the file "newcert.pem" and the CA certificate to be in the
           file demoCA/cacert.pem, it creates a file "newcert.p12". This
           command can thus be called after the --ssiiggnn option. The PKCS#12 file
           can be imported directly into a browser.  If there is an additional
           argument on the command line it will be used as the "friendly name"
           for the certificate (which is typically displayed in the browser
           list box), otherwise the name "My Certificate" is used.  Delegates
           work to ooppeennssssll ppkkccss1122 command.

       --ssiiggnn, --ssiiggnncceerrtt, --xxssiiggnn
           Calls the ccaa program to sign a certificate request. It expects the
           request to be in the file "newreq.pem". The new certificate is
           written to the file "newcert.pem" except in the case of the --xxssiiggnn
           option when it is written to standard output. Leverages ooppeennssssll ccaa
           command.

       --ssiiggnnCCAA
           This option is the same as the --ssiiggnn option except it uses the
           configuration file section vv33__ccaa and so makes the signed request a
           valid CA certificate. This is useful when creating intermediate CA
           from a root CA.  Extra params are passed on to ooppeennssssll ccaa command.

       --ssiiggnncceerrtt
           This option is the same as --ssiiggnn except it expects a self signed
           certificate to be present in the file "newreq.pem".  Extra params
           are passed on to ooppeennssssll xx550099 and ooppeennssssll ccaa commands.

       --ccrrll
           Generate a CRL. Executes ooppeennssssll ccaa command.

       --rreevvookkee cceerrttffiillee [[rreeaassoonn]]
           Revoke the certificate contained in the specified cceerrttffiillee. An
           optional reason may be specified, and must be one of: uunnssppeecciiffiieedd,
           kkeeyyCCoommpprroommiissee, CCAACCoommpprroommiissee, aaffffiilliiaattiioonnCChhaannggeedd, ssuuppeerrsseeddeedd,
           cceessssaattiioonnOOffOOppeerraattiioonn, cceerrttiiffiiccaatteeHHoolldd, or rreemmoovveeFFrroommCCRRLL.  Leverages
           ooppeennssssll ccaa command.

       --vveerriiffyy
           Verifies certificates against the CA certificate for "demoCA". If
           no certificates are specified on the command line it tries to
           verify the file "newcert.pem".  Invokes ooppeennssssll vveerriiffyy command.

       --eexxttrraa--rreeqq | --eexxttrraa--ccaa | --eexxttrraa--ppkkccss1122 | --eexxttrraa--xx550099 | --eexxttrraa--vveerriiffyy
       <extra-params>
           The purpose of these parameters is to allow optional parameters to
           be supplied to ooppeennssssll that this command executes. The --eexxttrraa--ccmmdd
           are specific to the option being used and the ooppeennssssll command
           getting invoked. For example when this command invokes ooppeennssssll rreeqq
           extra parameters can be passed on with the --eexxttrraa--rreeqq parameter.
           The ooppeennssssll commands being invoked per option are documented below.
           Users should consult ooppeennssssll command documentation for more
           information.

EEXXAAMMPPLLEESS
       Create a CA hierarchy:

        CA.pl -newca

       Complete certificate creation example: create a CA, create a request,
       sign the request and finally create a PKCS#12 file containing it.

        CA.pl -newca
        CA.pl -newreq
        CA.pl -sign
        CA.pl -pkcs12 "My Test Certificate"

DDSSAA CCEERRTTIIFFIICCAATTEESS
       Although the CCAA..ppll creates RSA CAs and requests it is still possible to
       use it with DSA certificates and requests using the rreeqq(1) command
       directly. The following example shows the steps that would typically be
       taken.

       Create some DSA parameters:

        openssl dsaparam -out dsap.pem 1024

       Create a DSA CA certificate and private key:

        openssl req -x509 -newkey dsa:dsap.pem -keyout cacert.pem -out cacert.pem

       Create the CA directories and files:

        CA.pl -newca

       enter cacert.pem when prompted for the CA filename.

       Create a DSA certificate request and private key (a different set of
       parameters can optionally be created first):

        openssl req -out newreq.pem -newkey dsa:dsap.pem

       Sign the request:

        CA.pl -sign

NNOOTTEESS
       Most of the filenames mentioned can be modified by editing the CCAA..ppll
       script.

       If the demoCA directory already exists then the --nneewwccaa command will not
       overwrite it and will do nothing. This can happen if a previous call
       using the --nneewwccaa option terminated abnormally. To get the correct
       behaviour delete the demoCA directory if it already exists.

       Under some environments it may not be possible to run the CCAA..ppll script
       directly (for example Win32) and the default configuration file
       location may be wrong. In this case the command:

        perl -S CA.pl

       can be used and the OOPPEENNSSSSLL__CCOONNFF environment variable changed to point
       to the correct path of the configuration file.

       The script is intended as a simple front end for the ooppeennssssll program
       for use by a beginner. Its behaviour isn't always what is wanted. For
       more control over the behaviour of the certificate commands call the
       ooppeennssssll command directly.

SSEEEE AALLSSOO
       xx550099(1), ccaa(1), rreeqq(1), ppkkccss1122(1), ccoonnffiigg(5)

CCOOPPYYRRIIGGHHTT
       Copyright 2000-2020 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the OpenSSL license (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.



1.1.1l                            2021-08-24                          CA.PL(1)
