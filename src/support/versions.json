{
  "libressl": {
    "2.4.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "140587817895296:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl_lib.c:1307:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass arg] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140511758124416:error:02001002:system library:fopen:No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140511758124416:error:20074002:BIO routines:FILE_CTRL:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "Usage: genpkey [options]",
          "where options may be",
          "-out file",
          "output file",
          "-outform X",
          "output format (DER or PEM)",
          "-pass arg",
          "output file pass phrase source",
          "-<cipher>",
          "use cipher <cipher> to encrypt the key",
          "-paramfile file",
          "parameters file",
          "-algorithm alg",
          "the public key algorithm",
          "-pkeyopt opt:value set the public key algorithm option <opt>",
          "to value <value>",
          "-genparam",
          "generate parameters, not key",
          "-text",
          "print the in text",
          "NB: options order may be important!",
          "See the manual page.",
          "Unknown cipher help"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t \t number of minutes before next update",
          "-ndays n\t \t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "5pTbdQireN5/I",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-embed] [-in file] [-inform fmt] [-nocrypt]",
          "[-noiter] [-nooct] [-nsdb] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-topk8] [-v1 alg] [-v2 alg]",
          "-embed",
          "Generate DSA keys in a broken format",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-nooct",
          "Generate RSA keys in a broken format (no octet)",
          "-nsdb",
          "Generate DSA keys in the broken Netscape DB format",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-AES-128-CBC",
          "-AES-128-CBC-HMAC-SHA1",
          "-AES-128-CFB",
          "",
          "-AES-128-CFB1",
          "-AES-128-CFB8",
          "-AES-128-CTR",
          "-AES-128-ECB",
          "-AES-128-OFB",
          "-AES-128-XTS",
          "-AES-192-CBC",
          "-AES-192-CFB",
          "-AES-192-CFB1",
          "-AES-192-CFB8",
          "-AES-192-CTR",
          "-AES-192-ECB",
          "-AES-192-OFB",
          "-AES-256-CBC",
          "-AES-256-CBC-HMAC-SHA1",
          "-AES-256-CFB",
          "-AES-256-CFB1",
          "-AES-256-CFB8",
          "-AES-256-CTR",
          "-AES-256-ECB",
          "-AES-256-OFB",
          "-AES-256-XTS",
          "-AES128",
          "-AES192",
          "-AES256",
          "-BF",
          "-BF-CBC",
          "-BF-CFB",
          "-BF-ECB",
          "-BF-OFB",
          "-CAMELLIA-128-CBC",
          "-CAMELLIA-128-CFB",
          "-CAMELLIA-128-CFB1",
          "-CAMELLIA-128-CFB8",
          "-CAMELLIA-128-ECB",
          "-CAMELLIA-128-OFB",
          "-CAMELLIA-192-CBC",
          "-CAMELLIA-192-CFB",
          "-CAMELLIA-192-CFB1",
          "-CAMELLIA-192-CFB8",
          "-CAMELLIA-192-ECB",
          "-CAMELLIA-192-OFB",
          "-CAMELLIA-256-CBC",
          "-CAMELLIA-256-CFB",
          "-CAMELLIA-256-CFB1",
          "-CAMELLIA-256-CFB8",
          "-CAMELLIA-256-ECB",
          "-CAMELLIA-256-OFB",
          "-CAMELLIA128",
          "-CAMELLIA192",
          "-CAMELLIA256",
          "-CAST",
          "-CAST-cbc",
          "-CAST5-CBC",
          "-CAST5-CFB",
          "-CAST5-ECB",
          "-CAST5-OFB",
          "-ChaCha",
          "-DES",
          "-DES-CBC",
          "-DES-CFB",
          "-DES-CFB1",
          "-DES-CFB8",
          "-DES-ECB",
          "-DES-EDE",
          "-DES-EDE-CBC",
          "-DES-EDE-CFB",
          "-DES-EDE-OFB",
          "-DES-EDE3",
          "-DES-EDE3-CBC",
          "-DES-EDE3-CFB",
          "-DES-EDE3-CFB1",
          "-DES-EDE3-CFB8",
          "-DES-EDE3-OFB",
          "-DES-OFB",
          "-DES3",
          "-DESX",
          "-DESX-CBC",
          "-GOST 28147-89",
          "-IDEA",
          "-IDEA-CBC",
          "-IDEA-CFB",
          "-IDEA-ECB",
          "-IDEA-OFB",
          "-RC2",
          "-RC2-40-CBC",
          "-RC2-64-CBC",
          "-RC2-CBC",
          "-RC2-CFB",
          "-RC2-ECB",
          "-RC2-OFB",
          "-RC4",
          "-RC4-40",
          "-RC4-HMAC-MD5",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-nextprotoneg arg - set the advertised protocols for the NPN extension (comma-separated list)",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139890675709312:error:02001002:system library:fopen:No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139890675709312:error:20074002:BIO routines:FILE_CTRL:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "2.5.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139932817925504:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1300:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-md5-sha1",
          "to use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass arg] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140255274390912:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140255274390912:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "Usage: genpkey [options]",
          "where options may be",
          "-out file",
          "output file",
          "-outform X",
          "output format (DER or PEM)",
          "-pass arg",
          "output file pass phrase source",
          "-<cipher>",
          "use cipher <cipher> to encrypt the key",
          "-paramfile file",
          "parameters file",
          "-algorithm alg",
          "the public key algorithm",
          "-pkeyopt opt:value set the public key algorithm option <opt>",
          "to value <value>",
          "-genparam",
          "generate parameters, not key",
          "-text",
          "print the in text",
          "NB: options order may be important!",
          "See the manual page.",
          "Unknown cipher help"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "FcKvaL0oK41Po",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-embed] [-in file] [-inform fmt] [-nocrypt]",
          "[-noiter] [-nooct] [-nsdb] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-topk8] [-v1 alg] [-v2 alg]",
          "-embed",
          "Generate DSA keys in a broken format",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-nooct",
          "Generate RSA keys in a broken format (no octet)",
          "-nsdb",
          "Generate DSA keys in the broken Netscape DB format",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-AES-128-CBC",
          "-AES-128-CBC-HMAC-SHA1",
          "-AES-128-CFB",
          "",
          "-AES-128-CFB1",
          "-AES-128-CFB8",
          "-AES-128-CTR",
          "-AES-128-ECB",
          "-AES-128-OFB",
          "-AES-128-XTS",
          "-AES-192-CBC",
          "-AES-192-CFB",
          "-AES-192-CFB1",
          "-AES-192-CFB8",
          "-AES-192-CTR",
          "-AES-192-ECB",
          "-AES-192-OFB",
          "-AES-256-CBC",
          "-AES-256-CBC-HMAC-SHA1",
          "-AES-256-CFB",
          "-AES-256-CFB1",
          "-AES-256-CFB8",
          "-AES-256-CTR",
          "-AES-256-ECB",
          "-AES-256-OFB",
          "-AES-256-XTS",
          "-AES128",
          "-AES192",
          "-AES256",
          "-BF",
          "-BF-CBC",
          "-BF-CFB",
          "-BF-ECB",
          "-BF-OFB",
          "-CAMELLIA-128-CBC",
          "-CAMELLIA-128-CFB",
          "-CAMELLIA-128-CFB1",
          "-CAMELLIA-128-CFB8",
          "-CAMELLIA-128-ECB",
          "-CAMELLIA-128-OFB",
          "-CAMELLIA-192-CBC",
          "-CAMELLIA-192-CFB",
          "-CAMELLIA-192-CFB1",
          "-CAMELLIA-192-CFB8",
          "-CAMELLIA-192-ECB",
          "-CAMELLIA-192-OFB",
          "-CAMELLIA-256-CBC",
          "-CAMELLIA-256-CFB",
          "-CAMELLIA-256-CFB1",
          "-CAMELLIA-256-CFB8",
          "-CAMELLIA-256-ECB",
          "-CAMELLIA-256-OFB",
          "-CAMELLIA128",
          "-CAMELLIA192",
          "-CAMELLIA256",
          "-CAST",
          "-CAST-cbc",
          "-CAST5-CBC",
          "-CAST5-CFB",
          "-CAST5-ECB",
          "-CAST5-OFB",
          "-ChaCha",
          "-DES",
          "-DES-CBC",
          "-DES-CFB",
          "-DES-CFB1",
          "-DES-CFB8",
          "-DES-ECB",
          "-DES-EDE",
          "-DES-EDE-CBC",
          "-DES-EDE-CFB",
          "-DES-EDE-OFB",
          "-DES-EDE3",
          "-DES-EDE3-CBC",
          "-DES-EDE3-CFB",
          "-DES-EDE3-CFB1",
          "-DES-EDE3-CFB8",
          "-DES-EDE3-OFB",
          "-DES-OFB",
          "-DES3",
          "-DESX",
          "-DESX-CBC",
          "-GOST 28147-89",
          "-IDEA",
          "-IDEA-CBC",
          "-IDEA-CFB",
          "-IDEA-ECB",
          "-IDEA-OFB",
          "-RC2",
          "-RC2-40-CBC",
          "-RC2-64-CBC",
          "-RC2-CBC",
          "-RC2-CFB",
          "-RC2-ECB",
          "-RC2-OFB",
          "-RC4",
          "-RC4-40",
          "-RC4-HMAC-MD5",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-nextprotoneg arg - set the advertised protocols for the NPN extension (comma-separated list)",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139626810971520:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139626810971520:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "2.6.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139735042762112:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1324:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-md5-sha1",
          "to use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass arg] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140498607420800:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140498607420800:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "Usage: genpkey [options]",
          "where options may be",
          "-out file",
          "output file",
          "-outform X",
          "output format (DER or PEM)",
          "-pass arg",
          "output file pass phrase source",
          "-<cipher>",
          "use cipher <cipher> to encrypt the key",
          "-paramfile file",
          "parameters file",
          "-algorithm alg",
          "the public key algorithm",
          "-pkeyopt opt:value set the public key algorithm option <opt>",
          "to value <value>",
          "-genparam",
          "generate parameters, not key",
          "-text",
          "print the in text",
          "NB: options order may be important!",
          "See the manual page.",
          "Unknown cipher help"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          ".UJ..qg8dQsz.",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-embed] [-in file] [-inform fmt] [-nocrypt]",
          "[-noiter] [-nooct] [-nsdb] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-topk8] [-v1 alg] [-v2 alg]",
          "-embed",
          "Generate DSA keys in a broken format",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-nooct",
          "Generate RSA keys in a broken format (no octet)",
          "-nsdb",
          "Generate DSA keys in the broken Netscape DB format",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-AES-128-CBC",
          "-AES-128-CBC-HMAC-SHA1",
          "-AES-128-CFB",
          "",
          "-AES-128-CFB1",
          "-AES-128-CFB8",
          "-AES-128-CTR",
          "-AES-128-ECB",
          "-AES-128-OFB",
          "-AES-128-XTS",
          "-AES-192-CBC",
          "-AES-192-CFB",
          "-AES-192-CFB1",
          "-AES-192-CFB8",
          "-AES-192-CTR",
          "-AES-192-ECB",
          "-AES-192-OFB",
          "-AES-256-CBC",
          "-AES-256-CBC-HMAC-SHA1",
          "-AES-256-CFB",
          "-AES-256-CFB1",
          "-AES-256-CFB8",
          "-AES-256-CTR",
          "-AES-256-ECB",
          "-AES-256-OFB",
          "-AES-256-XTS",
          "-AES128",
          "-AES192",
          "-AES256",
          "-BF",
          "-BF-CBC",
          "-BF-CFB",
          "-BF-ECB",
          "-BF-OFB",
          "-CAMELLIA-128-CBC",
          "-CAMELLIA-128-CFB",
          "-CAMELLIA-128-CFB1",
          "-CAMELLIA-128-CFB8",
          "-CAMELLIA-128-ECB",
          "-CAMELLIA-128-OFB",
          "-CAMELLIA-192-CBC",
          "-CAMELLIA-192-CFB",
          "-CAMELLIA-192-CFB1",
          "-CAMELLIA-192-CFB8",
          "-CAMELLIA-192-ECB",
          "-CAMELLIA-192-OFB",
          "-CAMELLIA-256-CBC",
          "-CAMELLIA-256-CFB",
          "-CAMELLIA-256-CFB1",
          "-CAMELLIA-256-CFB8",
          "-CAMELLIA-256-ECB",
          "-CAMELLIA-256-OFB",
          "-CAMELLIA128",
          "-CAMELLIA192",
          "-CAMELLIA256",
          "-CAST",
          "-CAST-cbc",
          "-CAST5-CBC",
          "-CAST5-CFB",
          "-CAST5-ECB",
          "-CAST5-OFB",
          "-ChaCha",
          "-DES",
          "-DES-CBC",
          "-DES-CFB",
          "-DES-CFB1",
          "-DES-CFB8",
          "-DES-ECB",
          "-DES-EDE",
          "-DES-EDE-CBC",
          "-DES-EDE-CFB",
          "-DES-EDE-OFB",
          "-DES-EDE3",
          "-DES-EDE3-CBC",
          "-DES-EDE3-CFB",
          "-DES-EDE3-CFB1",
          "-DES-EDE3-CFB8",
          "-DES-EDE3-OFB",
          "-DES-OFB",
          "-DES3",
          "-DESX",
          "-DESX-CBC",
          "-GOST 28147-89",
          "-IDEA",
          "-IDEA-CBC",
          "-IDEA-CFB",
          "-IDEA-ECB",
          "-IDEA-OFB",
          "-RC2",
          "-RC2-40-CBC",
          "-RC2-64-CBC",
          "-RC2-CBC",
          "-RC2-CFB",
          "-RC2-ECB",
          "-RC2-OFB",
          "-RC4",
          "-RC4-40",
          "-RC4-HMAC-MD5",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "140104301589888:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140104301589888:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "2.7.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139957091862208:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1356:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-md5-sha1",
          "to use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass arg] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140163299362496:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140163299362496:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "euQPK/vT7twmA",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-embed] [-in file] [-inform fmt] [-nocrypt]",
          "[-noiter] [-nooct] [-nsdb] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-topk8] [-v1 alg] [-v2 alg]",
          "-embed",
          "Generate DSA keys in a broken format",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-nooct",
          "Generate RSA keys in a broken format (no octet)",
          "-nsdb",
          "Generate DSA keys in the broken Netscape DB format",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-AES-128-CBC",
          "-AES-128-CBC-HMAC-SHA1",
          "-AES-128-CFB",
          "",
          "-AES-128-CFB1",
          "-AES-128-CFB8",
          "-AES-128-CTR",
          "-AES-128-ECB",
          "-AES-128-OFB",
          "-AES-128-XTS",
          "-AES-192-CBC",
          "-AES-192-CFB",
          "-AES-192-CFB1",
          "-AES-192-CFB8",
          "-AES-192-CTR",
          "-AES-192-ECB",
          "-AES-192-OFB",
          "-AES-256-CBC",
          "-AES-256-CBC-HMAC-SHA1",
          "-AES-256-CFB",
          "-AES-256-CFB1",
          "-AES-256-CFB8",
          "-AES-256-CTR",
          "-AES-256-ECB",
          "-AES-256-OFB",
          "-AES-256-XTS",
          "-AES128",
          "-AES192",
          "-AES256",
          "-BF",
          "-BF-CBC",
          "-BF-CFB",
          "-BF-ECB",
          "-BF-OFB",
          "-CAMELLIA-128-CBC",
          "-CAMELLIA-128-CFB",
          "-CAMELLIA-128-CFB1",
          "-CAMELLIA-128-CFB8",
          "-CAMELLIA-128-ECB",
          "-CAMELLIA-128-OFB",
          "-CAMELLIA-192-CBC",
          "-CAMELLIA-192-CFB",
          "-CAMELLIA-192-CFB1",
          "-CAMELLIA-192-CFB8",
          "-CAMELLIA-192-ECB",
          "-CAMELLIA-192-OFB",
          "-CAMELLIA-256-CBC",
          "-CAMELLIA-256-CFB",
          "-CAMELLIA-256-CFB1",
          "-CAMELLIA-256-CFB8",
          "-CAMELLIA-256-ECB",
          "-CAMELLIA-256-OFB",
          "-CAMELLIA128",
          "-CAMELLIA192",
          "-CAMELLIA256",
          "-CAST",
          "-CAST-cbc",
          "-CAST5-CBC",
          "-CAST5-CFB",
          "-CAST5-ECB",
          "-CAST5-OFB",
          "-ChaCha",
          "-DES",
          "-DES-CBC",
          "-DES-CFB",
          "-DES-CFB1",
          "-DES-CFB8",
          "-DES-ECB",
          "-DES-EDE",
          "-DES-EDE-CBC",
          "-DES-EDE-CFB",
          "-DES-EDE-OFB",
          "-DES-EDE3",
          "-DES-EDE3-CBC",
          "-DES-EDE3-CFB",
          "-DES-EDE3-CFB1",
          "-DES-EDE3-CFB8",
          "-DES-EDE3-OFB",
          "-DES-OFB",
          "-DES3",
          "-DESX",
          "-DESX-CBC",
          "-GOST 28147-89",
          "-IDEA",
          "-IDEA-CBC",
          "-IDEA-CFB",
          "-IDEA-ECB",
          "-IDEA-OFB",
          "-RC2",
          "-RC2-40-CBC",
          "-RC2-64-CBC",
          "-RC2-CBC",
          "-RC2-CFB",
          "-RC2-ECB",
          "-RC2-OFB",
          "-RC4",
          "-RC4-40",
          "-RC4-HMAC-MD5",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "140047214651072:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140047214651072:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "2.8.3": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "140042783368896:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1355:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-md5-sha1",
          "to use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass arg] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "139905008117440:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139905008117440:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "kCzvG9eKrCvcM",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-AES-128-CBC",
          "-AES-128-CBC-HMAC-SHA1",
          "-AES-128-CFB",
          "",
          "-AES-128-CFB1",
          "-AES-128-CFB8",
          "-AES-128-CTR",
          "-AES-128-ECB",
          "-AES-128-OFB",
          "-AES-128-XTS",
          "-AES-192-CBC",
          "-AES-192-CFB",
          "-AES-192-CFB1",
          "-AES-192-CFB8",
          "-AES-192-CTR",
          "-AES-192-ECB",
          "-AES-192-OFB",
          "-AES-256-CBC",
          "-AES-256-CBC-HMAC-SHA1",
          "-AES-256-CFB",
          "-AES-256-CFB1",
          "-AES-256-CFB8",
          "-AES-256-CTR",
          "-AES-256-ECB",
          "-AES-256-OFB",
          "-AES-256-XTS",
          "-AES128",
          "-AES192",
          "-AES256",
          "-BF",
          "-BF-CBC",
          "-BF-CFB",
          "-BF-ECB",
          "-BF-OFB",
          "-CAMELLIA-128-CBC",
          "-CAMELLIA-128-CFB",
          "-CAMELLIA-128-CFB1",
          "-CAMELLIA-128-CFB8",
          "-CAMELLIA-128-ECB",
          "-CAMELLIA-128-OFB",
          "-CAMELLIA-192-CBC",
          "-CAMELLIA-192-CFB",
          "-CAMELLIA-192-CFB1",
          "-CAMELLIA-192-CFB8",
          "-CAMELLIA-192-ECB",
          "-CAMELLIA-192-OFB",
          "-CAMELLIA-256-CBC",
          "-CAMELLIA-256-CFB",
          "-CAMELLIA-256-CFB1",
          "-CAMELLIA-256-CFB8",
          "-CAMELLIA-256-ECB",
          "-CAMELLIA-256-OFB",
          "-CAMELLIA128",
          "-CAMELLIA192",
          "-CAMELLIA256",
          "-CAST",
          "-CAST-cbc",
          "-CAST5-CBC",
          "-CAST5-CFB",
          "-CAST5-ECB",
          "-CAST5-OFB",
          "-ChaCha",
          "-DES",
          "-DES-CBC",
          "-DES-CFB",
          "-DES-CFB1",
          "-DES-CFB8",
          "-DES-ECB",
          "-DES-EDE",
          "-DES-EDE-CBC",
          "-DES-EDE-CFB",
          "-DES-EDE-OFB",
          "-DES-EDE3",
          "-DES-EDE3-CBC",
          "-DES-EDE3-CFB",
          "-DES-EDE3-CFB1",
          "-DES-EDE3-CFB8",
          "-DES-EDE3-OFB",
          "-DES-OFB",
          "-DES3",
          "-DESX",
          "-DESX-CBC",
          "-GOST 28147-89",
          "-IDEA",
          "-IDEA-CBC",
          "-IDEA-CFB",
          "-IDEA-ECB",
          "-IDEA-OFB",
          "-RC2",
          "-RC2-40-CBC",
          "-RC2-64-CBC",
          "-RC2-CBC",
          "-RC2-CFB",
          "-RC2-ECB",
          "-RC2-OFB",
          "-RC4",
          "-RC4-40",
          "-RC4-HMAC-MD5",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "140368255555264:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140368255555264:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "2.9.2": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139798574413632:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1389:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-streebog512",
          "to use the streebog512 message digest algorithm",
          "-streebog256",
          "to use the streebog256 message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-md5-sha1",
          "to use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-sm3",
          "to use the sm3 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140663555303232:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140663555303232:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "VepVdbb0BlsKY",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "140530483889984:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140530483889984:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "3.0.2": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "140163024836416:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1385:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "usage: dgst [-cdr] [-binary] [-digest] [-hex] [-hmac key] [-keyform fmt]",
          "[-mac algorithm] [-macopt nm:v] [-out file] [-passin arg]",
          "[-prverify file] [-sign file] [-signature file]",
          "[-sigopt nm:v] [-verify file] [file ...]",
          "-binary",
          "Output the digest or signature in binary form",
          "-c",
          "Print the digest in two-digit groups separated by colons",
          "-d",
          "Print BIO debugging information",
          "-hex",
          "Output as hex dump",
          "-hmac key",
          "Create hashed MAC with key",
          "-keyform format",
          "Key file format (PEM)",
          "-mac algorithm",
          "Create MAC (not necessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-out file",
          "Output to file rather than stdout",
          "-passin arg",
          "Input file passphrase source",
          "-prverify file",
          "Verify a signature using private key in file",
          "-r",
          "Output the digest in coreutils format",
          "-sign file",
          "Sign digest using private key in file",
          "-signature file",
          "Signature to verify",
          "-sigopt nm:v",
          "Signature parameter",
          "-verify file",
          "Verify a signature using public key in file",
          "-gost-mac",
          "To use the gost-mac message digest algorithm",
          "-streebog512",
          "To use the streebog512 message digest algorithm",
          "-streebog256",
          "To use the streebog256 message digest algorithm",
          "-md_gost94",
          "To use the md_gost94 message digest algorithm",
          "-md4",
          "To use the md4 message digest algorithm",
          "-md5",
          "To use the md5 message digest algorithm",
          "-md5-sha1",
          "To use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "To use the ripemd160 message digest algorithm",
          "-sha1",
          "To use the sha1 message digest algorithm",
          "-sha224",
          "To use the sha224 message digest algorithm",
          "-sha256",
          "To use the sha256 message digest algorithm",
          "-sha384",
          "To use the sha384 message digest algorithm",
          "-sha512",
          "To use the sha512 message digest algorithm",
          "-sm3",
          "To use the sm3 message digest algorithm",
          "-whirlpool",
          "To use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-modulus] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-modulus",
          "Print the DSA public value",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140472090769216:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140472090769216:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 |",
          "-des | -des3 | -idea] [-out file] [-passout src] paramfile",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout src",
          "Output file passphrase source"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [-3 | -f4] [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-out file] [-passout arg] [numbits]",
          "-3",
          "Use 3 for the E value",
          "-f4",
          "Use F4 (0x10001) for the E value",
          "-F4",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout arg",
          "Output file passphrase source"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "GRWfJSyB7LVU2",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "usage: pkcs12 [-aes128 | -aes192 | -aes256 | -camellia128 |",
          "-camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-cacerts] [-CAfile file] [-caname name]",
          "[-CApath directory] [-certfile file] [-certpbe alg]",
          "[-chain] [-clcerts] [-CSP name] [-descert] [-export]",
          "[-in file] [-info] [-inkey file] [-keyex] [-keypbe alg]",
          "[-keysig] [-LMK] [-macalg alg] [-maciter] [-name name]",
          "[-nocerts] [-nodes] [-noiter] [-nokeys] [-nomac]",
          "[-nomaciter] [-nomacver] [-noout] [-out file]",
          "[-passin arg] [-passout arg] [-password arg] [-twopass]",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt private keys with DES",
          "-des3",
          "Encrypt private keys with triple DES (default)",
          "-idea",
          "Encrypt private keys with IDEA",
          "-cacerts",
          "Only output CA certificates",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-caname name",
          "Use name as CA friendly name (can be used more than once)",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-certfile file",
          "Add all certs in file",
          "-certpbe alg",
          "Specify certificate PBE algorithm (default RC2-40)",
          "-chain",
          "Add certificate chain",
          "-clcerts",
          "Only output client certificates",
          "-CSP name",
          "Microsoft CSP name",
          "-descert",
          "Encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-export",
          "Output PKCS#12 file",
          "-in file",
          "Input filename",
          "-info",
          "Give info about PKCS#12 structure",
          "-inkey file",
          "Private key if not infile",
          "-keyex",
          "Set MS key exchange type",
          "-keypbe alg",
          "Specify private key PBE algorithm (default 3DES)",
          "-keysig",
          "Set MS key signature type",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-macalg alg",
          "Digest algorithm used in MAC (default SHA1)",
          "-maciter",
          "Use MAC iteration",
          "-name name",
          "Use name as friendly name",
          "-nocerts",
          "Don't output certificates",
          "-nodes",
          "Don't encrypt private keys",
          "-noiter",
          "Don't use encryption iteration",
          "-nokeys",
          "Don't output private keys",
          "-nomac",
          "Don't generate MAC",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomacver",
          "Don't verify MAC",
          "-noout",
          "Don't output anything, just verify",
          "-out file",
          "Output filename",
          "-passin arg",
          "Input file passphrase source",
          "-passout arg",
          "Output file passphrase source",
          "-password arg",
          "Set import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC curve groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "140478734214976:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140478734214976:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "3.1.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "140614059120448:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1394:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-keyopt nm:v",
          "set public key parameters",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "usage: dgst [-cdr] [-binary] [-digest] [-hex] [-hmac key] [-keyform fmt]",
          "[-mac algorithm] [-macopt nm:v] [-out file] [-passin arg]",
          "[-prverify file] [-sign file] [-signature file]",
          "[-sigopt nm:v] [-verify file] [file ...]",
          "-binary",
          "Output the digest or signature in binary form",
          "-c",
          "Print the digest in two-digit groups separated by colons",
          "-d",
          "Print BIO debugging information",
          "-hex",
          "Output as hex dump",
          "-hmac key",
          "Create hashed MAC with key",
          "-keyform format",
          "Key file format (PEM)",
          "-mac algorithm",
          "Create MAC (not necessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-out file",
          "Output to file rather than stdout",
          "-passin arg",
          "Input file passphrase source",
          "-prverify file",
          "Verify a signature using private key in file",
          "-r",
          "Output the digest in coreutils format",
          "-sign file",
          "Sign digest using private key in file",
          "-signature file",
          "Signature to verify",
          "-sigopt nm:v",
          "Signature parameter",
          "-verify file",
          "Verify a signature using public key in file",
          "-gost-mac",
          "To use the gost-mac message digest algorithm",
          "-streebog512",
          "To use the streebog512 message digest algorithm",
          "-streebog256",
          "To use the streebog256 message digest algorithm",
          "-md_gost94",
          "To use the md_gost94 message digest algorithm",
          "-md4",
          "To use the md4 message digest algorithm",
          "-md5",
          "To use the md5 message digest algorithm",
          "-md5-sha1",
          "To use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "To use the ripemd160 message digest algorithm",
          "-sha1",
          "To use the sha1 message digest algorithm",
          "-sha224",
          "To use the sha224 message digest algorithm",
          "-sha256",
          "To use the sha256 message digest algorithm",
          "-sha384",
          "To use the sha384 message digest algorithm",
          "-sha512",
          "To use the sha512 message digest algorithm",
          "-sm3",
          "To use the sm3 message digest algorithm",
          "-whirlpool",
          "To use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-modulus] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-modulus",
          "Print the DSA public value",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140596011452224:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140596011452224:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 |",
          "-des | -des3 | -idea] [-out file] [-passout src] paramfile",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout src",
          "Output file passphrase source"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [-3 | -f4] [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-out file] [-passout arg] [numbits]",
          "-3",
          "Use 3 for the E value",
          "-f4",
          "Use F4 (0x10001) for the E value",
          "-F4",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout arg",
          "Output file passphrase source"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num\t\t port to run responder on",
          "-index file\t certificate status index file",
          "-CA file\t\t CA certificate",
          "-rsigner file\t responder certificate to sign responses with",
          "-rkey file\t responder key to sign responses with",
          "-rother file\t other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n\t\t number of minutes before next update",
          "-ndays n\t\t number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request"
        ],
        "passwd": [
          "H3W8gv5NKdpms",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "usage: pkcs12 [-aes128 | -aes192 | -aes256 | -camellia128 |",
          "-camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-cacerts] [-CAfile file] [-caname name]",
          "[-CApath directory] [-certfile file] [-certpbe alg]",
          "[-chain] [-clcerts] [-CSP name] [-descert] [-export]",
          "[-in file] [-info] [-inkey file] [-keyex] [-keypbe alg]",
          "[-keysig] [-LMK] [-macalg alg] [-maciter] [-name name]",
          "[-nocerts] [-nodes] [-noiter] [-nokeys] [-nomac]",
          "[-nomaciter] [-nomacver] [-noout] [-out file]",
          "[-passin arg] [-passout arg] [-password arg] [-twopass]",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt private keys with DES",
          "-des3",
          "Encrypt private keys with triple DES (default)",
          "-idea",
          "Encrypt private keys with IDEA",
          "-cacerts",
          "Only output CA certificates",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-caname name",
          "Use name as CA friendly name (can be used more than once)",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-certfile file",
          "Add all certs in file",
          "-certpbe alg",
          "Specify certificate PBE algorithm (default RC2-40)",
          "-chain",
          "Add certificate chain",
          "-clcerts",
          "Only output client certificates",
          "-CSP name",
          "Microsoft CSP name",
          "-descert",
          "Encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-export",
          "Output PKCS#12 file",
          "-in file",
          "Input filename",
          "-info",
          "Give info about PKCS#12 structure",
          "-inkey file",
          "Private key if not infile",
          "-keyex",
          "Set MS key exchange type",
          "-keypbe alg",
          "Specify private key PBE algorithm (default 3DES)",
          "-keysig",
          "Set MS key signature type",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-macalg alg",
          "Digest algorithm used in MAC (default SHA1)",
          "-maciter",
          "Use MAC iteration",
          "-name name",
          "Use name as friendly name",
          "-nocerts",
          "Don't output certificates",
          "-nodes",
          "Don't encrypt private keys",
          "-noiter",
          "Don't use encryption iteration",
          "-nokeys",
          "Don't output private keys",
          "-nomac",
          "Don't generate MAC",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomacver",
          "Don't verify MAC",
          "-noout",
          "Don't output anything, just verify",
          "-out file",
          "Output filename",
          "-passin arg",
          "Input file passphrase source",
          "-passout arg",
          "Output file passphrase source",
          "-password arg",
          "Set import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-addext ..",
          "additional cert extension key=value pair (may be given more than once)",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client args",
          "-4",
          "- Force IPv4",
          "-6",
          "- Force IPv6",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-proxy host:port - connect to http proxy",
          "-verify arg",
          "- turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-tls1_3",
          "- just use TLSv1.3",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_3/-no_tls1_2/-no_tls1_1/-no_tls1 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"lmtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-xmpphost host - connect to this virtual host on the xmpp server",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-groups arg",
          "- specify EC groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appended to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM or DER) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- Inhibit printing of session and certificate information",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-groups arg",
          "- specify EC groups (colon-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139833593911104:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139833593911104:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-attime timestamp] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "3.2.7": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139654062102336:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1417:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-keyopt nm:v",
          "set public key parameters",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "usage: dgst [-cdr] [-binary] [-digest] [-hex] [-hmac key] [-keyform fmt]",
          "[-mac algorithm] [-macopt nm:v] [-out file] [-passin arg]",
          "[-prverify file] [-sign file] [-signature file]",
          "[-sigopt nm:v] [-verify file] [file ...]",
          "-binary",
          "Output the digest or signature in binary form",
          "-c",
          "Print the digest in two-digit groups separated by colons",
          "-d",
          "Print BIO debugging information",
          "-hex",
          "Output as hex dump",
          "-hmac key",
          "Create hashed MAC with key",
          "-keyform format",
          "Key file format (PEM)",
          "-mac algorithm",
          "Create MAC (not necessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-out file",
          "Output to file rather than stdout",
          "-passin arg",
          "Input file passphrase source",
          "-prverify file",
          "Verify a signature using private key in file",
          "-r",
          "Output the digest in coreutils format",
          "-sign file",
          "Sign digest using private key in file",
          "-signature file",
          "Signature to verify",
          "-sigopt nm:v",
          "Signature parameter",
          "-verify file",
          "Verify a signature using public key in file",
          "-gost-mac",
          "To use the gost-mac message digest algorithm",
          "-streebog512",
          "To use the streebog512 message digest algorithm",
          "-streebog256",
          "To use the streebog256 message digest algorithm",
          "-md_gost94",
          "To use the md_gost94 message digest algorithm",
          "-md4",
          "To use the md4 message digest algorithm",
          "-md5",
          "To use the md5 message digest algorithm",
          "-md5-sha1",
          "To use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "To use the ripemd160 message digest algorithm",
          "-sha1",
          "To use the sha1 message digest algorithm",
          "-sha224",
          "To use the sha224 message digest algorithm",
          "-sha256",
          "To use the sha256 message digest algorithm",
          "-sha384",
          "To use the sha384 message digest algorithm",
          "-sha512",
          "To use the sha512 message digest algorithm",
          "-sm3",
          "To use the sm3 message digest algorithm",
          "-whirlpool",
          "To use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-modulus] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-modulus",
          "Print the DSA public value",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "139840191121216:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139840191121216:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 |",
          "-des | -des3 | -idea] [-out file] [-passout src] paramfile",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout src",
          "Output file passphrase source"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [-3 | -f4] [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-out file] [-passout arg] [numbits]",
          "-3",
          "Use 3 for the E value",
          "-f4",
          "Use F4 (0x10001) for the E value",
          "-F4",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout arg",
          "Output file passphrase source"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "usage: ocsp [-CA file] [-CAfile file] [-CApath directory] [-cert file]",
          "[-dgst alg] [-header name value] [-host hostname:port]",
          "[-ignore_err] [-index indexfile] [-issuer file]",
          "[-ndays days] [-nmin minutes] [-no_cert_checks]",
          "[-no_cert_verify] [-no_certs] [-no_chain] [-no_explicit]",
          "[-no_intern] [-no_nonce] [-no_signature_verify] [-nonce]",
          "[-noverify] [-nrequest number] [-out file] [-path path]",
          "[-port portnum] [-req_text] [-reqin file] [-reqout file]",
          "[-resp_key_id] [-resp_no_certs] [-resp_text] [-respin file]",
          "[-respout file] [-rkey file] [-rother file] [-rsigner file]",
          "[-serial num] [-sign_other file] [-signer file]",
          "[-signkey file] [-status_age age] [-text]",
          "[-timeout seconds] [-trust_other] [-url responder_url]",
          "[-VAfile file] [-validity_period nsec] [-verify_other file]",
          "-CA file",
          "CA certificate corresponding to the revocation information",
          "-CAfile file",
          "Trusted certificates file",
          "-CApath directory",
          "Trusted certificates directory",
          "-cert file",
          "Certificate to check",
          "-header name value Add the header name with the value to the request",
          "-host hostname:port",
          "Send OCSP request to host on port",
          "-ignore_err",
          "Ignore the invalid response",
          "-index indexfile",
          "Certificate status index file",
          "-issuer file",
          "Issuer certificate",
          "-ndays days",
          "Number of days before next update",
          "-nmin minutes",
          "Number of minutes before next update",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-no_chain",
          "Don't use certificates in the response",
          "-no_explicit",
          "Don't check the explicit trust for OCSP signing",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-nonce",
          "Add OCSP nonce to request",
          "-noverify",
          "Don't verify response at all",
          "-nrequest number",
          "Number of requests to accept (default unlimited)",
          "-out file",
          "Output filename",
          "-path path",
          "Path to use in OCSP request",
          "-port portnum",
          "Port to run responder on",
          "-req_text",
          "Print text form of request",
          "-reqin file",
          "Read DER encoded OCSP request from \"file\"",
          "-reqout file",
          "Write DER encoded OCSP request to \"file\"",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-resp_text",
          "Print text form of response",
          "-respin file",
          "Read DER encoded OCSP response from \"file\"",
          "-respout file",
          "Write DER encoded OCSP response to \"file\"",
          "-rkey file",
          "Responder key to sign responses with",
          "-rother file",
          "Other certificates to include in response",
          "-rsigner file",
          "Responder certificate to sign responses with",
          "-serial num",
          "Serial number to check",
          "-sign_other file",
          "Additional certificates to include in signed request",
          "-signer file",
          "Certificate to sign OCSP request with",
          "-signkey file",
          "Private key to sign OCSP request with",
          "-status_age age",
          "Maximum status age in seconds",
          "-text",
          "Print text form of request and response",
          "-timeout seconds",
          "Connection timeout to the OCSP responder in seconds",
          "-trust_other",
          "Don't verify additional certificates",
          "-url responder_url OCSP responder URL",
          "-VAfile file",
          "Explicitly trusted responder certificates",
          "-validity_period n Maximum validity discrepancy in seconds",
          "-verify_other file Additional certificates to search for signer"
        ],
        "passwd": [
          "kOxInWqccbEpc",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "usage: pkcs12 [-aes128 | -aes192 | -aes256 | -camellia128 |",
          "-camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-cacerts] [-CAfile file] [-caname name]",
          "[-CApath directory] [-certfile file] [-certpbe alg]",
          "[-chain] [-clcerts] [-CSP name] [-descert] [-export]",
          "[-in file] [-info] [-inkey file] [-keyex] [-keypbe alg]",
          "[-keysig] [-LMK] [-macalg alg] [-maciter] [-name name]",
          "[-nocerts] [-nodes] [-noiter] [-nokeys] [-nomac]",
          "[-nomaciter] [-nomacver] [-noout] [-out file]",
          "[-passin arg] [-passout arg] [-password arg] [-twopass]",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt private keys with DES",
          "-des3",
          "Encrypt private keys with triple DES (default)",
          "-idea",
          "Encrypt private keys with IDEA",
          "-cacerts",
          "Only output CA certificates",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-caname name",
          "Use name as CA friendly name (can be used more than once)",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-certfile file",
          "Add all certs in file",
          "-certpbe alg",
          "Specify certificate PBE algorithm (default RC2-40)",
          "-chain",
          "Add certificate chain",
          "-clcerts",
          "Only output client certificates",
          "-CSP name",
          "Microsoft CSP name",
          "-descert",
          "Encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-export",
          "Output PKCS#12 file",
          "-in file",
          "Input filename",
          "-info",
          "Give info about PKCS#12 structure",
          "-inkey file",
          "Private key if not infile",
          "-keyex",
          "Set MS key exchange type",
          "-keypbe alg",
          "Specify private key PBE algorithm (default 3DES)",
          "-keysig",
          "Set MS key signature type",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-macalg alg",
          "Digest algorithm used in MAC (default SHA1)",
          "-maciter",
          "Use MAC iteration",
          "-name name",
          "Use name as friendly name",
          "-nocerts",
          "Don't output certificates",
          "-nodes",
          "Don't encrypt private keys",
          "-noiter",
          "Don't use encryption iteration",
          "-nokeys",
          "Don't output private keys",
          "-nomac",
          "Don't generate MAC",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomacver",
          "Don't verify MAC",
          "-noout",
          "Don't output anything, just verify",
          "-out file",
          "Output filename",
          "-passin arg",
          "Input file passphrase source",
          "-passout arg",
          "Output file passphrase source",
          "-password arg",
          "Set import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "usage: req [-addext ext] [-asn1-kludge] [-batch] [-config file]",
          "[-days n] [-extensions section] [-in file]",
          "[-inform der | pem] [-key keyfile] [-keyform der | pem]",
          "[-keyout file] [-md4 | -md5 | -sha1] [-modulus]",
          "[-multivalue-rdn] [-nameopt option] [-new] [-newhdr]",
          "[-newkey arg] [-no-asn1-kludge] [-nodes] [-noout]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-pkeyopt opt:value] [-pubkey]",
          "[-reqexts section] [-reqopt option] [-set_serial n]",
          "[-sigopt nm:v] [-subj arg] [-subject] [-text] [-utf8]",
          "[-verbose] [-verify] [-x509]",
          "-addext key=value",
          "Additional certificate extension (may be repeated)",
          "-batch",
          "Operate in batch mode",
          "-config file",
          "Configuration file to use as request template",
          "-days number",
          "Number of days generated certificate is valid for",
          "-extensions section",
          "Config section to use for certificate extensions",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-key file",
          "Private key file",
          "-keyform format",
          "Private key format (DER or PEM (default))",
          "-keyout file",
          "Private key output file",
          "-modulus",
          "Print RSA modulus",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-nameopt arg",
          "Certificate name options",
          "-new",
          "New request",
          "-newhdr",
          "Include 'NEW' in header lines",
          "-newkey param",
          "Generate a new key using given parameters",
          "-nodes",
          "Do not encrypt output private key",
          "-noout",
          "Do not output request",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Private key input password source",
          "-passout source",
          "Private key output password source",
          "-pkeyopt opt:val",
          "Set the public key algorithm option opt to val",
          "-pubkey",
          "Output the public key",
          "-reqexts section",
          "Config section to use for request extensions",
          "-reqopt option",
          "Request text options",
          "-set_serial serial Serial number to use for generated certificate",
          "-sigopt name:val",
          "Signature options",
          "-subj name",
          "Set or modify the request subject",
          "-subject",
          "Output the subject of the request",
          "-text",
          "Print request in text form",
          "-utf8",
          "Input characters are in UTF-8 (default ASCII)",
          "-verbose",
          "Verbose",
          "-verify",
          "Verify signature on request",
          "-x509",
          "Output an X.509 structure instead of a certificate request"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client [-4 | -6] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-certform der | pem] [-check_ss_sig]",
          "[-cipher cipherlist] [-connect host[:port]] [-crl_check]",
          "[-crl_check_all] [-crlf] [-debug] [-dtls1] [-extended_crl]",
          "[-groups list] [-host host] [-ign_eof] [-ignore_critical]",
          "[-issuer_checks] [-key keyfile] [-keyform der | pem]",
          "[-keymatexport label] [-keymatexportlen len] [-legacy_server_connect]",
          "[-msg] [-mtu mtu] [-nbio] [-nbio_test] [-no_comp] [-no_ign_eof]",
          "[-no_legacy_server_connect] [-no_ticket] [-no_tls1] [-no_tls1_1]",
          "[-no_tls1_2] [-no_tls1_3] [-pass arg] [-pause] [-policy_check]",
          "[-port port] [-prexit] [-proxy host:port] [-quiet] [-reconnect]",
          "[-servername name] [-serverpref] [-sess_in file] [-sess_out file]",
          "[-showcerts] [-starttls protocol] [-state] [-status] [-timeout]",
          "[-tls1] [-tls1_1] [-tls1_2] [-tls1_3] [-tlsextdebug]",
          "[-use_srtp profiles] [-verify depth] [-verify_return_error]",
          "[-x509_strict] [-xmpphost host]",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-alpn protocols",
          "Set the advertised protocols for ALPN (comma-separated list)",
          "-bugs",
          "Enable various workarounds for buggy implementations",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use, PEM format assumed",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher cipherlist Preferred cipher to use (see 'openssl ciphers')",
          "-connect host:port Who to connect to (default is localhost:4433)",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-debug",
          "Print extensive debugging information",
          "-dtls1",
          "Just use DTLSv1",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-host host",
          "Use -connect instead",
          "-ign_eof",
          "Ignore input EOF (default when -quiet)",
          "-key file",
          "Private key file to use, if not, -cert file is used",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-msg",
          "Show all protocol messages with hex dump",
          "-mtu mtu",
          "Set the link layer MTU on DTLS connections",
          "-nbio",
          "Turn on non-blocking I/O",
          "-nbio_test",
          "Test non-blocking I/O",
          "-no_ign_eof",
          "Don't ignore input EOF",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-no_ticket",
          "Disable use of RFC4507 session ticket support",
          "-no_tls1",
          "Disable the use of TLSv1",
          "-no_tls1_1",
          "Disable the use of TLSv1.1",
          "-no_tls1_2",
          "Disable the use of TLSv1.2",
          "-no_tls1_3",
          "Disable the use of TLSv1.3",
          "-pass arg",
          "Private key file pass phrase source",
          "-pause",
          "Pause 1 second between each read and write call",
          "-port port",
          "-prexit",
          "Print session information when the program exits",
          "-proxy host:port",
          "Connect to http proxy",
          "-quiet",
          "Inhibit printing of session and certificate info",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-servername name",
          "Set TLS extension servername in ClientHello (SNI)",
          "-serverpref",
          "Use server's cipher preferences",
          "-sess_in file",
          "File to read TLS session from",
          "-sess_out file",
          "File to write TLS session to",
          "-showcerts",
          "Show all server certificates in the chain",
          "-starttls protocol Use the STARTTLS command before starting TLS,",
          "smtp, lmtp, pop3, imap, ftp and xmpp are supported.",
          "-state",
          "Print the TLS session states",
          "-status",
          "Send a certificate status request to the server (OCSP)",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profiles",
          "-verify depth",
          "Turn on peer certificate verification, with a max of depth",
          "-verify_return_error",
          "Return verification error",
          "-xmpphost host",
          "Connect to this virtual host on the xmpp server"
        ],
        "s_server": [
          "usage: s_server [-accept port] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-cert2 file]",
          "[-certform der | pem] [-cipher cipherlist]",
          "[-context id] [-crl_check] [-crl_check_all] [-crlf]",
          "[-dcert file] [-dcertform der | pem] [-debug]",
          "[-dhparam file] [-dkey file] [-dkeyform der | pem]",
          "[-dpass arg] [-dtls1] [-groups list] [-HTTP]",
          "[-id_prefix arg] [-key keyfile] [-key2 keyfile]",
          "[-keyform der | pem] [-keymatexport label]",
          "[-keymatexportlen len] [-msg] [-mtu mtu]",
          "[-named_curve arg] [-nbio] [-nbio_test] [-no_cache]",
          "[-no_dhe] [-no_ecdhe] [-no_ticket] [-no_tls1]",
          "[-no_tls1_1] [-no_tls1_2] [-no_tls1_3] [-no_tmp_rsa]",
          "[-nocert] [-pass arg] [-quiet] [-servername name]",
          "[-servername_fatal] [-serverpref] [-state] [-status]",
          "[-status_timeout nsec] [-status_url url]",
          "[-status_verbose] [-timeout] [-tls1] [-tls1_1]",
          "[-tls1_2] [-tls1_3] [-tlsextdebug] [-use_srtp profiles]",
          "[-Verify depth] [-verify depth] [-verify_return_error]",
          "[-WWW] [-www]",
          "-accept port",
          "Port to accept on (default is 4433)",
          "-alpn protocols",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use",
          "(default is server.pem)",
          "-cert2 file",
          "Certificate file to use for servername",
          "(default is server2.pem)",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher list",
          "List of ciphers to enable (see `openssl ciphers`)",
          "-context id",
          "Set session ID context",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-dcert file",
          "Second certificate file to use (usually for DSA)",
          "-dcertform fmt",
          "Second certificate format (PEM or DER) PEM default",
          "-debug",
          "Print more output",
          "-dhparam file",
          "DH parameter file to use, in cert file if not specified",
          "-dkey file",
          "Second private key file to use (usually for DSA)",
          "-dkeyform fmt",
          "Second key format (PEM or DER) PEM default",
          "-dpass arg",
          "Second private key file pass phrase source",
          "-dtls1",
          "Just talk DTLSv1",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-HTTP",
          "Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-id_prefix arg",
          "Generate SSL/TLS session IDs prefixed by 'arg'",
          "-key file",
          "Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-key2 file",
          "Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-msg",
          "Show protocol messages",
          "-mtu mtu",
          "Set link layer MTU",
          "-nbio",
          "Run with non-blocking I/O",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-no_cache",
          "Disable session cache",
          "-no_comp",
          "Disable SSL/TLS compression",
          "-no_dhe",
          "Disable ephemeral DH",
          "-no_ecdhe",
          "Disable ephemeral ECDH",
          "-no_ticket",
          "Disable use of RFC4507bis session tickets",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-pass arg",
          "Private key file pass phrase source",
          "-quiet",
          "Inhibit printing of session and certificate information",
          "-servername name",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "On mismatch send fatal alert (default warning alert)",
          "-serverpref",
          "Use server's cipher preferences",
          "-state",
          "Print the SSL states",
          "-status",
          "Respond to certificate status requests",
          "-status_timeout nsec",
          "Status request responder timeout",
          "-status_url url",
          "Status request fallback URL",
          "-status_verbose",
          "Enable status request verbose printout",
          "-timeout",
          "Enable timeouts",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "Just talk TLSv1.2",
          "-tls1_3",
          "Just talk TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profile list",
          "-Verify depth",
          "Turn on peer certificate verification, must have a cert",
          "-verify depth",
          "Turn on peer certificate verification",
          "-verify_return_error",
          "Return verification error",
          "-WWW",
          "-www",
          "Respond to a 'GET /' with a status page"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139917953726272:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139917953726272:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-CAfile file] [-CApath directory] [-check_ss_sig]",
          "[-CRLfile file] [-crl_check] [-crl_check_all]",
          "[-explicit_policy] [-extended_crl]",
          "[-ignore_critical] [-inhibit_any] [-inhibit_map]",
          "[-issuer_checks] [-policy_check] [-purpose purpose]",
          "[-trusted file] [-untrusted file] [-verbose]",
          "[-x509_strict] [certificates]",
          "-CAfile file",
          "Certificate Authority file",
          "-CApath path",
          "Certificate Authority path",
          "-CRLfile file",
          "Certificate Revocation List file",
          "-trusted file",
          "Trusted certificates file",
          "-untrusted file",
          "Untrusted certificates file",
          "-verbose",
          "Verbose",
          "Verification options:",
          "-attime epoch",
          "Use epoch as the verification time",
          "-check_ss_sig",
          "Check the root CA self-signed certificate signature",
          "-crl_check",
          "Enable CRL checking for the leaf certificate",
          "-crl_check_all",
          "Enable CRL checking for the entire certificate chain",
          "-explicit_policy",
          "Require explicit policy (per RFC 3280)",
          "-extended_crl",
          "Enable extended CRL support",
          "-ignore_critical",
          "Disable critical extension checking",
          "-inhibit_any",
          "Inhibit any policy (per RFC 3280)",
          "-inhibit_map",
          "Inhibit policy mapping (per RFC 3280)",
          "-issuer_checks",
          "Enable debugging of certificate issuer checks",
          "-policy name",
          "Add given policy to the acceptable set",
          "-policy_check",
          "Enable certificate policy checking",
          "-policy_print",
          "Print policy",
          "-purpose name",
          "Verify for the given purpose",
          "-use_deltas",
          "Use delta CRLS (if present)",
          "-verify_depth num",
          "Limit verification to the given depth",
          "-x509_strict",
          "Use strict X.509 rules (disables workarounds)",
          "Valid purposes:",
          "sslclient",
          "SSL client",
          "sslserver",
          "SSL server",
          "nssslserver",
          "Netscape SSL server",
          "smimesign",
          "S/MIME signing",
          "smimeencrypt",
          "S/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper",
          "OCSP helper",
          "timestampsign",
          "Time Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md5/-sha1",
          "- digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "3.3.5": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk a lot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md5 or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139754803320640:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1428:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-keyopt nm:v",
          "set public key parameters",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "usage: dgst [-cdr] [-binary] [-digest] [-hex] [-hmac key] [-keyform fmt]",
          "[-mac algorithm] [-macopt nm:v] [-out file] [-passin arg]",
          "[-prverify file] [-sign file] [-signature file]",
          "[-sigopt nm:v] [-verify file] [file ...]",
          "-binary",
          "Output the digest or signature in binary form",
          "-c",
          "Print the digest in two-digit groups separated by colons",
          "-d",
          "Print BIO debugging information",
          "-hex",
          "Output as hex dump",
          "-hmac key",
          "Create hashed MAC with key",
          "-keyform format",
          "Key file format (PEM)",
          "-mac algorithm",
          "Create MAC (not necessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-out file",
          "Output to file rather than stdout",
          "-passin arg",
          "Input file passphrase source",
          "-prverify file",
          "Verify a signature using private key in file",
          "-r",
          "Output the digest in coreutils format",
          "-sign file",
          "Sign digest using private key in file",
          "-signature file",
          "Signature to verify",
          "-sigopt nm:v",
          "Signature parameter",
          "-verify file",
          "Verify a signature using public key in file",
          "-gost-mac",
          "To use the gost-mac message digest algorithm",
          "-streebog512",
          "To use the streebog512 message digest algorithm",
          "-streebog256",
          "To use the streebog256 message digest algorithm",
          "-md_gost94",
          "To use the md_gost94 message digest algorithm",
          "-md4",
          "To use the md4 message digest algorithm",
          "-md5",
          "To use the md5 message digest algorithm",
          "-md5-sha1",
          "To use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "To use the ripemd160 message digest algorithm",
          "-sha1",
          "To use the sha1 message digest algorithm",
          "-sha224",
          "To use the sha224 message digest algorithm",
          "-sha256",
          "To use the sha256 message digest algorithm",
          "-sha384",
          "To use the sha384 message digest algorithm",
          "-sha512",
          "To use the sha512 message digest algorithm",
          "-sm3",
          "To use the sm3 message digest algorithm",
          "-whirlpool",
          "To use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-modulus] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-modulus",
          "Print the DSA public value",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140238294239040:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140238294239040:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 |",
          "-des | -des3 | -idea] [-out file] [-passout src] paramfile",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout src",
          "Output file passphrase source"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [-3 | -f4] [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-out file] [-passout arg] [numbits]",
          "-3",
          "Use 3 for the E value",
          "-f4",
          "Use F4 (0x10001) for the E value",
          "-F4",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout arg",
          "Output file passphrase source"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "usage: ocsp [-CA file] [-CAfile file] [-CApath directory] [-cert file]",
          "[-dgst alg] [-header name value] [-host hostname:port]",
          "[-ignore_err] [-index indexfile] [-issuer file]",
          "[-ndays days] [-nmin minutes] [-no_cert_checks]",
          "[-no_cert_verify] [-no_certs] [-no_chain] [-no_explicit]",
          "[-no_intern] [-no_nonce] [-no_signature_verify] [-nonce]",
          "[-noverify] [-nrequest number] [-out file] [-path path]",
          "[-port portnum] [-req_text] [-reqin file] [-reqout file]",
          "[-resp_key_id] [-resp_no_certs] [-resp_text] [-respin file]",
          "[-respout file] [-rkey file] [-rother file] [-rsigner file]",
          "[-serial num] [-sign_other file] [-signer file]",
          "[-signkey file] [-status_age age] [-text]",
          "[-timeout seconds] [-trust_other] [-url responder_url]",
          "[-VAfile file] [-validity_period nsec] [-verify_other file]",
          "-CA file",
          "CA certificate corresponding to the revocation information",
          "-CAfile file",
          "Trusted certificates file",
          "-CApath directory",
          "Trusted certificates directory",
          "-cert file",
          "Certificate to check",
          "-header name value Add the header name with the value to the request",
          "-host hostname:port",
          "Send OCSP request to host on port",
          "-ignore_err",
          "Ignore the invalid response",
          "-index indexfile",
          "Certificate status index file",
          "-issuer file",
          "Issuer certificate",
          "-ndays days",
          "Number of days before next update",
          "-nmin minutes",
          "Number of minutes before next update",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-no_chain",
          "Don't use certificates in the response",
          "-no_explicit",
          "Don't check the explicit trust for OCSP signing",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-nonce",
          "Add OCSP nonce to request",
          "-noverify",
          "Don't verify response at all",
          "-nrequest number",
          "Number of requests to accept (default unlimited)",
          "-out file",
          "Output filename",
          "-path path",
          "Path to use in OCSP request",
          "-port portnum",
          "Port to run responder on",
          "-req_text",
          "Print text form of request",
          "-reqin file",
          "Read DER encoded OCSP request from \"file\"",
          "-reqout file",
          "Write DER encoded OCSP request to \"file\"",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-resp_text",
          "Print text form of response",
          "-respin file",
          "Read DER encoded OCSP response from \"file\"",
          "-respout file",
          "Write DER encoded OCSP response to \"file\"",
          "-rkey file",
          "Responder key to sign responses with",
          "-rother file",
          "Other certificates to include in response",
          "-rsigner file",
          "Responder certificate to sign responses with",
          "-serial num",
          "Serial number to check",
          "-sign_other file",
          "Additional certificates to include in signed request",
          "-signer file",
          "Certificate to sign OCSP request with",
          "-signkey file",
          "Private key to sign OCSP request with",
          "-status_age age",
          "Maximum status age in seconds",
          "-text",
          "Print text form of request and response",
          "-timeout seconds",
          "Connection timeout to the OCSP responder in seconds",
          "-trust_other",
          "Don't verify additional certificates",
          "-url responder_url OCSP responder URL",
          "-VAfile file",
          "Explicitly trusted responder certificates",
          "-validity_period n Maximum validity discrepancy in seconds",
          "-verify_other file Additional certificates to search for signer"
        ],
        "passwd": [
          "OVcGkWuprmu6Y",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "usage: pkcs12 [-aes128 | -aes192 | -aes256 | -camellia128 |",
          "-camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-cacerts] [-CAfile file] [-caname name]",
          "[-CApath directory] [-certfile file] [-certpbe alg]",
          "[-chain] [-clcerts] [-CSP name] [-descert] [-export]",
          "[-in file] [-info] [-inkey file] [-keyex] [-keypbe alg]",
          "[-keysig] [-LMK] [-macalg alg] [-maciter] [-name name]",
          "[-nocerts] [-nodes] [-noiter] [-nokeys] [-nomac]",
          "[-nomaciter] [-nomacver] [-noout] [-out file]",
          "[-passin arg] [-passout arg] [-password arg] [-twopass]",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt private keys with DES",
          "-des3",
          "Encrypt private keys with triple DES (default)",
          "-idea",
          "Encrypt private keys with IDEA",
          "-cacerts",
          "Only output CA certificates",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-caname name",
          "Use name as CA friendly name (can be used more than once)",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-certfile file",
          "Add all certs in file",
          "-certpbe alg",
          "Specify certificate PBE algorithm (default RC2-40)",
          "-chain",
          "Add certificate chain",
          "-clcerts",
          "Only output client certificates",
          "-CSP name",
          "Microsoft CSP name",
          "-descert",
          "Encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-export",
          "Output PKCS#12 file",
          "-in file",
          "Input filename",
          "-info",
          "Give info about PKCS#12 structure",
          "-inkey file",
          "Private key if not infile",
          "-keyex",
          "Set MS key exchange type",
          "-keypbe alg",
          "Specify private key PBE algorithm (default 3DES)",
          "-keysig",
          "Set MS key signature type",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-macalg alg",
          "Digest algorithm used in MAC (default SHA1)",
          "-maciter",
          "Use MAC iteration",
          "-name name",
          "Use name as friendly name",
          "-nocerts",
          "Don't output certificates",
          "-nodes",
          "Don't encrypt private keys",
          "-noiter",
          "Don't use encryption iteration",
          "-nokeys",
          "Don't output private keys",
          "-nomac",
          "Don't generate MAC",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomacver",
          "Don't verify MAC",
          "-noout",
          "Don't output anything, just verify",
          "-out file",
          "Output filename",
          "-passin arg",
          "Input file passphrase source",
          "-passout arg",
          "Output file passphrase source",
          "-password arg",
          "Set import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "usage: req [-addext ext] [-asn1-kludge] [-batch] [-config file]",
          "[-days n] [-extensions section] [-in file]",
          "[-inform der | pem] [-key keyfile] [-keyform der | pem]",
          "[-keyout file] [-md4 | -md5 | -sha1] [-modulus]",
          "[-multivalue-rdn] [-nameopt option] [-new] [-newhdr]",
          "[-newkey arg] [-no-asn1-kludge] [-nodes] [-noout]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-pkeyopt opt:value] [-pubkey]",
          "[-reqexts section] [-reqopt option] [-set_serial n]",
          "[-sigopt nm:v] [-subj arg] [-subject] [-text] [-utf8]",
          "[-verbose] [-verify] [-x509]",
          "-addext key=value",
          "Additional certificate extension (may be repeated)",
          "-batch",
          "Operate in batch mode",
          "-config file",
          "Configuration file to use as request template",
          "-days number",
          "Number of days generated certificate is valid for",
          "-extensions section",
          "Config section to use for certificate extensions",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-key file",
          "Private key file",
          "-keyform format",
          "Private key format (DER or PEM (default))",
          "-keyout file",
          "Private key output file",
          "-modulus",
          "Print RSA modulus",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-nameopt arg",
          "Certificate name options",
          "-new",
          "New request",
          "-newhdr",
          "Include 'NEW' in header lines",
          "-newkey param",
          "Generate a new key using given parameters",
          "-nodes",
          "Do not encrypt output private key",
          "-noout",
          "Do not output request",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Private key input password source",
          "-passout source",
          "Private key output password source",
          "-pkeyopt opt:val",
          "Set the public key algorithm option opt to val",
          "-pubkey",
          "Output the public key",
          "-reqexts section",
          "Config section to use for request extensions",
          "-reqopt option",
          "Request text options",
          "-set_serial serial Serial number to use for generated certificate",
          "-sigopt name:val",
          "Signature options",
          "-subj name",
          "Set or modify the request subject",
          "-subject",
          "Output the subject of the request",
          "-text",
          "Print request in text form",
          "-utf8",
          "Input characters are in UTF-8 (default ASCII)",
          "-verbose",
          "Verbose",
          "-verify",
          "Verify signature on request",
          "-x509",
          "Output an X.509 structure instead of a certificate request"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client [-4 | -6] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-certform der | pem] [-check_ss_sig]",
          "[-cipher cipherlist] [-connect host[:port]] [-crl_check]",
          "[-crl_check_all] [-crlf] [-debug] [-dtls] [-dtls1] [-dtls1_2] [-extended_crl]",
          "[-groups list] [-host host] [-ign_eof] [-ignore_critical]",
          "[-issuer_checks] [-key keyfile] [-keyform der | pem]",
          "[-keymatexport label] [-keymatexportlen len] [-legacy_server_connect]",
          "[-msg] [-mtu mtu] [-nbio] [-nbio_test] [-no_comp] [-no_ign_eof]",
          "[-no_legacy_server_connect] [-no_ticket] [-no_tls1] [-no_tls1_1]",
          "[-no_tls1_2] [-no_tls1_3] [-pass arg] [-pause] [-policy_check]",
          "[-port port] [-prexit] [-proxy host:port] [-quiet] [-reconnect]",
          "[-servername name] [-serverpref] [-sess_in file] [-sess_out file]",
          "[-showcerts] [-starttls protocol] [-state] [-status] [-timeout]",
          "[-tls1] [-tls1_1] [-tls1_2] [-tls1_3] [-tlsextdebug]",
          "[-use_srtp profiles] [-verify depth] [-verify_return_error]",
          "[-x509_strict] [-xmpphost host]",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-alpn protocols",
          "Set the advertised protocols for ALPN (comma-separated list)",
          "-bugs",
          "Enable various workarounds for buggy implementations",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use, PEM format assumed",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher cipherlist Preferred cipher to use (see 'openssl ciphers')",
          "-connect host:port Who to connect to (default is localhost:4433)",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-debug",
          "Print extensive debugging information",
          "-dtls",
          "Use any version of DTLS",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-host host",
          "Use -connect instead",
          "-ign_eof",
          "Ignore input EOF (default when -quiet)",
          "-key file",
          "Private key file to use, if not, -cert file is used",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-msg",
          "Show all protocol messages with hex dump",
          "-mtu mtu",
          "Set the link layer MTU on DTLS connections",
          "-nbio",
          "Turn on non-blocking I/O",
          "-nbio_test",
          "Test non-blocking I/O",
          "-no_ign_eof",
          "Don't ignore input EOF",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-no_ticket",
          "Disable use of RFC4507 session ticket support",
          "-no_tls1",
          "Disable the use of TLSv1",
          "-no_tls1_1",
          "Disable the use of TLSv1.1",
          "-no_tls1_2",
          "Disable the use of TLSv1.2",
          "-no_tls1_3",
          "Disable the use of TLSv1.3",
          "-pass arg",
          "Private key file pass phrase source",
          "-pause",
          "Pause 1 second between each read and write call",
          "-port port",
          "-prexit",
          "Print session information when the program exits",
          "-proxy host:port",
          "Connect to http proxy",
          "-quiet",
          "Inhibit printing of session and certificate info",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-servername name",
          "Set TLS extension servername in ClientHello (SNI)",
          "-serverpref",
          "Use server's cipher preferences",
          "-sess_in file",
          "File to read TLS session from",
          "-sess_out file",
          "File to write TLS session to",
          "-showcerts",
          "Show all server certificates in the chain",
          "-starttls protocol Use the STARTTLS command before starting TLS,",
          "smtp, lmtp, pop3, imap, ftp and xmpp are supported.",
          "-state",
          "Print the TLS session states",
          "-status",
          "Send a certificate status request to the server (OCSP)",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profiles",
          "-verify depth",
          "Turn on peer certificate verification, with a max of depth",
          "-verify_return_error",
          "Return verification error",
          "-xmpphost host",
          "Connect to this virtual host on the xmpp server"
        ],
        "s_server": [
          "usage: s_server [-accept port] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-cert2 file]",
          "[-certform der | pem] [-cipher cipherlist]",
          "[-context id] [-crl_check] [-crl_check_all] [-crlf]",
          "[-dcert file] [-dcertform der | pem] [-debug]",
          "[-dhparam file] [-dkey file] [-dkeyform der | pem]",
          "[-dpass arg] [-dtls] [-dtls1] [-dtls1_2] [-groups list] [-HTTP]",
          "[-id_prefix arg] [-key keyfile] [-key2 keyfile]",
          "[-keyform der | pem] [-keymatexport label]",
          "[-keymatexportlen len] [-msg] [-mtu mtu]",
          "[-named_curve arg] [-nbio] [-nbio_test] [-no_cache]",
          "[-no_dhe] [-no_ecdhe] [-no_ticket] [-no_tls1]",
          "[-no_tls1_1] [-no_tls1_2] [-no_tls1_3] [-no_tmp_rsa]",
          "[-nocert] [-pass arg] [-quiet] [-servername name]",
          "[-servername_fatal] [-serverpref] [-state] [-status]",
          "[-status_timeout nsec] [-status_url url]",
          "[-status_verbose] [-timeout] [-tls1] [-tls1_1]",
          "[-tls1_2] [-tls1_3] [-tlsextdebug] [-use_srtp profiles]",
          "[-Verify depth] [-verify depth] [-verify_return_error]",
          "[-WWW] [-www]",
          "-accept port",
          "Port to accept on (default is 4433)",
          "-alpn protocols",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use",
          "(default is server.pem)",
          "-cert2 file",
          "Certificate file to use for servername",
          "(default is server2.pem)",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher list",
          "List of ciphers to enable (see `openssl ciphers`)",
          "-context id",
          "Set session ID context",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-dcert file",
          "Second certificate file to use (usually for DSA)",
          "-dcertform fmt",
          "Second certificate format (PEM or DER) PEM default",
          "-debug",
          "Print more output",
          "-dhparam file",
          "DH parameter file to use, in cert file if not specified",
          "-dkey file",
          "Second private key file to use (usually for DSA)",
          "-dkeyform fmt",
          "Second key format (PEM or DER) PEM default",
          "-dpass arg",
          "Second private key file pass phrase source",
          "-dtls",
          "Use any version of DTLS",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-HTTP",
          "Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-id_prefix arg",
          "Generate SSL/TLS session IDs prefixed by 'arg'",
          "-key file",
          "Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-key2 file",
          "Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-msg",
          "Show protocol messages",
          "-mtu mtu",
          "Set link layer MTU",
          "-nbio",
          "Run with non-blocking I/O",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-no_cache",
          "Disable session cache",
          "-no_comp",
          "Disable SSL/TLS compression",
          "-no_dhe",
          "Disable ephemeral DH",
          "-no_ecdhe",
          "Disable ephemeral ECDH",
          "-no_ticket",
          "Disable use of RFC4507bis session tickets",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-pass arg",
          "Private key file pass phrase source",
          "-quiet",
          "Inhibit printing of session and certificate information",
          "-servername name",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "On mismatch send fatal alert (default warning alert)",
          "-serverpref",
          "Use server's cipher preferences",
          "-state",
          "Print the SSL states",
          "-status",
          "Respond to certificate status requests",
          "-status_timeout nsec",
          "Status request responder timeout",
          "-status_url url",
          "Status request fallback URL",
          "-status_verbose",
          "Enable status request verbose printout",
          "-timeout",
          "Enable timeouts",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "Just talk TLSv1.2",
          "-tls1_3",
          "Just talk TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profile list",
          "-Verify depth",
          "Turn on peer certificate verification, must have a cert",
          "-verify depth",
          "Turn on peer certificate verification",
          "-verify_return_error",
          "Return verification error",
          "-WWW",
          "-www",
          "Respond to a 'GET /' with a status page"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139871813519168:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139871813519168:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-CAfile file] [-CApath directory] [-check_ss_sig]",
          "[-CRLfile file] [-crl_check] [-crl_check_all]",
          "[-explicit_policy] [-extended_crl]",
          "[-ignore_critical] [-inhibit_any] [-inhibit_map]",
          "[-issuer_checks] [-policy_check] [-purpose purpose]",
          "[-trusted file] [-untrusted file] [-verbose]",
          "[-x509_strict] [certificates]",
          "-CAfile file",
          "Certificate Authority file",
          "-CApath path",
          "Certificate Authority path",
          "-CRLfile file",
          "Certificate Revocation List file",
          "-trusted file",
          "Trusted certificates file",
          "-untrusted file",
          "Untrusted certificates file",
          "-verbose",
          "Verbose",
          "Verification options:",
          "-attime epoch",
          "Use epoch as the verification time",
          "-check_ss_sig",
          "Check the root CA self-signed certificate signature",
          "-crl_check",
          "Enable CRL checking for the leaf certificate",
          "-crl_check_all",
          "Enable CRL checking for the entire certificate chain",
          "-explicit_policy",
          "Require explicit policy (per RFC 3280)",
          "-extended_crl",
          "Enable extended CRL support",
          "-ignore_critical",
          "Disable critical extension checking",
          "-inhibit_any",
          "Inhibit any policy (per RFC 3280)",
          "-inhibit_map",
          "Inhibit policy mapping (per RFC 3280)",
          "-issuer_checks",
          "Enable debugging of certificate issuer checks",
          "-legacy_verify",
          "Use legacy certificate chain verification",
          "-policy name",
          "Add given policy to the acceptable set",
          "-policy_check",
          "Enable certificate policy checking",
          "-policy_print",
          "Print policy",
          "-purpose name",
          "Verify for the given purpose",
          "-use_deltas",
          "Use delta CRLS (if present)",
          "-verify_depth num",
          "Limit verification to the given depth",
          "-x509_strict",
          "Use strict X.509 rules (disables workarounds)",
          "Valid purposes:",
          "sslclient",
          "SSL client",
          "sslserver",
          "SSL server",
          "nssslserver",
          "Netscape SSL server",
          "smimesign",
          "S/MIME signing",
          "smimeencrypt",
          "S/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper",
          "OCSP helper",
          "timestampsign",
          "Time Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 [-C] [-addreject arg] [-addtrust arg] [-alias] [-CA file]",
          "[-CAcreateserial] [-CAform der | pem] [-CAkey file]",
          "[-CAkeyform der | pem] [-CAserial file] [-certopt option]",
          "[-checkend arg] [-clrext] [-clrreject] [-clrtrust] [-dates]",
          "[-days arg] [-email] [-enddate] [-extensions section]",
          "[-extfile file] [-fingerprint] [-hash] [-in file]",
          "[-inform der | net | pem] [-issuer] [-issuer_hash]",
          "[-issuer_hash_old] [-keyform der | pem] [-md5 | -sha1]",
          "[-modulus] [-nameopt option] [-next_serial] [-noout]",
          "[-ocsp_uri] [-ocspid] [-out file]",
          "[-outform der | net | pem] [-passin arg] [-pubkey]",
          "[-purpose] [-req] [-serial] [-set_serial n] [-setalias arg]",
          "[-signkey file] [-sigopt nm:v] [-startdate] [-subject]",
          "[-subject_hash] [-subject_hash_old] [-text] [-trustout]",
          "[-x509toreq]",
          "-C",
          "Convert the certificate into C code",
          "-addreject arg",
          "Reject certificate for a given purpose",
          "-addtrust arg",
          "Trust certificate for a given purpose",
          "-alias",
          "Output certificate alias",
          "-CA file",
          "CA certificate in PEM format unless -CAform is specified",
          "-CAcreateserial",
          "Create serial number file if it does not exist",
          "-CAform fmt",
          "CA format - default PEM",
          "-CAkey file",
          "CA key in PEM format unless -CAkeyform is specified",
          "if omitted, the key is assumed to be in the CA file",
          "-CAkeyform fmt",
          "CA key format - default PEM",
          "-CAserial file",
          "Serial file",
          "-certopt option",
          "Various certificate text options",
          "-checkend arg",
          "Check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-clrext",
          "Clear all extensions",
          "-clrreject",
          "Clear all rejected purposes",
          "-clrtrust",
          "Clear all trusted purposes",
          "-dates",
          "Both Before and After dates",
          "-days arg",
          "How long till expiry of a signed certificate - def 30 days",
          "-email",
          "Print email address(es)",
          "-enddate",
          "Print notAfter field",
          "-extensions section",
          "Section from config file with X509V3 extensions to add",
          "-extfile file",
          "Configuration file with X509V3 extensions to add",
          "-fingerprint",
          "Print the certificate fingerprint",
          "-hash",
          "Synonym for -subject_hash",
          "-in file",
          "Input file - default stdin",
          "-inform fmt",
          "Input format - default PEM (one of DER, NET or PEM)",
          "-issuer",
          "Print issuer name",
          "-issuer_hash",
          "Print issuer hash value",
          "-issuer_hash_old",
          "Print old-style (MD5) issuer hash value",
          "-keyform fmt",
          "Private key format - default PEM",
          "-modulus",
          "Print the RSA key modulus",
          "-nameopt option",
          "Various certificate name options",
          "-next_serial",
          "Print the next serial number",
          "-noout",
          "No certificate output",
          "-ocsp_uri",
          "Print OCSP Responder URL(s)",
          "-ocspid",
          "Print OCSP hash values for the subject name and public key",
          "-out file",
          "Output file - default stdout",
          "-outform fmt",
          "Output format - default PEM (one of DER, NET or PEM)",
          "-passin src",
          "Private key password source",
          "-pubkey",
          "Output the public key",
          "-purpose",
          "Print out certificate purposes",
          "-req",
          "Input is a certificate request, sign and output",
          "-serial",
          "Print serial number value",
          "-set_serial n",
          "Serial number to use",
          "-setalias arg",
          "Set certificate alias",
          "-signkey file",
          "Self sign cert with arg",
          "-sigopt nm:v",
          "Various signature algorithm options",
          "-startdate",
          "Print notBefore field",
          "-subject",
          "Print subject name",
          "-subject_hash",
          "Print subject hash value",
          "-subject_hash_old",
          "Print old-style (MD5) subject hash value",
          "-text",
          "Print the certificate in text form",
          "-trustout",
          "Output a trusted certificate",
          "-x509toreq",
          "Output a certification request object"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    },
    "3.4.2": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "chacha",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "sm4",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "usage: asn1parse [-i] [-dlimit num] [-dump] [-genconf file] [-genstr string]",
          "[-in file] [-inform fmt] [-length num] [-noout] [-offset num] [-oid file]",
          "[-out file] [-strparse offset]",
          "-dump",
          "Dump unknown data in hex form",
          "-dlimit num",
          "Dump the first num bytes of unknown data in hex form",
          "-genconf file",
          "File to generate ASN.1 structure from",
          "-genstr string",
          "String to generate ASN.1 structure from",
          "-i",
          "Indent output according to depth of structures",
          "-in file",
          "The input file (default stdin)",
          "-inform fmt",
          "Input format (DER, TXT or PEM (default))",
          "-length num",
          "Number of bytes to parse (default until EOF)",
          "-noout",
          "Do not produce any output",
          "-offset num",
          "Offset to begin parsing",
          "-oid file",
          "File containing additional object identifiers (OIDs)",
          "-out file",
          "Output file in DER format",
          "-strparse offset",
          "Parse the content octets of ASN.1 object starting at offset"
        ],
        "ca": [
          "usage: ca",
          "[-batch] [-cert file] [-config file] [-create_serial]",
          "[-crl_CA_compromise time] [-crl_compromise time]",
          "[-crl_hold instruction] [-crl_reason reason] [-crldays days]",
          "[-crlexts section] [-crlhours hours] [-crlsec seconds]",
          "[-days arg] [-enddate date] [-extensions section]",
          "[-extfile file] [-gencrl] [-in file] [-infiles]",
          "[-key password] [-keyfile file] [-keyform pem | der]",
          "[-md alg] [-multivalue-rdn] [-name section]",
          "[-noemailDN] [-notext] [-out file] [-outdir directory]",
          "[-passin arg] [-policy name] [-preserveDN] [-revoke file]",
          "[-selfsign] [-sigopt nm:v] [-spkac file] [-ss_cert file]",
          "[-startdate date] [-status serial] [-subj arg] [-updatedb]",
          "[-utf8] [-verbose]",
          "-batch",
          "Operate in batch mode",
          "-cert file",
          "File containing the CA certificate",
          "-config file",
          "Specify an alternative configuration file",
          "-create_serial",
          "If reading serial fails, create a new random serial",
          "-crl_CA_compromise time",
          "Set the compromise time and the revocation reason to",
          "CACompromise",
          "-crl_compromise time",
          "keyCompromise",
          "-crl_hold instruction",
          "Set the hold instruction and the revocation reason to",
          "certificateHold",
          "-crl_reason reason Revocation reason",
          "-crldays days",
          "Number of days before the next CRL is due",
          "-crlexts section",
          "CRL extension section (override value in config file)",
          "-crlhours hours",
          "Number of hours before the next CRL is due",
          "-crlsec seconds",
          "Number of seconds before the next CRL is due",
          "-days arg",
          "Number of days to certify the certificate for",
          "-enddate YYMMDDHHMMSSZ",
          "Certificate validity notAfter (overrides -days)",
          "-extensions section",
          "Extension section (override value in config file)",
          "-extfile file",
          "Configuration file with X509v3 extentions to add",
          "-gencrl",
          "Generate a new CRL",
          "-in file",
          "Input file containing a single certificate request",
          "-infiles ...",
          "The last argument, certificate requests to process",
          "-key password",
          "Key to decode the private key if it is encrypted",
          "-keyfile file",
          "Private key file",
          "-keyform fmt",
          "Private key file format (DER or PEM (default))",
          "-md alg",
          "Message digest to use",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-name section",
          "Specifies the configuration file section to use",
          "-noemailDN",
          "Do not add the EMAIL field to the DN",
          "-notext",
          "Do not print the generated certificate",
          "-out file",
          "Output file (default stdout)",
          "-outdir directory",
          "Directory to output certificates to",
          "-passin src",
          "Private key input password source",
          "-policy name",
          "The CA 'policy' to support",
          "-preserveDN",
          "Do not re-order the DN",
          "-revoke file",
          "Revoke a certificate (given in file)",
          "-selfsign",
          "Sign a certificate using the key associated with it",
          "-sigopt nm:v",
          "Signature parameter in nm:v form",
          "-spkac file",
          "File contains DN and signed public key and challenge",
          "-ss_cert file",
          "File contains a self signed certificate to sign",
          "-startdate YYMMDDHHMMSSZ",
          "Certificate validity notBefore",
          "-status serial",
          "Shows certificate status given the serial number",
          "-subj arg",
          "Use arg instead of request's subject",
          "-updatedb",
          "Updates db for expired certificates",
          "-utf8",
          "Input characters are in UTF-8 (default ASCII)",
          "-verbose",
          "Verbose output during processing"
        ],
        "certhash": [
          "failed to change to directory help: No such file or directory",
          "usage: certhash [-nv] dir ...",
          "-n",
          "Perform a dry-run - do not make any changes",
          "-v",
          "Verbose"
        ],
        "ciphers": [
          "139852929476416:error:14FFF0B9:SSL routines:(UNKNOWN)SSL_internal:no cipher match:ssl_lib.c:1432:",
          "usage: ciphers [-hVv] [-tls1] [cipherlist]",
          "-tls1",
          "This option is deprecated since it is the default",
          "-v",
          "Provide cipher listing",
          "-V",
          "Provide cipher listing with cipher suite values"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-keyopt nm:v",
          "set public key parameters",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "Unknown message digest algorithm 'help'",
          "usage: crl [-CAfile file] [-CApath dir] [-fingerprint] [-hash]",
          "[-in file] [-inform DER | PEM] [-issuer] [-lastupdate]",
          "[-nextupdate] [-noout] [-out file] [-outform DER | PEM]",
          "[-text]",
          "-CAfile file",
          "Verify the CRL using certificates in the given file",
          "-CApath path",
          "Verify the CRL using certificates in the given path",
          "-crlnumber",
          "Print the CRL number",
          "-fingerprint",
          "Print the CRL fingerprint",
          "-hash",
          "Print the hash of the issuer name",
          "-hash_old",
          "Print an old-style (MD5) hash of the issuer name",
          "-in file",
          "Input file to read from (stdin if unspecified)",
          "-inform format",
          "Input format (DER or PEM)",
          "-issuer",
          "Print the issuer name",
          "-lastupdate",
          "Print the lastUpdate field",
          "-nameopt options",
          "Specify certificate name options",
          "-nextupdate",
          "Print the nextUpdate field",
          "-noout",
          "Do not output the encoded version of the CRL",
          "-out file",
          "Output file to write to (stdout if unspecified)",
          "-outform format",
          "Output format (DER or PEM)",
          "-text",
          "Print out the CRL in text form",
          "-verify",
          "Verify the signature on the CRL"
        ],
        "crl2pkcs7": [
          "usage: crl2p7 [-certfile file] [-in file] [-inform DER | PEM]",
          "[-nocrl] [-out file] [-outform DER | PEM]",
          "-certfile file",
          "Chain of PEM certificates to a trusted CA",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-nocrl",
          "Do not read CRL from input or include CRL in output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))"
        ],
        "dgst": [
          "help: No such file or directory",
          "usage: dgst [-cdr] [-binary] [-digest] [-hex] [-hmac key] [-keyform fmt]",
          "[-mac algorithm] [-macopt nm:v] [-out file] [-passin arg]",
          "[-prverify file] [-sign file] [-signature file]",
          "[-sigopt nm:v] [-verify file] [file ...]",
          "-binary",
          "Output the digest or signature in binary form",
          "-c",
          "Print the digest in two-digit groups separated by colons",
          "-d",
          "Print BIO debugging information",
          "-hex",
          "Output as hex dump",
          "-hmac key",
          "Create hashed MAC with key",
          "-keyform format",
          "Key file format (PEM)",
          "-mac algorithm",
          "Create MAC (not necessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-out file",
          "Output to file rather than stdout",
          "-passin arg",
          "Input file passphrase source",
          "-prverify file",
          "Verify a signature using private key in file",
          "-r",
          "Output the digest in coreutils format",
          "-sign file",
          "Sign digest using private key in file",
          "-signature file",
          "Signature to verify",
          "-sigopt nm:v",
          "Signature parameter",
          "-verify file",
          "Verify a signature using public key in file",
          "-gost-mac",
          "To use the gost-mac message digest algorithm",
          "-streebog512",
          "To use the streebog512 message digest algorithm",
          "-streebog256",
          "To use the streebog256 message digest algorithm",
          "-md_gost94",
          "To use the md_gost94 message digest algorithm",
          "-md4",
          "To use the md4 message digest algorithm",
          "-md5",
          "To use the md5 message digest algorithm",
          "-md5-sha1",
          "To use the md5-sha1 message digest algorithm",
          "-ripemd160",
          "To use the ripemd160 message digest algorithm",
          "-sha1",
          "To use the sha1 message digest algorithm",
          "-sha224",
          "To use the sha224 message digest algorithm",
          "-sha256",
          "To use the sha256 message digest algorithm",
          "-sha384",
          "To use the sha384 message digest algorithm",
          "-sha512",
          "To use the sha512 message digest algorithm",
          "-sm3",
          "To use the sm3 message digest algorithm",
          "-whirlpool",
          "To use the whirlpool message digest algorithm"
        ],
        "dh": [
          "usage: dh [-C] [-check] [-in file] [-inform format]",
          "[-noout] [-out file] [-outform format] [-text]",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print a text form of the DH parameters"
        ],
        "dhparam": [
          "invalid number of bits: help",
          "usage: dhparam [-2 | -5] [-C] [-check] [-dsaparam]",
          "[-in file] [-inform DER | PEM] [-noout] [-out file]",
          "[-outform DER | PEM] [-text] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-C",
          "Convert DH parameters into C code",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters and convert to DH",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of DH parameters",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print DH parameters in plain text"
        ],
        "dsa": [
          "usage: dsa [-in file] [-inform format] [-modulus] [-noout]",
          "[-out file] [-outform format] [-passin src] [-passout src]",
          "[-pubin] [-pubout] [-pvk-none | -pvk-strong | -pvk-weak]",
          "[-text] [-ciphername]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (PEM (default) or any other supported format)",
          "-modulus",
          "Print the DSA public value",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, MSBLOB, PEM (default) or PVK)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read a public key from the input file instead of private key",
          "-pubout",
          "Output a public key instead of private key",
          "-pvk-none",
          "PVK encryption level",
          "-pvk-strong",
          "PVK encryption level (default)",
          "-pvk-weak",
          "-text",
          "Print the key in text form",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "dsaparam": [
          "Invalid number of bits: invalid",
          "usage: dsaparam [-C] [-genkey] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-text] [numbits]",
          "-C",
          "Convert DSA parameters into C code",
          "-genkey",
          "Generate a DSA key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print as text"
        ],
        "ec": [
          "usage: ec [-conv_form form] [-in file]",
          "[-inform format] [-noout] [-out file] [-outform format]",
          "[-param_enc type] [-param_out] [-passin file]",
          "[-passout file] [-pubin] [-pubout] [-text] [-ciphername]",
          "-conv_form form",
          "Specify the point conversion form (default \"named_curve\")",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "No output",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-param_enc type",
          "Specify the way the ec parameters are encoded (default \"uncompressed\")",
          "-param_out",
          "Print the elliptic curve parameters",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-pubin",
          "Read public key instead of private key from input",
          "-pubout",
          "Output public key instead of private key in output",
          "-text",
          "Print the public/private key components and parameters",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "ecparam": [
          "usage: ecparam [-C] [-check] [-conv_form arg]",
          "[-genkey]",
          "[-in file] [-inform DER | PEM] [-list_curves] [-name arg]",
          "[-no_seed] [-noout] [-out file] [-outform DER | PEM]",
          "[-param_enc arg] [-text]",
          "-C",
          "Convert the EC parameters into C code",
          "-check",
          "Validate the elliptic curve parameters",
          "-conv_form form",
          "Specify point conversion form:",
          "compressed, uncompressed (default), hybrid",
          "-genkey",
          "Generate an EC private key using the specified parameters",
          "-in file",
          "Input file to read parameters from (default stdin)",
          "-inform format",
          "Input format (DER or PEM)",
          "-list_curves",
          "Print list of all currently implemented EC parameter names",
          "-name curve",
          "Use the EC parameters with the specified name",
          "-no_seed",
          "Do not output seed with explicit parameter encoding",
          "-noout",
          "Do not output encoded version of EC parameters",
          "-out file",
          "Output file to write parameters to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-param_enc type",
          "Specify EC parameter ASN.1 encoding type:",
          "explicit, named_curve (default)",
          "-text",
          "Print out the EC parameters in human readable form"
        ],
        "enc": [
          "usage: enc -ciphername [-AadePp] [-base64] [-bufsize number] [-debug]",
          "[-in file] [-iter iterations] [-iv IV] [-K key] [-k password]",
          "[-kfile file] [-md digest] [-none] [-nopad] [-nosalt]",
          "[-out file] [-pass source] [-pbkdf2] [-S salt] [-salt]",
          "-A",
          "Process base64 data on one line (requires -a)",
          "-a",
          "Perform base64 encoding/decoding (alias -base64)",
          "-bufsize size",
          "Specify the buffer size to use for I/O",
          "-d",
          "Decrypt the input data",
          "-debug",
          "Print debugging information",
          "-e",
          "Encrypt the input data (default)",
          "-in file",
          "Input file to read from (default stdin)",
          "-iter iterations",
          "Specify iteration count and force use of PBKDF2",
          "-iv IV",
          "IV to use, specified as a hexadecimal string",
          "-K key",
          "Key to use, specified as a hexadecimal string",
          "-md digest",
          "Digest to use to create a key from the passphrase",
          "-none",
          "Use NULL cipher (no encryption or decryption)",
          "-nopad",
          "Disable standard block padding",
          "-out file",
          "Output file to write to (default stdout)",
          "-P",
          "Print out the salt, key and IV used, then exit",
          "(no encryption or decryption is performed)",
          "-p",
          "Print out the salt, key and IV used",
          "-pass source",
          "Password source",
          "-pbkdf2",
          "Use the pbkdf2 key derivation function",
          "-S salt",
          "Salt to use, specified as a hexadecimal string",
          "-salt",
          "Use a salt in the key derivation routines (default)",
          "-v",
          "Verbose",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb"
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] errno ...",
          "-stats",
          "Print debugging statistics for the hash table"
        ],
        "gendh": [
          "Invalid number of bits: invalid",
          "usage: gendh [-2 | -5] [-out file] [numbits]",
          "-2",
          "Generate DH parameters with a generator value of 2 (default)",
          "-5",
          "Generate DH parameters with a generator value of 5",
          "-out file",
          "Output file (default stdout)"
        ],
        "gendsa": [
          "help: No such file or directory",
          "140354257512256:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "140354257512256:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "usage: gendsa [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 |",
          "-des | -des3 | -idea] [-out file] [-passout src] paramfile",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout src",
          "Output file passphrase source"
        ],
        "genpkey": [
          "usage: genpkey [-algorithm alg] [cipher] [-genparam] [-out file]",
          "[-outform der | pem] [-paramfile file] [-pass arg]",
          "[-pkeyopt opt:value] [-text]",
          "-algorithm name",
          "Public key algorithm to use (must precede -pkeyopt)",
          "-genparam",
          "Generate a set of parameters instead of a private key",
          "-out file",
          "Output file to write to (default stdout)",
          "-outform format",
          "Output format (DER or PEM)",
          "-paramfile file",
          "File to load public key algorithm parameters from",
          "(must precede -pkeyopt)",
          "-pass arg",
          "Output file password source",
          "-pkeyopt opt:value Set public key algorithm option to the given value",
          "-text",
          "Print the private/public key in human readable form"
        ],
        "genrsa": [
          "usage: genrsa [-3 | -f4] [-aes128 | -aes192 | -aes256 |",
          "-camellia128 | -camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-out file] [-passout arg] [numbits]",
          "-3",
          "Use 3 for the E value",
          "-f4",
          "Use F4 (0x10001) for the E value",
          "-F4",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt the generated key with DES in CBC mode",
          "-des3",
          "Encrypt the generated key with DES in EDE CBC mode (168 bit key)",
          "-idea",
          "Encrypt the generated key with IDEA in CBC mode",
          "-out file",
          "Output the key to 'file'",
          "-passout arg",
          "Output file passphrase source"
        ],
        "nseq": [
          "usage: nseq [-in file] [-out file] [-toseq]",
          "-in file",
          "Input file to read from (default stdin)",
          "-out file",
          "Output file to write to (default stdout)",
          "-toseq",
          "Convert certificates to Netscape certificate sequence"
        ],
        "ocsp": [
          "usage: ocsp [-CA file] [-CAfile file] [-CApath directory] [-cert file]",
          "[-dgst alg] [-header name value] [-host hostname:port]",
          "[-ignore_err] [-index indexfile] [-issuer file]",
          "[-ndays days] [-nmin minutes] [-no_cert_checks]",
          "[-no_cert_verify] [-no_certs] [-no_chain] [-no_explicit]",
          "[-no_intern] [-no_nonce] [-no_signature_verify] [-nonce]",
          "[-noverify] [-nrequest number] [-out file] [-path path]",
          "[-port portnum] [-req_text] [-reqin file] [-reqout file]",
          "[-resp_key_id] [-resp_no_certs] [-resp_text] [-respin file]",
          "[-respout file] [-rkey file] [-rother file] [-rsigner file]",
          "[-serial num] [-sign_other file] [-signer file]",
          "[-signkey file] [-status_age age] [-text]",
          "[-timeout seconds] [-trust_other] [-url responder_url]",
          "[-VAfile file] [-validity_period nsec] [-verify_other file]",
          "-CA file",
          "CA certificate corresponding to the revocation information",
          "-CAfile file",
          "Trusted certificates file",
          "-CApath directory",
          "Trusted certificates directory",
          "-cert file",
          "Certificate to check",
          "-header name value Add the header name with the value to the request",
          "-host hostname:port",
          "Send OCSP request to host on port",
          "-ignore_err",
          "Ignore the invalid response",
          "-index indexfile",
          "Certificate status index file",
          "-issuer file",
          "Issuer certificate",
          "-ndays days",
          "Number of days before next update",
          "-nmin minutes",
          "Number of minutes before next update",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-no_chain",
          "Don't use certificates in the response",
          "-no_explicit",
          "Don't check the explicit trust for OCSP signing",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-nonce",
          "Add OCSP nonce to request",
          "-noverify",
          "Don't verify response at all",
          "-nrequest number",
          "Number of requests to accept (default unlimited)",
          "-out file",
          "Output filename",
          "-path path",
          "Path to use in OCSP request",
          "-port portnum",
          "Port to run responder on",
          "-req_text",
          "Print text form of request",
          "-reqin file",
          "Read DER encoded OCSP request from \"file\"",
          "-reqout file",
          "Write DER encoded OCSP request to \"file\"",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-resp_text",
          "Print text form of response",
          "-respin file",
          "Read DER encoded OCSP response from \"file\"",
          "-respout file",
          "Write DER encoded OCSP response to \"file\"",
          "-rkey file",
          "Responder key to sign responses with",
          "-rother file",
          "Other certificates to include in response",
          "-rsigner file",
          "Responder certificate to sign responses with",
          "-serial num",
          "Serial number to check",
          "-sign_other file",
          "Additional certificates to include in signed request",
          "-signer file",
          "Certificate to sign OCSP request with",
          "-signkey file",
          "Private key to sign OCSP request with",
          "-status_age age",
          "Maximum status age in seconds",
          "-text",
          "Print text form of request and response",
          "-timeout seconds",
          "Connection timeout to the OCSP responder in seconds",
          "-trust_other",
          "Don't verify additional certificates",
          "-url responder_url OCSP responder URL",
          "-VAfile file",
          "Explicitly trusted responder certificates",
          "-validity_period n Maximum validity discrepancy in seconds",
          "-verify_other file Additional certificates to search for signer"
        ],
        "passwd": [
          "zngeIchLgTw5Q",
          "usage: passwd [-1 | -apr1 | -crypt] [-in file] [-noverify] [-quiet]",
          "[-reverse] [-salt string] [-stdin] [-table] [password]",
          "-1",
          "Use MD5 based BSD password algorithm 1",
          "-apr1",
          "Use apr1 algorithm (Apache variant of BSD algorithm)",
          "-crypt",
          "Use crypt algorithm (default)",
          "-in file",
          "Read passwords from specified file",
          "-noverify",
          "Do not verify password",
          "-quiet",
          "Do not output warnings",
          "-reverse",
          "Reverse table columns (requires -table)",
          "-salt string",
          "Use specified salt",
          "-stdin",
          "Read passwords from stdin",
          "-table",
          "Output cleartext and hashed passwords (tab separated)"
        ],
        "pkcs12": [
          "usage: pkcs12 [-aes128 | -aes192 | -aes256 | -camellia128 |",
          "-camellia192 | -camellia256 | -des | -des3 | -idea]",
          "[-cacerts] [-CAfile file] [-caname name]",
          "[-CApath directory] [-certfile file] [-certpbe alg]",
          "[-chain] [-clcerts] [-CSP name] [-descert] [-export]",
          "[-in file] [-info] [-inkey file] [-keyex] [-keypbe alg]",
          "[-keysig] [-LMK] [-macalg alg] [-maciter] [-name name]",
          "[-nocerts] [-nodes] [-noiter] [-nokeys] [-nomac]",
          "[-nomaciter] [-nomacver] [-noout] [-out file]",
          "[-passin arg] [-passout arg] [-password arg] [-twopass]",
          "-aes128",
          "Encrypt PEM output with CBC AES",
          "-aes192",
          "-aes256",
          "-camellia128",
          "Encrypt PEM output with CBC Camellia",
          "-camellia192",
          "-camellia256",
          "-des",
          "Encrypt private keys with DES",
          "-des3",
          "Encrypt private keys with triple DES (default)",
          "-idea",
          "Encrypt private keys with IDEA",
          "-cacerts",
          "Only output CA certificates",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-caname name",
          "Use name as CA friendly name (can be used more than once)",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-certfile file",
          "Add all certs in file",
          "-certpbe alg",
          "Specify certificate PBE algorithm (default RC2-40)",
          "-chain",
          "Add certificate chain",
          "-clcerts",
          "Only output client certificates",
          "-CSP name",
          "Microsoft CSP name",
          "-descert",
          "Encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-export",
          "Output PKCS#12 file",
          "-in file",
          "Input filename",
          "-info",
          "Give info about PKCS#12 structure",
          "-inkey file",
          "Private key if not infile",
          "-keyex",
          "Set MS key exchange type",
          "-keypbe alg",
          "Specify private key PBE algorithm (default 3DES)",
          "-keysig",
          "Set MS key signature type",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-macalg alg",
          "Digest algorithm used in MAC (default SHA1)",
          "-maciter",
          "Use MAC iteration",
          "-name name",
          "Use name as friendly name",
          "-nocerts",
          "Don't output certificates",
          "-nodes",
          "Don't encrypt private keys",
          "-noiter",
          "Don't use encryption iteration",
          "-nokeys",
          "Don't output private keys",
          "-nomac",
          "Don't generate MAC",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomacver",
          "Don't verify MAC",
          "-noout",
          "Don't output anything, just verify",
          "-out file",
          "Output filename",
          "-passin arg",
          "Input file passphrase source",
          "-passout arg",
          "Output file passphrase source",
          "-password arg",
          "Set import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords"
        ],
        "pkcs7": [
          "usage: pkcs7 [-in file] [-inform DER | PEM] [-noout]",
          "[-out file] [-outform DER | PEM] [-print_certs] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output encoded version of PKCS#7 structure",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-print",
          "Output ASN.1 representation of PKCS#7 structure",
          "-print_certs",
          "Print out any certificates or CRLs contained in file",
          "-text",
          "Print out full certificate details"
        ],
        "pkcs8": [
          "usage: pkcs8 [-in file] [inform der | pem] [-nocrypt] [-noiter]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-topk8] [-v1 alg] [-v2 alg]",
          "-in file",
          "Input file (default stdin)",
          "-inform der | pem",
          "Input format (default PEM)",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-noiter",
          "Use 1 as iteration count",
          "-out file",
          "Output file (default stdout)",
          "-outform der | pem Output format (default PEM)",
          "-passin source",
          "Input file passphrase source",
          "-passout source",
          "Output file passphrase source",
          "-topk8",
          "Read traditional format key and write PKCS#8 format key",
          "-v1 algorithm",
          "Use PKCS#5 v1.5 or PKCS#12 with given algorithm",
          "-v2 cipher",
          "Use PKCS#5 v2.0 with given cipher"
        ],
        "pkey": [
          "usage: pkey [-ciphername] [-in file] [-inform fmt] [-noout] [-out file]",
          "[-outform fmt] [-passin src] [-passout src] [-pubin] [-pubout] [-text]",
          "[-text_pub]",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-text",
          "Print the public/private key in plain text",
          "-text_pub",
          "Print out only public key in plain text",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Unknown cipher help"
        ],
        "pkeyparam": [
          "usage: pkeyparam [-in file] [-noout] [-out file] [-text]",
          "-in file",
          "Input file (default stdin)",
          "-noout",
          "Do not print encoded version of the parameters",
          "-out file",
          "Output file (default stdout)",
          "-text",
          "Print out the parameters in plain text"
        ],
        "pkeyutl": [
          "usage: pkeyutl [-asn1parse] [-certin] [-decrypt] [-derive] [-encrypt]",
          "[-hexdump] [-in file] [-inkey file] [-keyform fmt]",
          "[-out file] [-passin arg] [-peerform fmt]",
          "[-peerkey file] [-pkeyopt opt:value] [-pubin] [-rev]",
          "[-sigfile file] [-sign] [-verify] [-verifyrecover]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing a public key",
          "-decrypt",
          "Decrypt the input data using a private key",
          "-derive",
          "Derive a shared secret using the peer key",
          "-encrypt",
          "Encrypt the input data using a public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER or PEM (default))",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-peerform fmt",
          "-peerkey file",
          "Peer key file",
          "-pkeyopt opt:value Public key options",
          "-pubin",
          "Input is a public key",
          "-rev",
          "Reverse the input data",
          "-sigfile file",
          "Signature file (verify operation only)",
          "-sign",
          "Sign the input data using private key",
          "-verify",
          "Verify the input data using public key",
          "-verifyrecover",
          "Verify with public key, recover original data"
        ],
        "prime": [
          "help is an invalid decimal value.",
          "usage: prime [-bits n] [-checks n] [-generate] [-hex] [-safe] p",
          "-bits n",
          "Number of bits in the generated prime number",
          "-checks n",
          "Miller-Rabin probablistic primality test iterations",
          "-generate",
          "Generate a pseudo-random prime number",
          "-hex",
          "Hexadecimal prime numbers",
          "-safe",
          "Generate only \"safe\" prime numbers"
        ],
        "rand": [
          "usage: rand [-base64 | -hex] [-out file] num",
          "-base64",
          "Perform base64 encoding on output",
          "-hex",
          "Hexadecimal output",
          "-out file",
          "Write to the given file instead of standard output"
        ],
        "req": [
          "usage: req [-addext ext] [-asn1-kludge] [-batch] [-config file]",
          "[-days n] [-extensions section] [-in file]",
          "[-inform der | pem] [-key keyfile] [-keyform der | pem]",
          "[-keyout file] [-md4 | -md5 | -sha1] [-modulus]",
          "[-multivalue-rdn] [-nameopt option] [-new] [-newhdr]",
          "[-newkey arg] [-no-asn1-kludge] [-nodes] [-noout]",
          "[-out file] [-outform der | pem] [-passin arg]",
          "[-passout arg] [-pkeyopt opt:value] [-pubkey]",
          "[-reqexts section] [-reqopt option] [-set_serial n]",
          "[-sigopt nm:v] [-subj arg] [-subject] [-text] [-utf8]",
          "[-verbose] [-verify] [-x509]",
          "-addext key=value",
          "Additional certificate extension (may be repeated)",
          "-batch",
          "Operate in batch mode",
          "-config file",
          "Configuration file to use as request template",
          "-days number",
          "Number of days generated certificate is valid for",
          "-extensions section",
          "Config section to use for certificate extensions",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-key file",
          "Private key file",
          "-keyform format",
          "Private key format (DER or PEM (default))",
          "-keyout file",
          "Private key output file",
          "-modulus",
          "Print RSA modulus",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-nameopt arg",
          "Certificate name options",
          "-new",
          "New request",
          "-newhdr",
          "Include 'NEW' in header lines",
          "-newkey param",
          "Generate a new key using given parameters",
          "-nodes",
          "Do not encrypt output private key",
          "-noout",
          "Do not output request",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-passin source",
          "Private key input password source",
          "-passout source",
          "Private key output password source",
          "-pkeyopt opt:val",
          "Set the public key algorithm option opt to val",
          "-pubkey",
          "Output the public key",
          "-reqexts section",
          "Config section to use for request extensions",
          "-reqopt option",
          "Request text options",
          "-set_serial serial Serial number to use for generated certificate",
          "-sigopt name:val",
          "Signature options",
          "-subj name",
          "Set or modify the request subject",
          "-subject",
          "Output the subject of the request",
          "-text",
          "Print request in text form",
          "-utf8",
          "Input characters are in UTF-8 (default ASCII)",
          "-verbose",
          "Verbose",
          "-verify",
          "Verify signature on request",
          "-x509",
          "Output an X.509 structure instead of a certificate request"
        ],
        "rsa": [
          "usage: rsa [-ciphername] [-check] [-in file] [-inform fmt]",
          "[-modulus] [-noout] [-out file] [-outform fmt] [-passin src]",
          "[-passout src] [-pubin] [-pubout] [-sgckey] [-text]",
          "-check",
          "Check consistency of RSA private key",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER, NET or PEM (default))",
          "-modulus",
          "Print the RSA key modulus",
          "-noout",
          "Do not print encoded version of the key",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER, NET or PEM (default PEM))",
          "-passin src",
          "Input file passphrase source",
          "-passout src",
          "Output file passphrase source",
          "-pubin",
          "Expect a public key (default private key)",
          "-pubout",
          "Output a public key (default private key)",
          "-sgckey",
          "Use modified NET algorithm for IIS and SGC keys",
          "-text",
          "Print in plain text in addition to encoded",
          "Valid ciphername values:",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-ccm",
          "",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-chacha",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-gost89-ecb",
          "-id-aes128-CCM",
          "-id-aes128-GCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-GCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-GCM",
          "-id-aes256-wrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-sm4",
          "-sm4-cbc",
          "-sm4-cfb",
          "-sm4-ctr",
          "-sm4-ecb",
          "-sm4-ofb",
          "Invalid cipher 'help'"
        ],
        "rsautl": [
          "usage: rsautl [-asn1parse] [-certin] [-decrypt] [-encrypt] [-hexdump]",
          "[-in file] [-inkey file] [-keyform der | pem]",
          "[-oaep | -pkcs | -raw | -x931] [-out file] [-passin arg]",
          "[-pubin] [-rev] [-sign] [-verify]",
          "-asn1parse",
          "ASN.1 parse the output data",
          "-certin",
          "Input is a certificate containing an RSA public key",
          "-decrypt",
          "Decrypt the input data using RSA private key",
          "-encrypt",
          "Encrypt the input data using RSA public key",
          "-hexdump",
          "Hex dump the output data",
          "-in file",
          "Input file (default stdin)",
          "-inkey file",
          "Input key file",
          "-keyform fmt",
          "Input key format (DER, TXT or PEM (default))",
          "-oaep",
          "Use PKCS#1 OAEP padding",
          "-out file",
          "Output file (default stdout)",
          "-passin arg",
          "Key password source",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-pubin",
          "Input is an RSA public key",
          "-raw",
          "Use no padding",
          "-rev",
          "Reverse the input data",
          "-sign",
          "Sign the input data using RSA private key",
          "-verify",
          "Verify the input data using RSA public key",
          "-x931",
          "Use ANSI X9.31 padding"
        ],
        "s_client": [
          "usage: s_client [-4 | -6] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-certform der | pem] [-check_ss_sig]",
          "[-cipher cipherlist] [-connect host[:port]] [-crl_check]",
          "[-crl_check_all] [-crlf] [-debug] [-dtls] [-dtls1] [-dtls1_2] [-extended_crl]",
          "[-groups list] [-host host] [-ign_eof] [-ignore_critical]",
          "[-issuer_checks] [-key keyfile] [-keyform der | pem]",
          "[-keymatexport label] [-keymatexportlen len] [-legacy_server_connect]",
          "[-msg] [-mtu mtu] [-nbio] [-nbio_test] [-no_comp] [-no_ign_eof]",
          "[-no_legacy_server_connect] [-no_ticket] [-no_tls1] [-no_tls1_1]",
          "[-no_tls1_2] [-no_tls1_3] [-pass arg] [-pause] [-policy_check]",
          "[-port port] [-prexit] [-proxy host:port] [-quiet] [-reconnect]",
          "[-servername name] [-serverpref] [-sess_in file] [-sess_out file]",
          "[-showcerts] [-starttls protocol] [-state] [-status] [-timeout]",
          "[-tls1] [-tls1_1] [-tls1_2] [-tls1_3] [-tlsextdebug]",
          "[-use_srtp profiles] [-verify depth] [-verify_return_error]",
          "[-x509_strict] [-xmpphost host]",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-alpn protocols",
          "Set the advertised protocols for ALPN (comma-separated list)",
          "-bugs",
          "Enable various workarounds for buggy implementations",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use, PEM format assumed",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher cipherlist Preferred cipher to use (see 'openssl ciphers')",
          "-connect host:port Who to connect to (default is localhost:4433)",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-debug",
          "Print extensive debugging information",
          "-dtls",
          "Use any version of DTLS",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-host host",
          "Use -connect instead",
          "-ign_eof",
          "Ignore input EOF (default when -quiet)",
          "-key file",
          "Private key file to use, if not, -cert file is used",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-msg",
          "Show all protocol messages with hex dump",
          "-mtu mtu",
          "Set the link layer MTU on DTLS connections",
          "-nbio",
          "Turn on non-blocking I/O",
          "-nbio_test",
          "Test non-blocking I/O",
          "-no_ign_eof",
          "Don't ignore input EOF",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-no_ticket",
          "Disable use of RFC4507 session ticket support",
          "-no_tls1",
          "Disable the use of TLSv1",
          "-no_tls1_1",
          "Disable the use of TLSv1.1",
          "-no_tls1_2",
          "Disable the use of TLSv1.2",
          "-no_tls1_3",
          "Disable the use of TLSv1.3",
          "-pass arg",
          "Private key file pass phrase source",
          "-pause",
          "Pause 1 second between each read and write call",
          "-port port",
          "-prexit",
          "Print session information when the program exits",
          "-proxy host:port",
          "Connect to http proxy",
          "-quiet",
          "Inhibit printing of session and certificate info",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-servername name",
          "Set TLS extension servername in ClientHello (SNI)",
          "-serverpref",
          "Use server's cipher preferences",
          "-sess_in file",
          "File to read TLS session from",
          "-sess_out file",
          "File to write TLS session to",
          "-showcerts",
          "Show all server certificates in the chain",
          "-starttls protocol Use the STARTTLS command before starting TLS,",
          "smtp, lmtp, pop3, imap, ftp and xmpp are supported.",
          "-state",
          "Print the TLS session states",
          "-status",
          "Send a certificate status request to the server (OCSP)",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profiles",
          "-verify depth",
          "Turn on peer certificate verification, with a max of depth",
          "-verify_return_error",
          "Return verification error",
          "-xmpphost host",
          "Connect to this virtual host on the xmpp server"
        ],
        "s_server": [
          "usage: s_server [-accept port] [-alpn protocols] [-bugs] [-CAfile file]",
          "[-CApath directory] [-cert file] [-cert2 file]",
          "[-certform der | pem] [-cipher cipherlist]",
          "[-context id] [-crl_check] [-crl_check_all] [-crlf]",
          "[-dcert file] [-dcertform der | pem] [-debug]",
          "[-dhparam file] [-dkey file] [-dkeyform der | pem]",
          "[-dpass arg] [-dtls] [-dtls1] [-dtls1_2] [-groups list] [-HTTP]",
          "[-id_prefix arg] [-key keyfile] [-key2 keyfile]",
          "[-keyform der | pem] [-keymatexport label]",
          "[-keymatexportlen len] [-msg] [-mtu mtu] [-naccept num]",
          "[-named_curve arg] [-nbio] [-nbio_test] [-no_cache]",
          "[-no_dhe] [-no_ecdhe] [-no_ticket] [-no_tls1]",
          "[-no_tls1_1] [-no_tls1_2] [-no_tls1_3] [-no_tmp_rsa]",
          "[-nocert] [-pass arg] [-quiet] [-servername name]",
          "[-servername_fatal] [-serverpref] [-state] [-status]",
          "[-status_timeout nsec] [-status_url url]",
          "[-status_verbose] [-timeout] [-tls1] [-tls1_1]",
          "[-tls1_2] [-tls1_3] [-tlsextdebug] [-use_srtp profiles]",
          "[-Verify depth] [-verify depth] [-verify_return_error]",
          "[-WWW] [-www]",
          "-accept port",
          "Port to accept on (default is 4433)",
          "-alpn protocols",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-CAfile file",
          "PEM format file of CA certificates",
          "-CApath directory",
          "PEM format directory of CA certificates",
          "-cert file",
          "Certificate file to use",
          "(default is server.pem)",
          "-cert2 file",
          "Certificate file to use for servername",
          "(default is server2.pem)",
          "-certform fmt",
          "Certificate format (PEM or DER) PEM default",
          "-cipher list",
          "List of ciphers to enable (see `openssl ciphers`)",
          "-context id",
          "Set session ID context",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-dcert file",
          "Second certificate file to use (usually for DSA)",
          "-dcertform fmt",
          "Second certificate format (PEM or DER) PEM default",
          "-debug",
          "Print more output",
          "-dhparam file",
          "DH parameter file to use, in cert file if not specified",
          "-dkey file",
          "Second private key file to use (usually for DSA)",
          "-dkeyform fmt",
          "Second key format (PEM or DER) PEM default",
          "-dpass arg",
          "Second private key file pass phrase source",
          "-dtls",
          "Use any version of DTLS",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-groups list",
          "Specify EC groups (colon-separated list)",
          "-HTTP",
          "Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-id_prefix arg",
          "Generate SSL/TLS session IDs prefixed by 'arg'",
          "-key file",
          "Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-key2 file",
          "Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-keyform fmt",
          "Key format (PEM or DER) PEM default",
          "-keymatexport label",
          "Export keying material using label",
          "-keymatexportlen len",
          "Export len bytes of keying material (default 20)",
          "-msg",
          "Show protocol messages",
          "-mtu mtu",
          "Set link layer MTU",
          "-naccept num",
          "Terminate after num connections",
          "-nbio",
          "Run with non-blocking I/O",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-no_cache",
          "Disable session cache",
          "-no_comp",
          "Disable SSL/TLS compression",
          "-no_dhe",
          "Disable ephemeral DH",
          "-no_ecdhe",
          "Disable ephemeral ECDH",
          "-no_ticket",
          "Disable use of RFC4507bis session tickets",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-pass arg",
          "Private key file pass phrase source",
          "-quiet",
          "Inhibit printing of session and certificate information",
          "-servername name",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "On mismatch send fatal alert (default warning alert)",
          "-serverpref",
          "Use server's cipher preferences",
          "-state",
          "Print the SSL states",
          "-status",
          "Respond to certificate status requests",
          "-status_timeout nsec",
          "Status request responder timeout",
          "-status_url url",
          "Status request fallback URL",
          "-status_verbose",
          "Enable status request verbose printout",
          "-timeout",
          "Enable timeouts",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "Just talk TLSv1.2",
          "-tls1_3",
          "Just talk TLSv1.3",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-use_srtp profiles Offer SRTP key management with a colon-separated profile list",
          "-Verify depth",
          "Turn on peer certificate verification, must have a cert",
          "-verify depth",
          "Turn on peer certificate verification",
          "-verify_return_error",
          "Return verification error",
          "-WWW",
          "-www",
          "Respond to a 'GET /' with a status page"
        ],
        "s_time": [
          "usage: s_time [-bugs] [-CAfile file] [-CApath directory] [-cert file]",
          "[-cipher cipherlist] [-connect host:port] [-key keyfile]",
          "[-nbio] [-new] [-no_shutdown] [-reuse] [-time seconds]",
          "[-verify depth] [-www page]",
          "-bugs",
          "Enable workarounds for known SSL/TLS bugs",
          "-CAfile file",
          "File containing trusted certificates in PEM format",
          "-CApath path",
          "Directory containing trusted certificates",
          "-cert file",
          "Client certificate to use, if one is requested",
          "-cipher list",
          "List of cipher suites to send to the server",
          "-connect host:port Host and port to connect to (default localhost:4433)",
          "-key file",
          "Client private key to use, if one is required",
          "-nbio",
          "Use non-blocking I/O",
          "-new",
          "Use a new session ID for each connection",
          "-no_shutdown",
          "Shut down the connection without notifying the server",
          "-reuse",
          "Reuse the same session ID for each connection",
          "-time seconds",
          "Duration to perform timing tests for (default 30)",
          "-verify depth",
          "Enable peer certificate verification with given depth",
          "-www page",
          "Page to GET from the server (default none)"
        ],
        "sess_id": [
          "usage: sess_id [-cert] [-context id] [-in file] [-inform fmt] [-noout]",
          "[-out file] [-outform fmt] [-text]",
          "-cert",
          "Output certificate if present in session",
          "-context id",
          "Set the session ID context for output",
          "-in file",
          "Input file (default stdin)",
          "-inform format",
          "Input format (DER or PEM (default))",
          "-noout",
          "Do not output the encoded session info",
          "-out file",
          "Output file (default stdout)",
          "-outform format",
          "Output format (DER or PEM (default))",
          "-text",
          "Print various public or private key components in plain text"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-passin arg",
          "input file pass phrase source",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3",
          "aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "aes-128-gcm aes-256-gcm",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4 chacha20-poly1305",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571 ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224",
          "ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "usage: spkac [-challenge string] [-in file] [-key file] [-noout]",
          "[-out file] [-passin src] [-pubkey] [-spkac name] [-spksect section]",
          "[-verify]",
          "-challenge string",
          "Specify challenge string if SPKAC is generated",
          "-in file",
          "Input file (default stdin)",
          "-key file",
          "Create SPKAC using private key file",
          "-noout",
          "Do not print text version of SPKAC",
          "-out file",
          "Output file (default stdout)",
          "-passin src",
          "Input file passphrase source",
          "-pubkey",
          "Output public key of an SPKAC (not used if creating)",
          "-spkac name",
          "SPKAC name (default \"SPKAC\")",
          "-spksect name",
          "Name of the section containing SPKAC (default \"default\")",
          "-verify",
          "Verify digital signature on supplied SPKAC"
        ],
        "ts": [
          "usage:",
          "ts -query [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md4|-md5|-sha1|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "139849348925248:error:02FFF002:system library:func(4095):No such file or directory:bio/bss_file.c:255:fopen('help', 'r')",
          "139849348925248:error:20FFF002:BIO routines:CRYPTO_internal:system lib:bio/bss_file.c:257:",
          "unable to load certificate",
          "usage: verify [-CAfile file] [-CApath directory] [-check_ss_sig]",
          "[-CRLfile file] [-crl_check] [-crl_check_all]",
          "[-explicit_policy] [-extended_crl]",
          "[-ignore_critical] [-inhibit_any] [-inhibit_map]",
          "[-issuer_checks] [-policy_check] [-purpose purpose]",
          "[-trusted file] [-untrusted file] [-verbose]",
          "[-x509_strict] [certificates]",
          "-CAfile file",
          "Certificate Authority file",
          "-CApath path",
          "Certificate Authority path",
          "-CRLfile file",
          "Certificate Revocation List file",
          "-trusted file",
          "Trusted certificates file",
          "-untrusted file",
          "Untrusted certificates file",
          "-verbose",
          "Verbose",
          "Verification options:",
          "-attime epoch",
          "Use epoch as the verification time",
          "-check_ss_sig",
          "Check the root CA self-signed certificate signature",
          "-crl_check",
          "Enable CRL checking for the leaf certificate",
          "-crl_check_all",
          "Enable CRL checking for the entire certificate chain",
          "-explicit_policy",
          "Require explicit policy (per RFC 3280)",
          "-extended_crl",
          "Enable extended CRL support",
          "-ignore_critical",
          "Disable critical extension checking",
          "-inhibit_any",
          "Inhibit any policy (per RFC 3280)",
          "-inhibit_map",
          "Inhibit policy mapping (per RFC 3280)",
          "-issuer_checks",
          "Enable debugging of certificate issuer checks",
          "-legacy_verify",
          "Use legacy certificate chain verification",
          "-policy name",
          "Add given policy to the acceptable set",
          "-policy_check",
          "Enable certificate policy checking",
          "-policy_print",
          "Print policy",
          "-purpose name",
          "Verify for the given purpose",
          "-use_deltas",
          "Use delta CRLS (if present)",
          "-verify_depth num",
          "Limit verification to the given depth",
          "-x509_strict",
          "Use strict X.509 rules (disables workarounds)",
          "Valid purposes:",
          "sslclient",
          "SSL client",
          "sslserver",
          "SSL server",
          "nssslserver",
          "Netscape SSL server",
          "smimesign",
          "S/MIME signing",
          "smimeencrypt",
          "S/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper",
          "OCSP helper",
          "timestampsign",
          "Time Stamp signing"
        ],
        "version": [
          "usage: version [-abdfopv]",
          "-a",
          "All information (same as setting all other flags)",
          "-b",
          "Date the current version of OpenSSL was built",
          "-d",
          "OPENSSLDIR value",
          "-f",
          "Compilation flags",
          "-o",
          "Option information",
          "-p",
          "Platform settings",
          "-v",
          "Current OpenSSL version"
        ],
        "x509": [
          "usage: x509 [-C] [-addreject arg] [-addtrust arg] [-alias] [-CA file]",
          "[-CAcreateserial] [-CAform der | pem] [-CAkey file]",
          "[-CAkeyform der | pem] [-CAserial file] [-certopt option]",
          "[-checkend arg] [-clrext] [-clrreject] [-clrtrust] [-dates]",
          "[-days arg] [-email] [-enddate] [-extensions section]",
          "[-extfile file] [-fingerprint] [-hash] [-in file]",
          "[-inform der | net | pem] [-issuer] [-issuer_hash]",
          "[-issuer_hash_old] [-keyform der | pem] [-md5 | -sha1]",
          "[-modulus] [-nameopt option] [-next_serial] [-noout]",
          "[-ocsp_uri] [-ocspid] [-out file]",
          "[-outform der | net | pem] [-passin arg] [-pubkey]",
          "[-purpose] [-req] [-serial] [-set_serial n] [-setalias arg]",
          "[-signkey file] [-sigopt nm:v] [-startdate] [-subject]",
          "[-subject_hash] [-subject_hash_old] [-text] [-trustout]",
          "[-x509toreq]",
          "-C",
          "Convert the certificate into C code",
          "-addreject arg",
          "Reject certificate for a given purpose",
          "-addtrust arg",
          "Trust certificate for a given purpose",
          "-alias",
          "Output certificate alias",
          "-CA file",
          "CA certificate in PEM format unless -CAform is specified",
          "-CAcreateserial",
          "Create serial number file if it does not exist",
          "-CAform fmt",
          "CA format - default PEM",
          "-CAkey file",
          "CA key in PEM format unless -CAkeyform is specified",
          "if omitted, the key is assumed to be in the CA file",
          "-CAkeyform fmt",
          "CA key format - default PEM",
          "-CAserial file",
          "Serial file",
          "-certopt option",
          "Various certificate text options",
          "-checkend arg",
          "Check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-clrext",
          "Clear all extensions",
          "-clrreject",
          "Clear all rejected purposes",
          "-clrtrust",
          "Clear all trusted purposes",
          "-dates",
          "Both Before and After dates",
          "-days arg",
          "How long till expiry of a signed certificate - def 30 days",
          "-email",
          "Print email address(es)",
          "-enddate",
          "Print notAfter field",
          "-extensions section",
          "Section from config file with X509V3 extensions to add",
          "-extfile file",
          "Configuration file with X509V3 extensions to add",
          "-fingerprint",
          "Print the certificate fingerprint",
          "-hash",
          "Synonym for -subject_hash",
          "-in file",
          "Input file - default stdin",
          "-inform fmt",
          "Input format - default PEM (one of DER, NET or PEM)",
          "-issuer",
          "Print issuer name",
          "-issuer_hash",
          "Print issuer hash value",
          "-issuer_hash_old",
          "Print old-style (MD5) issuer hash value",
          "-keyform fmt",
          "Private key format - default PEM",
          "-modulus",
          "Print the RSA key modulus",
          "-nameopt option",
          "Various certificate name options",
          "-next_serial",
          "Print the next serial number",
          "-noout",
          "No certificate output",
          "-ocsp_uri",
          "Print OCSP Responder URL(s)",
          "-ocspid",
          "Print OCSP hash values for the subject name and public key",
          "-out file",
          "Output file - default stdout",
          "-outform fmt",
          "Output format - default PEM (one of DER, NET or PEM)",
          "-passin src",
          "Private key password source",
          "-pubkey",
          "Output the public key",
          "-purpose",
          "Print out certificate purposes",
          "-req",
          "Input is a certificate request, sign and output",
          "-serial",
          "Print serial number value",
          "-set_serial n",
          "Serial number to use",
          "-setalias arg",
          "Set certificate alias",
          "-signkey file",
          "Self sign cert with arg",
          "-sigopt nm:v",
          "Various signature algorithm options",
          "-startdate",
          "Print notBefore field",
          "-subject",
          "Print subject name",
          "-subject_hash",
          "Print subject hash value",
          "-subject_hash_old",
          "Print old-style (MD5) subject hash value",
          "-text",
          "Print the certificate in text form",
          "-trustout",
          "Output a trusted certificate",
          "-x509toreq",
          "Output a certification request object"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "certhash",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "gost-mac",
        "md4",
        "md5",
        "md_gost94",
        "ripemd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "sm3",
        "sm3WithRSAEncryption",
        "streebog256",
        "streebog512",
        "whirlpool"
      ]
    }
  },
  "openssl": {
    "0.9.8zh": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse [options] <infile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file (output format is always DER",
          "-noout arg",
          "don't produce any output",
          "-offset arg",
          "offset into file",
          "-length arg",
          "length of section in file",
          "-i",
          "indent entries",
          "-dump",
          "dump unknown data in hex form",
          "-dlimit arg",
          "dump the first arg bytes of unknown data in hex form",
          "-oid file",
          "file of extra oid definitions",
          "-strparse offset",
          "a series of these can be used to 'dig' into multiple",
          "ASN1 blob wrappings",
          "-genstr str",
          "string to generate ASN1 structure from",
          "-genconf file file to generate ASN1 structure from"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk alot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md2, md5, sha or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM or ENGINE)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "ciphers": [
          "Error in cipher list",
          "761919:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl_lib.c:1216:",
          "usage: ciphers args",
          "-v",
          "- verbose mode, a textual listing of the ciphers in SSLeay",
          "-ssl2",
          "- SSL2 mode",
          "-ssl3",
          "- SSL3 mode",
          "-tls1",
          "- TLS1 mode"
        ],
        "crl": [
          "usage: crl args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-text",
          "- print out a text format version",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-hash",
          "- print hash value",
          "-fingerprint",
          "- print the crl fingerprint",
          "-issuer",
          "- print issuer DN",
          "-lastupdate",
          "- lastUpdate field",
          "-nextupdate",
          "- nextUpdate field",
          "-crlnumber",
          "- print CRL number",
          "-noout",
          "- no CRL output",
          "-CAfile",
          "name",
          "- verify CRL using certificates in file \"name\"",
          "-CApath",
          "dir",
          "- verify CRL using certificates in \"dir\"",
          "-nameopt arg",
          "- various certificate name options"
        ],
        "crl2pkcs7": [
          "crl2pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-certfile arg",
          "certificates file of chain to a trusted CA",
          "(can be used more than once)",
          "-nocrl",
          "no crl to load, just certs from '-certfile'"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM or ENGINE)",
          "-signature file signature to verify",
          "-hmac key",
          "create hashed MAC with key",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-md5",
          "to use the md5 message digest algorithm (default)",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md2",
          "to use the md2 message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha",
          "to use the sha message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-mdc2",
          "to use the mdc2 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm"
        ],
        "dh": [
          "dh [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "dhparam": [
          "dhparam [options] [numbits]",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-dsaparam",
          "read or generate DSA parameters, convert to DH",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-2",
          "generate parameters using",
          "2 as the generator value",
          "-5",
          "5 as the generator value",
          "numbits",
          "number of bits in to generate (default 512)",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "-noout",
          "no output"
        ],
        "dsa": [
          "dsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the DSA public value"
        ],
        "dsaparam": [
          "dsaparam [options] [bits] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "print as text",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-genkey",
          "generate a DSA key",
          "-rand",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "number",
          "number of bits to use for generating private key"
        ],
        "ec": [
          "ec [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output, instead of 'des' every other",
          "cipher supported by OpenSSL can be used",
          "-text",
          "print the key",
          "-noout",
          "don't print key out",
          "-param_out",
          "print the elliptic curve parameters",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit"
        ],
        "ecparam": [
          "ecparam [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - default PEM (DER or PEM)",
          "-outform arg",
          "output format - default PEM",
          "-in",
          "arg",
          "input file",
          "- default stdin",
          "-out arg",
          "output file - default stdout",
          "-noout",
          "do not print the ec parameter",
          "-text",
          "print the ec parameters in text form",
          "-check",
          "validate the ec parameters",
          "-C",
          "print a 'C' function creating the parameters",
          "-name arg",
          "use the ec parameters with 'short name' name",
          "-list_curves",
          "prints a list of all currently available curve 'short names'",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit",
          "-no_seed",
          "if 'explicit' parameters are choosen do not use the seed",
          "-genkey",
          "generate ec key",
          "-rand file",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device"
        ],
        "enc": [
          "options are",
          "-in <file>",
          "input file",
          "-out <file>",
          "output file",
          "-pass <arg>",
          "pass phrase source",
          "-e",
          "encrypt",
          "-d",
          "decrypt",
          "-a/-base64",
          "base64 encode/decode, depending on encryption flag",
          "-k",
          "passphrase is the next argument",
          "-kfile",
          "passphrase is the first line of the file argument",
          "-md",
          "the next argument is the md to use to create a key",
          "from a passphrase.",
          "One of md2, md5, sha or sha1",
          "-K/-iv",
          "key/iv in hex is the next argument",
          "-[pP]",
          "print the iv/key (then exit if -P)",
          "-bufsize <n>",
          "buffer size",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "Cipher Types",
          "-aes-128-cbc",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "",
          "-aes-128-cfb8",
          "-aes-128-ecb",
          "-aes-128-ofb",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ecb",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ecb",
          "-aes-256-ofb",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40"
        ],
        "engine": [
          "761963:error:25066067:DSO support routines:DLFCN_LOAD:could not load the shared library:dso_dlfcn.c:163:filename(/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v0.9.8zh/lib/engines/libhelp.so): /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v0.9.8zh/lib/engines/libhelp.so: cannot open shared object file: No such file or directory",
          "761963:error:25070067:DSO support routines:DSO_load:could not load the shared library:dso_lib.c:232:",
          "761963:error:260B6084:engine routines:DYNAMIC_LOAD:dso not found:eng_dyn.c:469:",
          "761963:error:2606A074:engine routines:ENGINE_by_id:no such engine:eng_list.c:387:id=help",
          "usage: engine opts [engine ...]",
          "-v[v[v[v]]] - verbose mode, for each engine, list its 'control commands'",
          "-vv will additionally display each command's description",
          "-vvv will also add the input flags for each command",
          "-vvvv will also show internal input flags",
          "-c",
          "- for each engine, also list the capabilities",
          "-t[t]",
          "- for each engine, check that they are really available",
          "-tt will display error trace for unavailable engines",
          "-pre <cmd>",
          "- runs command 'cmd' against the ENGINE before any attempts",
          "to load it (if -t is used)",
          "-post <cmd> - runs command 'cmd' against the ENGINE after loading it",
          "(only used if -t is also provided)",
          "NB: -pre and -post will be applied to all ENGINEs supplied on the command",
          "line, or all supported ENGINEs if none are specified.",
          "Eg. '-pre \"SO_PATH:/lib/libdriver.so\"' calls command \"SO_PATH\" with",
          "argument \"/lib/libdriver.so\"."
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] <errno> ...",
          "-help: bad error code"
        ],
        "gendh": [
          "usage: gendh [args] [numbits]",
          "-out file - output the key to 'file",
          "-2",
          "- use 2 as the generator value",
          "-5",
          "- use 5 as the generator value",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "gendsa": [
          "help: No such file or directory",
          "761975:error:02001002:system library:fopen:No such file or directory:bss_file.c:349:fopen('help','r')",
          "761975:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:351:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "nseq": [
          "Netscape certificate sequence utility",
          "Usage nseq [options]",
          "where options are",
          "-in file",
          "input file",
          "-out file output file",
          "-toseq",
          "output NS Sequence file"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num",
          "port to run responder on",
          "-index file",
          "certificate status index file",
          "-CA file",
          "CA certificate",
          "-rsigner file",
          "responder certificate to sign responses with",
          "-rkey file",
          "responder key to sign responses with",
          "-rother file",
          "other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n",
          "number of minutes before next update",
          "-ndays n",
          "number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)"
        ],
        "passwd": [
          "VRmzzhPC56fek",
          "Usage: passwd [options] [passwords]",
          "where options are",
          "-crypt",
          "standard Unix password algorithm (default)",
          "-1",
          "MD5-based password algorithm",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-salt string",
          "use provided salt",
          "-in file",
          "read passwords from file",
          "-stdin",
          "read passwords from stdin",
          "-noverify",
          "never verify when reading password from terminal",
          "-quiet",
          "no warnings",
          "-table",
          "format output as table",
          "-reverse",
          "switch table columns"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-maciter",
          "use MAC iteration",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-print_certs",
          "print any certs or crl in the input",
          "-text",
          "print full details of certificates",
          "-noout",
          "don't output encoded data",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkcs8": [
          "Usage pkcs8 [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-topk8",
          "output PKCS8 file",
          "-nooct",
          "use (nonstandard) no octet format",
          "-embed",
          "use (nonstandard) embedded DSA parameters format",
          "-nsdb",
          "use (nonstandard) DSA Netscape DB format",
          "-noiter",
          "use 1 as iteration count",
          "-nocrypt",
          "use or expect unencrypted private key",
          "-v2 alg",
          "use PKCS#5 v2.0 and cipher \"alg\"",
          "-v1 obj",
          "use PKCS#5 v1.5 and cipher \"alg\"",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "prime": [
          "0 is not prime",
          "Unknown option '-help'",
          "options are",
          "-hex",
          "hex",
          "-checks <n>",
          "number of checks"
        ],
        "rand": [
          "Usage: rand [options] num",
          "where options are",
          "-out file",
          "- write to file",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-rand file:file:... - seed PRNG from files",
          "-base64",
          "- base64 encode output",
          "-hex",
          "- hex encode output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-engine e",
          "use engine e, possibly a hardware device",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md2, mdc2, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "rsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER NET PEM",
          "-outform arg",
          "output format - one of DER NET PEM",
          "-in arg",
          "input file",
          "-sgckey",
          "Use IIS SGC key format",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the RSA key modulus",
          "-check",
          "verify key consistency",
          "-pubin",
          "expect a public key in input file",
          "-pubout",
          "output a public key",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "pass phrase source"
        ],
        "s_client": [
          "usage: s_client args",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-verify depth - turn on peer certificate verification",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-ssl2",
          "- just use SSLv2",
          "-ssl3",
          "- just use SSLv3",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-fallback_scsv - send TLS_FALLBACK_SCSV",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-serverpref",
          "- Use server's cipher preferences (only SSLv2)",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-rand file:file:...",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appened to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM, DER or ENGINE) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM, DER or ENGINE) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is sect163r2).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- No server output",
          "-no_tmp_rsa",
          "- Do not generate a tmp RSA key",
          "-ssl2",
          "- Just talk SSLv2",
          "-ssl3",
          "- Just talk SSLv3",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-rand file:file:...",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)"
        ],
        "s_time": [
          "usage: s_time <args>",
          "-connect host:port - host:port to connect to (default is localhost:4433)",
          "-nbio",
          "- Run with non-blocking IO",
          "-ssl2",
          "- Just use SSLv2",
          "-ssl3",
          "- Just use SSLv3",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-new",
          "- Just time new connections",
          "-reuse",
          "- Just time connection reuse",
          "-www page",
          "- Retrieve 'page' from the site",
          "-time arg",
          "- max number of seconds to collect data, default 30",
          "-verify arg",
          "- turn on peer certificate verification, arg == depth",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-key arg",
          "- RSA file to use, PEM format assumed, key is in cert file",
          "file if not specified by this option",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-cipher",
          "- preferred cipher to use, play with 'openssl ciphers'"
        ],
        "sess_id": [
          "usage: sess_id args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-text",
          "- print ssl session id details",
          "-cert",
          "- output certificate",
          "-noout",
          "- no CRL output",
          "-context arg",
          "- set the session ID context"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM or ENGINE)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "input file pass phrase source",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "md2",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "rmd160",
          "idea-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3 aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige rc4",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571",
          "ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224 ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "rc2",
          "des",
          "aes",
          "rsa",
          "blowfish",
          "Available options:",
          "-elapsed",
          "measure time in real time instead of CPU user time.",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "spkac [options]",
          "where options are",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-key arg",
          "create SPKAC using private key",
          "-passin arg",
          "input file pass phrase source",
          "-challenge arg challenge string",
          "-spkac arg",
          "alternative SPKAC name",
          "-noout",
          "don't print SPKAC",
          "-pubkey",
          "output public key",
          "-verify",
          "verify SPKAC signature",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "verify": [
          "Error opening certificate file help",
          "762055:error:02001002:system library:fopen:No such file or directory:bss_file.c:349:fopen('help','r')",
          "762055:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:351:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-engine e] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper"
        ],
        "version": [
          "usage:version -[avbofpd]"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md2/-md5/-sha1/-mdc2 - digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "gendh",
        "gendsa",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "md2",
        "md4",
        "md5",
        "rmd160",
        "sha",
        "sha1"
      ]
    },
    "1.0.1u": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "seed",
        "seed-cbc",
        "seed-cfb",
        "seed-ecb",
        "seed-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse [options] <infile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file (output format is always DER",
          "-noout arg",
          "don't produce any output",
          "-offset arg",
          "offset into file",
          "-length arg",
          "length of section in file",
          "-i",
          "indent entries",
          "-dump",
          "dump unknown data in hex form",
          "-dlimit arg",
          "dump the first arg bytes of unknown data in hex form",
          "-oid file",
          "file of extra oid definitions",
          "-strparse offset",
          "a series of these can be used to 'dig' into multiple",
          "ASN1 blob wrappings",
          "-genstr str",
          "string to generate ASN1 structure from",
          "-genconf file file to generate ASN1 structure from"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk alot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md2, md5, sha or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM or ENGINE)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "ciphers": [
          "Error in cipher list",
          "17037360:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl_lib.c:1294:",
          "usage: ciphers args",
          "-v",
          "- verbose mode, a textual listing of the SSL/TLS ciphers in OpenSSL",
          "-V",
          "- even more verbose",
          "-ssl2",
          "- SSL2 mode",
          "-ssl3",
          "- SSL3 mode",
          "-tls1",
          "- TLS1 mode"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-seed",
          "encrypt with SEED",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM or ENGINE)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains only ever use the first certificate chain found",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "input file pass phrase source",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "usage: crl args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-text",
          "- print out a text format version",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-hash",
          "- print hash value",
          "-hash_old",
          "- print old-style (MD5) hash value",
          "-fingerprint",
          "- print the crl fingerprint",
          "-issuer",
          "- print issuer DN",
          "-lastupdate",
          "- lastUpdate field",
          "-nextupdate",
          "- nextUpdate field",
          "-crlnumber",
          "- print CRL number",
          "-noout",
          "- no CRL output",
          "-CAfile",
          "name",
          "- verify CRL using certificates in file \"name\"",
          "-CApath",
          "dir",
          "- verify CRL using certificates in \"dir\"",
          "-nameopt arg",
          "- various certificate name options"
        ],
        "crl2pkcs7": [
          "crl2pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-certfile arg",
          "certificates file of chain to a trusted CA",
          "(can be used more than once)",
          "-nocrl",
          "no crl to load, just certs from '-certfile'"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-hmac arg",
          "set the HMAC key to arg",
          "-non-fips-allow allow use of non FIPS digest",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM or ENGINE)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-mdc2",
          "to use the mdc2 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha",
          "to use the sha message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "dh [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "dhparam": [
          "dhparam [options] [numbits]",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-dsaparam",
          "read or generate DSA parameters, convert to DH",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-2",
          "generate parameters using",
          "2 as the generator value",
          "-5",
          "5 as the generator value",
          "numbits",
          "number of bits in to generate (default 2048)",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "-noout",
          "no output"
        ],
        "dsa": [
          "dsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the DSA public value"
        ],
        "dsaparam": [
          "dsaparam [options] [bits] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "print as text",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-genkey",
          "generate a DSA key",
          "-rand",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "number",
          "number of bits to use for generating private key"
        ],
        "ec": [
          "ec [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output, instead of 'des' every other",
          "cipher supported by OpenSSL can be used",
          "-text",
          "print the key",
          "-noout",
          "don't print key out",
          "-param_out",
          "print the elliptic curve parameters",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit"
        ],
        "ecparam": [
          "ecparam [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - default PEM (DER or PEM)",
          "-outform arg",
          "output format - default PEM",
          "-in",
          "arg",
          "input file",
          "- default stdin",
          "-out arg",
          "output file - default stdout",
          "-noout",
          "do not print the ec parameter",
          "-text",
          "print the ec parameters in text form",
          "-check",
          "validate the ec parameters",
          "-C",
          "print a 'C' function creating the parameters",
          "-name arg",
          "use the ec parameters with 'short name' name",
          "-list_curves",
          "prints a list of all currently available curve 'short names'",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit",
          "-no_seed",
          "if 'explicit' parameters are chosen do not use the seed",
          "-genkey",
          "generate ec key",
          "-rand file",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device"
        ],
        "enc": [
          "options are",
          "-in <file>",
          "input file",
          "-out <file>",
          "output file",
          "-pass <arg>",
          "pass phrase source",
          "-e",
          "encrypt",
          "-d",
          "decrypt",
          "-a/-base64",
          "base64 encode/decode, depending on encryption flag",
          "-k",
          "passphrase is the next argument",
          "-kfile",
          "passphrase is the first line of the file argument",
          "-md",
          "the next argument is the md to use to create a key",
          "from a passphrase.",
          "One of md2, md5, sha or sha1",
          "-S",
          "salt in hex is the next argument",
          "-K/-iv",
          "key/iv in hex is the next argument",
          "-[pP]",
          "print the iv/key (then exit if -P)",
          "-bufsize <n>",
          "buffer size",
          "-nopad",
          "disable standard block padding",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "Cipher Types",
          "-aes-128-cbc",
          "-aes-128-cbc-hmac-sha1",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-gcm",
          "-aes-128-ofb",
          "-aes-128-xts",
          "-aes-192-cbc",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-gcm",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-cbc-hmac-sha1",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-gcm",
          "-aes-256-ofb",
          "-aes-256-xts",
          "-aes128",
          "-aes192",
          "",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-id-aes128-GCM",
          "-id-aes192-GCM",
          "-id-aes256-GCM",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-rc4-hmac-md5",
          "-seed",
          "-seed-cbc",
          "-seed-cfb",
          "-seed-ecb",
          "-seed-ofb"
        ],
        "engine": [
          "36431920:error:25066067:DSO support routines:DLFCN_LOAD:could not load the shared library:dso_dlfcn.c:187:filename(/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.0.1u/lib/engines/libhelp.so): /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.0.1u/lib/engines/libhelp.so: cannot open shared object file: No such file or directory",
          "36431920:error:25070067:DSO support routines:DSO_load:could not load the shared library:dso_lib.c:232:",
          "36431920:error:260B6084:engine routines:DYNAMIC_LOAD:dso not found:eng_dyn.c:465:",
          "36431920:error:2606A074:engine routines:ENGINE_by_id:no such engine:eng_list.c:390:id=help",
          "usage: engine opts [engine ...]",
          "-v[v[v[v]]] - verbose mode, for each engine, list its 'control commands'",
          "-vv will additionally display each command's description",
          "-vvv will also add the input flags for each command",
          "-vvvv will also show internal input flags",
          "-c",
          "- for each engine, also list the capabilities",
          "-t[t]",
          "- for each engine, check that they are really available",
          "-tt will display error trace for unavailable engines",
          "-pre <cmd>",
          "- runs command 'cmd' against the ENGINE before any attempts",
          "to load it (if -t is used)",
          "-post <cmd> - runs command 'cmd' against the ENGINE after loading it",
          "(only used if -t is also provided)",
          "NB: -pre and -post will be applied to all ENGINEs supplied on the command",
          "line, or all supported ENGINEs if none are specified.",
          "Eg. '-pre \"SO_PATH:/lib/libdriver.so\"' calls command \"SO_PATH\" with",
          "argument \"/lib/libdriver.so\"."
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] <errno> ...",
          "-help: bad error code"
        ],
        "gendh": [
          "usage: gendh [args] [numbits]",
          "-out file - output the key to 'file",
          "-2",
          "- use 2 as the generator value",
          "-5",
          "- use 5 as the generator value",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "gendsa": [
          "help: No such file or directory",
          "40208432:error:02001002:system library:fopen:No such file or directory:bss_file.c:398:fopen('help','r')",
          "40208432:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:400:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "Usage: genpkey [options]",
          "where options may be",
          "-out file",
          "output file",
          "-outform X",
          "output format (DER or PEM)",
          "-pass arg",
          "output file pass phrase source",
          "-<cipher>",
          "use cipher <cipher> to encrypt the key",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-paramfile file",
          "parameters file",
          "-algorithm alg",
          "the public key algorithm",
          "-pkeyopt opt:value set the public key algorithm option <opt>",
          "to value <value>",
          "-genparam",
          "generate parameters, not key",
          "-text",
          "print the in text",
          "NB: options order may be important!",
          "See the manual page.",
          "Unknown cipher help"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "nseq": [
          "Netscape certificate sequence utility",
          "Usage nseq [options]",
          "where options are",
          "-in file",
          "input file",
          "-out file output file",
          "-toseq",
          "output NS Sequence file"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains",
          "only ever use the first certificate chain found",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n",
          "maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file",
          "additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num",
          "port to run responder on",
          "-index file",
          "certificate status index file",
          "-CA file",
          "CA certificate",
          "-rsigner file",
          "responder certificate to sign responses with",
          "-rkey file",
          "responder key to sign responses with",
          "-rother file",
          "other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n",
          "number of minutes before next update",
          "-ndays n",
          "number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request",
          "-timeout n",
          "timeout connection to OCSP responder after n seconds"
        ],
        "passwd": [
          "YgQ56DDmv7iUs",
          "Usage: passwd [options] [passwords]",
          "where options are",
          "-crypt",
          "standard Unix password algorithm (default)",
          "-1",
          "MD5-based password algorithm",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-salt string",
          "use provided salt",
          "-in file",
          "read passwords from file",
          "-stdin",
          "read passwords from stdin",
          "-noverify",
          "never verify when reading password from terminal",
          "-quiet",
          "no warnings",
          "-table",
          "format output as table",
          "-reverse",
          "switch table columns"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-seed",
          "encrypt private keys with seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-print_certs",
          "print any certs or crl in the input",
          "-text",
          "print full details of certificates",
          "-noout",
          "don't output encoded data",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkcs8": [
          "Usage pkcs8 [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-topk8",
          "output PKCS8 file",
          "-nooct",
          "use (nonstandard) no octet format",
          "-embed",
          "use (nonstandard) embedded DSA parameters format",
          "-nsdb",
          "use (nonstandard) DSA Netscape DB format",
          "-noiter",
          "use 1 as iteration count",
          "-nocrypt",
          "use or expect unencrypted private key",
          "-v2 alg",
          "use PKCS#5 v2.0 and cipher \"alg\"",
          "-v1 obj",
          "use PKCS#5 v1.5 and cipher \"alg\"",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkeyparam": [],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "0 is not prime",
          "Unknown option '-help'",
          "options are",
          "-hex",
          "hex",
          "-checks <n>",
          "number of checks"
        ],
        "rand": [
          "Usage: rand [options] num",
          "where options are",
          "-out file",
          "- write to file",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-rand file:file:... - seed PRNG from files",
          "-base64",
          "- base64 encode output",
          "-hex",
          "- hex encode output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-engine e",
          "use engine e, possibly a hardware device",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md2, mdc2, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "rsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER NET PEM",
          "-outform arg",
          "output format - one of DER NET PEM",
          "-in arg",
          "input file",
          "-sgckey",
          "Use IIS SGC key format",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the RSA key modulus",
          "-check",
          "verify key consistency",
          "-pubin",
          "expect a public key in input file",
          "-pubout",
          "output a public key",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "pass phrase source"
        ],
        "s_client": [
          "usage: s_client args",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-verify arg",
          "- turn on peer certificate verification",
          "-verify_return_error - return verification errors",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-no_alt_chains - only ever use the first certificate chain found",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-prexit",
          "- print session information even on connection failure",
          "-showcerts",
          "- show all certificates in the chain",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-psk_identity arg - PSK identity",
          "-psk arg",
          "- PSK in hex (without 0x)",
          "-srpuser user",
          "- SRP authentification for 'user'",
          "-srppass arg",
          "- password for 'user'",
          "-srp_lateuser",
          "- SRP username into second ClientHello message",
          "-srp_moregroups",
          "- Tolerate other than the known g N values.",
          "-srp_strength int - minimal length in bits for N (default 1024).",
          "-ssl2",
          "- just use SSLv2",
          "-ssl3",
          "- just use SSLv3",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-fallback_scsv - send TLS_FALLBACK_SCSV",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-serverpref",
          "- Use server's cipher preferences (only SSLv2)",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-rand file:file:...",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-verify_return_error - return verification errors",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appened to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM, DER or ENGINE) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM, DER or ENGINE) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-no_alt_chains - only ever use the first certificate chain found",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- No server output",
          "-no_tmp_rsa",
          "- Do not generate a tmp RSA key",
          "-psk_hint arg - PSK identity hint to use",
          "-psk arg",
          "- PSK in hex (without 0x)",
          "-srpvfile file",
          "- The verifier file for SRP",
          "-srpuserseed string - A seed string for a default user salt.",
          "-ssl2",
          "- Just talk SSLv2",
          "-ssl3",
          "- Just talk SSLv3",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-hack",
          "- workaround for early Netscape code",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-rand file:file:...",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)",
          "-nextprotoneg arg - set the advertised protocols for the NPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)",
          "-status",
          "- respond to certificate status requests",
          "-status_verbose",
          "- enable status request verbose printout",
          "-status_timeout n - status request responder timeout",
          "-status_url URL",
          "- status request fallback URL"
        ],
        "s_time": [
          "usage: s_time <args>",
          "-connect host:port - host:port to connect to (default is localhost:4433)",
          "-nbio",
          "- Run with non-blocking IO",
          "-ssl2",
          "- Just use SSLv2",
          "-ssl3",
          "- Just use SSLv3",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-new",
          "- Just time new connections",
          "-reuse",
          "- Just time connection reuse",
          "-www page",
          "- Retrieve 'page' from the site",
          "-time arg",
          "- max number of seconds to collect data, default 30",
          "-verify arg",
          "- turn on peer certificate verification, arg == depth",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-key arg",
          "- RSA file to use, PEM format assumed, key is in cert file",
          "file if not specified by this option",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-cipher",
          "- preferred cipher to use, play with 'openssl ciphers'"
        ],
        "sess_id": [
          "usage: sess_id args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-text",
          "- print ssl session id details",
          "-cert",
          "- output certificate",
          "-noout",
          "- no CRL output",
          "-context arg",
          "- set the session ID context"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-seed",
          "encrypt with SEED",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM or ENGINE)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains only ever use the first certificate chain found",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "input file pass phrase source",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "mdc2",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc seed-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3 aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571",
          "ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224 ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "seed",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "spkac [options]",
          "where options are",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-key arg",
          "create SPKAC using private key",
          "-passin arg",
          "input file pass phrase source",
          "-challenge arg challenge string",
          "-spkac arg",
          "alternative SPKAC name",
          "-noout",
          "don't print SPKAC",
          "-pubkey",
          "output public key",
          "-verify",
          "verify SPKAC signature",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "srp": [
          "Exactly one of the options -add, -delete, -modify -list must be specified.",
          "usage: srp [args] [user]",
          "-verbose",
          "Talk alot while doing things",
          "-config file",
          "A config file",
          "-name arg",
          "The particular srp definition to use",
          "-srpvfile arg",
          "The srp verifier file name",
          "-add",
          "add an user and srp verifier",
          "-modify",
          "modify the srp verifier of an existing user",
          "-delete",
          "delete user from verifier file",
          "-list",
          "list user",
          "-gn arg",
          "g and N values to be used for new verifier",
          "-userinfo arg",
          "additional info to be set for user",
          "-passin arg",
          "input file pass phrase source",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "ts": [
          "usage:",
          "ts -query [-rand file:file:...] [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md2|-md4|-md5|-sha|-sha1|-mdc2|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text] [-engine id]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "27732016:error:02001002:system library:fopen:No such file or directory:bss_file.c:398:fopen('help','r')",
          "27732016:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:400:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-no_alt_chains] [-attime timestamp] [-engine e] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage:version -[avbofpd]"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md2/-md5/-sha1/-mdc2 - digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-certopt arg",
          "- various certificate text options"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "srp",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "md4",
        "md5",
        "mdc2",
        "rmd160",
        "sha",
        "sha1"
      ]
    },
    "1.0.2u": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "seed",
        "seed-cbc",
        "seed-cfb",
        "seed-ecb",
        "seed-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse [options] <infile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file (output format is always DER",
          "-noout arg",
          "don't produce any output",
          "-offset arg",
          "offset into file",
          "-length arg",
          "length of section in file",
          "-i",
          "indent entries",
          "-dump",
          "dump unknown data in hex form",
          "-dlimit arg",
          "dump the first arg bytes of unknown data in hex form",
          "-oid file",
          "file of extra oid definitions",
          "-strparse offset",
          "a series of these can be used to 'dig' into multiple",
          "ASN1 blob wrappings",
          "-genstr str",
          "string to generate ASN1 structure from",
          "-genconf file file to generate ASN1 structure from"
        ],
        "ca": [
          "usage: ca args",
          "-verbose",
          "- Talk alot while doing things",
          "-config file",
          "- A config file",
          "-name arg",
          "- The particular CA definition to use",
          "-gencrl",
          "- Generate a new CRL",
          "-crldays days",
          "- Days is when the next CRL is due",
          "-crlhours hours - Hours is when the next CRL is due",
          "-startdate YYMMDDHHMMSSZ",
          "- certificate validity notBefore",
          "-enddate YYMMDDHHMMSSZ",
          "- certificate validity notAfter (overrides -days)",
          "-days arg",
          "- number of days to certify the certificate for",
          "-md arg",
          "- md to use, one of md2, md5, sha or sha1",
          "-policy arg",
          "- The CA 'policy' to support",
          "-keyfile arg",
          "- private key file",
          "-keyform arg",
          "- private key file format (PEM or ENGINE)",
          "-key arg",
          "- key to decode the private key if it is encrypted",
          "-cert file",
          "- The CA certificate",
          "-selfsign",
          "- sign a certificate with the key associated with it",
          "-in file",
          "- The input PEM encoded certificate request(s)",
          "-out file",
          "- Where to put the output file(s)",
          "-outdir dir",
          "- Where to put output certificates",
          "-infiles ....",
          "- The last argument, requests to process",
          "-spkac file",
          "- File contains DN and signed public key and challenge",
          "-ss_cert file",
          "- File contains a self signed cert to sign",
          "-preserveDN",
          "- Don't re-order the DN",
          "-noemailDN",
          "- Don't add the EMAIL field into certificate' subject",
          "-batch",
          "- Don't ask questions",
          "-msie_hack",
          "- msie modifications to handle all those universal strings",
          "-revoke file",
          "- Revoke a certificate (given in file)",
          "-subj arg",
          "- Use arg instead of request's subject",
          "-utf8",
          "- input characters are UTF8 (default ASCII)",
          "-multivalue-rdn - enable support for multivalued RDNs",
          "-extensions ..",
          "- Extension section (override value in config file)",
          "-extfile file",
          "- Configuration file with X509v3 extentions to add",
          "-crlexts ..",
          "- CRL extension section (override value in config file)",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-status serial",
          "- Shows certificate status given the serial number",
          "-updatedb",
          "- Updates db for expired certificates"
        ],
        "ciphers": [
          "Error in cipher list",
          "32704560:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl_lib.c:1383:",
          "usage: ciphers args",
          "-v",
          "- verbose mode, a textual listing of the SSL/TLS ciphers in OpenSSL",
          "-V",
          "- even more verbose",
          "-ssl2",
          "- SSL2 mode",
          "-ssl3",
          "- SSL3 mode",
          "-tls1",
          "- TLS1 mode"
        ],
        "cms": [
          "Usage cms [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-cmsout",
          "output CMS structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-seed",
          "encrypt with SEED",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-certsout file certificate output file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-keyid",
          "use subject key identifier",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM or ENGINE)",
          "-keyopt nm:v",
          "set public key parameters",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains only ever use the first certificate chain found",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "input file pass phrase source",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "crl": [
          "usage: crl args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-text",
          "- print out a text format version",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-hash",
          "- print hash value",
          "-hash_old",
          "- print old-style (MD5) hash value",
          "-fingerprint",
          "- print the crl fingerprint",
          "-issuer",
          "- print issuer DN",
          "-lastupdate",
          "- lastUpdate field",
          "-nextupdate",
          "- nextUpdate field",
          "-crlnumber",
          "- print CRL number",
          "-noout",
          "- no CRL output",
          "-CAfile",
          "name",
          "- verify CRL using certificates in file \"name\"",
          "-CApath",
          "dir",
          "- verify CRL using certificates in \"dir\"",
          "-nameopt arg",
          "- various certificate name options"
        ],
        "crl2pkcs7": [
          "crl2pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-certfile arg",
          "certificates file of chain to a trusted CA",
          "(can be used more than once)",
          "-nocrl",
          "no crl to load, just certs from '-certfile'"
        ],
        "dgst": [
          "help: No such file or directory",
          "options are",
          "-c",
          "to output the digest with separating colons",
          "-r",
          "to output the digest in coreutils format",
          "-d",
          "to output debug info",
          "-hex",
          "output as hex dump",
          "-binary",
          "output in binary form",
          "-hmac arg",
          "set the HMAC key to arg",
          "-non-fips-allow allow use of non FIPS digest",
          "-sign",
          "file",
          "sign digest using private key in file",
          "-verify file",
          "verify a signature using public key in file",
          "-prverify file",
          "verify a signature using private key in file",
          "-keyform arg",
          "key file format (PEM or ENGINE)",
          "-out filename",
          "output to filename rather than stdout",
          "-signature file signature to verify",
          "-sigopt nm:v",
          "signature parameter",
          "-hmac key",
          "create hashed MAC with key",
          "-mac algorithm",
          "create MAC (not neccessarily HMAC)",
          "-macopt nm:v",
          "MAC algorithm parameters or key",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-gost-mac",
          "to use the gost-mac message digest algorithm",
          "-md_gost94",
          "to use the md_gost94 message digest algorithm",
          "-md4",
          "to use the md4 message digest algorithm",
          "-md5",
          "to use the md5 message digest algorithm",
          "-mdc2",
          "to use the mdc2 message digest algorithm",
          "-ripemd160",
          "to use the ripemd160 message digest algorithm",
          "-sha",
          "to use the sha message digest algorithm",
          "-sha1",
          "to use the sha1 message digest algorithm",
          "-sha224",
          "to use the sha224 message digest algorithm",
          "-sha256",
          "to use the sha256 message digest algorithm",
          "-sha384",
          "to use the sha384 message digest algorithm",
          "-sha512",
          "to use the sha512 message digest algorithm",
          "-whirlpool",
          "to use the whirlpool message digest algorithm"
        ],
        "dh": [
          "dh [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "dhparam": [
          "dhparam [options] [numbits]",
          "where options are",
          "-inform arg",
          "input format - one of DER PEM",
          "-outform arg",
          "output format - one of DER PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-dsaparam",
          "read or generate DSA parameters, convert to DH",
          "-check",
          "check the DH parameters",
          "-text",
          "print a text form of the DH parameters",
          "-C",
          "Output C code",
          "-2",
          "generate parameters using",
          "2 as the generator value",
          "-5",
          "5 as the generator value",
          "numbits",
          "number of bits in to generate (default 2048)",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "-noout",
          "no output"
        ],
        "dsa": [
          "dsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the DSA public value"
        ],
        "dsaparam": [
          "dsaparam [options] [bits] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "print as text",
          "-C",
          "Output C code",
          "-noout",
          "no output",
          "-genkey",
          "generate a DSA key",
          "-rand",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "number",
          "number of bits to use for generating private key"
        ],
        "ec": [
          "ec [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-des",
          "encrypt PEM output, instead of 'des' every other",
          "cipher supported by OpenSSL can be used",
          "-text",
          "print the key",
          "-noout",
          "don't print key out",
          "-param_out",
          "print the elliptic curve parameters",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit"
        ],
        "ecparam": [
          "ecparam [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - default PEM (DER or PEM)",
          "-outform arg",
          "output format - default PEM",
          "-in",
          "arg",
          "input file",
          "- default stdin",
          "-out arg",
          "output file - default stdout",
          "-noout",
          "do not print the ec parameter",
          "-text",
          "print the ec parameters in text form",
          "-check",
          "validate the ec parameters",
          "-C",
          "print a 'C' function creating the parameters",
          "-name arg",
          "use the ec parameters with 'short name' name",
          "-list_curves",
          "prints a list of all currently available curve 'short names'",
          "-conv_form arg",
          "specifies the point conversion form",
          "possible values: compressed",
          "uncompressed (default)",
          "hybrid",
          "-param_enc arg",
          "specifies the way the ec parameters are encoded",
          "in the asn1 der encoding",
          "possible values: named_curve (default)",
          "explicit",
          "-no_seed",
          "if 'explicit' parameters are chosen do not use the seed",
          "-genkey",
          "generate ec key",
          "-rand file",
          "files to use for random number input",
          "-engine e",
          "use engine e, possibly a hardware device"
        ],
        "enc": [
          "options are",
          "-in <file>",
          "input file",
          "-out <file>",
          "output file",
          "-pass <arg>",
          "pass phrase source",
          "-e",
          "encrypt",
          "-d",
          "decrypt",
          "-a/-base64",
          "base64 encode/decode, depending on encryption flag",
          "-k",
          "passphrase is the next argument",
          "-kfile",
          "passphrase is the first line of the file argument",
          "-md",
          "the next argument is the md to use to create a key",
          "from a passphrase.",
          "One of md2, md5, sha or sha1",
          "-S",
          "salt in hex is the next argument",
          "-K/-iv",
          "key/iv in hex is the next argument",
          "-[pP]",
          "print the iv/key (then exit if -P)",
          "-bufsize <n>",
          "buffer size",
          "-nopad",
          "disable standard block padding",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "Cipher Types",
          "-aes-128-cbc",
          "-aes-128-ccm",
          "-aes-128-cfb",
          "-aes-128-cfb1",
          "-aes-128-cfb8",
          "-aes-128-ctr",
          "-aes-128-ecb",
          "-aes-128-ofb",
          "-aes-192-cbc",
          "-aes-192-ccm",
          "-aes-192-cfb",
          "-aes-192-cfb1",
          "",
          "-aes-192-cfb8",
          "-aes-192-ctr",
          "-aes-192-ecb",
          "-aes-192-ofb",
          "-aes-256-cbc",
          "-aes-256-ccm",
          "-aes-256-cfb",
          "-aes-256-cfb1",
          "-aes-256-cfb8",
          "-aes-256-ctr",
          "-aes-256-ecb",
          "-aes-256-ofb",
          "-aes128",
          "-aes192",
          "-aes256",
          "-bf",
          "-bf-cbc",
          "-bf-cfb",
          "-bf-ecb",
          "-bf-ofb",
          "-blowfish",
          "-camellia-128-cbc",
          "-camellia-128-cfb",
          "-camellia-128-cfb1",
          "-camellia-128-cfb8",
          "-camellia-128-ecb",
          "-camellia-128-ofb",
          "-camellia-192-cbc",
          "-camellia-192-cfb",
          "-camellia-192-cfb1",
          "-camellia-192-cfb8",
          "-camellia-192-ecb",
          "-camellia-192-ofb",
          "-camellia-256-cbc",
          "-camellia-256-cfb",
          "-camellia-256-cfb1",
          "-camellia-256-cfb8",
          "-camellia-256-ecb",
          "-camellia-256-ofb",
          "-camellia128",
          "-camellia192",
          "-camellia256",
          "-cast",
          "-cast-cbc",
          "-cast5-cbc",
          "-cast5-cfb",
          "-cast5-ecb",
          "-cast5-ofb",
          "-des",
          "-des-cbc",
          "-des-cfb",
          "-des-cfb1",
          "-des-cfb8",
          "-des-ecb",
          "-des-ede",
          "-des-ede-cbc",
          "-des-ede-cfb",
          "-des-ede-ofb",
          "-des-ede3",
          "-des-ede3-cbc",
          "-des-ede3-cfb",
          "-des-ede3-cfb1",
          "-des-ede3-cfb8",
          "-des-ede3-ofb",
          "-des-ofb",
          "-des3",
          "-desx",
          "-desx-cbc",
          "-gost89",
          "-gost89-cnt",
          "-id-aes128-CCM",
          "-id-aes128-wrap",
          "-id-aes192-CCM",
          "-id-aes192-wrap",
          "-id-aes256-CCM",
          "-id-aes256-wrap",
          "-id-smime-alg-CMS3DESwrap",
          "-idea",
          "-idea-cbc",
          "-idea-cfb",
          "-idea-ecb",
          "-idea-ofb",
          "-rc2",
          "-rc2-40-cbc",
          "-rc2-64-cbc",
          "-rc2-cbc",
          "-rc2-cfb",
          "-rc2-ecb",
          "-rc2-ofb",
          "-rc4",
          "-rc4-40",
          "-seed",
          "-seed-cbc",
          "-seed-cfb",
          "-seed-ecb",
          "-seed-ofb"
        ],
        "engine": [
          "35272752:error:25066067:DSO support routines:DLFCN_LOAD:could not load the shared library:dso_dlfcn.c:187:filename(/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.0.2u/lib/engines/libhelp.so): /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.0.2u/lib/engines/libhelp.so: cannot open shared object file: No such file or directory",
          "35272752:error:25070067:DSO support routines:DSO_load:could not load the shared library:dso_lib.c:233:",
          "35272752:error:260B6084:engine routines:DYNAMIC_LOAD:dso not found:eng_dyn.c:467:",
          "35272752:error:2606A074:engine routines:ENGINE_by_id:no such engine:eng_list.c:391:id=help",
          "usage: engine opts [engine ...]",
          "-v[v[v[v]]] - verbose mode, for each engine, list its 'control commands'",
          "-vv will additionally display each command's description",
          "-vvv will also add the input flags for each command",
          "-vvvv will also show internal input flags",
          "-c",
          "- for each engine, also list the capabilities",
          "-t[t]",
          "- for each engine, check that they are really available",
          "-tt will display error trace for unavailable engines",
          "-pre <cmd>",
          "- runs command 'cmd' against the ENGINE before any attempts",
          "to load it (if -t is used)",
          "-post <cmd> - runs command 'cmd' against the ENGINE after loading it",
          "(only used if -t is also provided)",
          "NB: -pre and -post will be applied to all ENGINEs supplied on the command",
          "line, or all supported ENGINEs if none are specified.",
          "Eg. '-pre \"SO_PATH:/lib/libdriver.so\"' calls command \"SO_PATH\" with",
          "argument \"/lib/libdriver.so\"."
        ],
        "errstr": [
          "help: bad error code",
          "usage: errstr [-stats] <errno> ...",
          "-help: bad error code"
        ],
        "gendh": [
          "usage: gendh [args] [numbits]",
          "-out file - output the key to 'file",
          "-2",
          "- use 2 as the generator value",
          "-5",
          "- use 5 as the generator value",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "gendsa": [
          "help: No such file or directory",
          "39901232:error:02001002:system library:fopen:No such file or directory:bss_file.c:413:fopen('help','r')",
          "39901232:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:415:",
          "usage: gendsa [args] dsaparam-file",
          "-out file - output the key to 'file'",
          "-des",
          "- encrypt the generated key with DES in cbc mode",
          "-des3",
          "- encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "- encrypt the generated key with IDEA in cbc mode",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-engine e - use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "- load the file (or the files in the directory) into",
          "the random number generator",
          "dsaparam-file",
          "- a DSA parameter file as generated by the dsaparam command"
        ],
        "genpkey": [
          "Usage: genpkey [options]",
          "where options may be",
          "-out file",
          "output file",
          "-outform X",
          "output format (DER or PEM)",
          "-pass arg",
          "output file pass phrase source",
          "-<cipher>",
          "use cipher <cipher> to encrypt the key",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-paramfile file",
          "parameters file",
          "-algorithm alg",
          "the public key algorithm",
          "-pkeyopt opt:value set the public key algorithm option <opt>",
          "to value <value>",
          "-genparam",
          "generate parameters, not key",
          "-text",
          "print the in text",
          "NB: options order may be important!",
          "See the manual page.",
          "Unknown cipher help"
        ],
        "genrsa": [
          "usage: genrsa [args] [numbits]",
          "-des",
          "encrypt the generated key with DES in cbc mode",
          "-des3",
          "encrypt the generated key with DES in ede cbc mode (168 bit key)",
          "-idea",
          "encrypt the generated key with IDEA in cbc mode",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-out file",
          "output the key to 'file",
          "-passout arg",
          "output file pass phrase source",
          "-f4",
          "use F4 (0x10001) for the E value",
          "-3",
          "use 3 for the E value",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "nseq": [
          "Netscape certificate sequence utility",
          "Usage nseq [options]",
          "where options are",
          "-in file",
          "input file",
          "-out file output file",
          "-toseq",
          "output NS Sequence file"
        ],
        "ocsp": [
          "OCSP utility",
          "Usage ocsp [options]",
          "where options are",
          "-out file",
          "output filename",
          "-issuer file",
          "issuer certificate",
          "-cert file",
          "certificate to check",
          "-serial n",
          "serial number to check",
          "-signer file",
          "certificate to sign OCSP request with",
          "-signkey file",
          "private key to sign OCSP request with",
          "-sign_other file",
          "additional certificates to include in signed request",
          "-no_certs",
          "don't include any certificates in signed request",
          "-req_text",
          "print text form of request",
          "-resp_text",
          "print text form of response",
          "-text",
          "print text form of request and response",
          "-reqout file",
          "write DER encoded OCSP request to \"file\"",
          "-respout file",
          "write DER encoded OCSP reponse to \"file\"",
          "-reqin file",
          "read DER encoded OCSP request from \"file\"",
          "-respin file",
          "read DER encoded OCSP reponse from \"file\"",
          "-nonce",
          "add OCSP nonce to request",
          "-no_nonce",
          "don't add OCSP nonce to request",
          "-url URL",
          "OCSP responder URL",
          "-host host:n",
          "send OCSP request to host on port n",
          "-path",
          "path to use in OCSP request",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains",
          "only ever use the first certificate chain found",
          "-VAfile file",
          "validator certificates file",
          "-validity_period n",
          "maximum validity discrepancy in seconds",
          "-status_age n",
          "maximum status age in seconds",
          "-noverify",
          "don't verify response at all",
          "-verify_other file",
          "additional certificates to search for signer",
          "-trust_other",
          "don't verify additional certificates",
          "-no_intern",
          "don't search certificates contained in response for signer",
          "-no_signature_verify don't check signature on response",
          "-no_cert_verify",
          "don't check signing certificate",
          "-no_chain",
          "don't chain verify response",
          "-no_cert_checks",
          "don't do additional checks on signing certificate",
          "-port num",
          "port to run responder on",
          "-index file",
          "certificate status index file",
          "-CA file",
          "CA certificate",
          "-rsigner file",
          "responder certificate to sign responses with",
          "-rkey file",
          "responder key to sign responses with",
          "-rother file",
          "other certificates to include in response",
          "-resp_no_certs",
          "don't include any certificates in response",
          "-nmin n",
          "number of minutes before next update",
          "-ndays n",
          "number of days before next update",
          "-resp_key_id",
          "identify reponse by signing certificate key ID",
          "-nrequest n",
          "number of requests to accept (default unlimited)",
          "-<dgst alg>",
          "use specified digest in the request",
          "-timeout n",
          "timeout connection to OCSP responder after n seconds"
        ],
        "passwd": [
          "0zf99NtmuLcLA",
          "Usage: passwd [options] [passwords]",
          "where options are",
          "-crypt",
          "standard Unix password algorithm (default)",
          "-1",
          "MD5-based password algorithm",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-salt string",
          "use provided salt",
          "-in file",
          "read passwords from file",
          "-stdin",
          "read passwords from stdin",
          "-noverify",
          "never verify when reading password from terminal",
          "-quiet",
          "no warnings",
          "-table",
          "format output as table",
          "-reverse",
          "switch table columns"
        ],
        "pkcs12": [
          "Usage: pkcs12 [options]",
          "where options are",
          "-export",
          "output PKCS12 file",
          "-chain",
          "add certificate chain",
          "-inkey file",
          "private key if not infile",
          "-certfile f",
          "add all certs in f",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-name \"name\"",
          "use name as friendly name",
          "-caname \"nm\"",
          "use nm as CA friendly name (can be used more than once).",
          "-in",
          "infile",
          "input filename",
          "-out outfile",
          "output filename",
          "-noout",
          "don't output anything, just verify.",
          "-nomacver",
          "don't verify MAC.",
          "-nocerts",
          "don't output certificates.",
          "-clcerts",
          "only output client certificates.",
          "-cacerts",
          "only output CA certificates.",
          "-nokeys",
          "don't output private keys.",
          "-info",
          "give info about PKCS#12 structure.",
          "-des",
          "encrypt private keys with DES",
          "-des3",
          "encrypt private keys with triple DES (default)",
          "-idea",
          "encrypt private keys with idea",
          "-seed",
          "encrypt private keys with seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nodes",
          "don't encrypt private keys",
          "-noiter",
          "don't use encryption iteration",
          "-nomaciter",
          "don't use MAC iteration",
          "-maciter",
          "use MAC iteration",
          "-nomac",
          "don't generate MAC",
          "-twopass",
          "separate MAC, encryption passwords",
          "-descert",
          "encrypt PKCS#12 certificates with triple DES (default RC2-40)",
          "-certpbe alg",
          "specify certificate PBE algorithm (default RC2-40)",
          "-keypbe alg",
          "specify private key PBE algorithm (default 3DES)",
          "-macalg alg",
          "digest algorithm used in MAC (default SHA1)",
          "-keyex",
          "set MS key exchange type",
          "-keysig",
          "set MS key signature type",
          "-password p",
          "set import/export password source",
          "-passin p",
          "input file pass phrase source",
          "-passout p",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-CSP name",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key"
        ],
        "pkcs7": [
          "pkcs7 [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-print_certs",
          "print any certs or crl in the input",
          "-text",
          "print full details of certificates",
          "-noout",
          "don't output encoded data",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkcs8": [
          "Usage pkcs8 [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-topk8",
          "output PKCS8 file",
          "-nooct",
          "use (nonstandard) no octet format",
          "-embed",
          "use (nonstandard) embedded DSA parameters format",
          "-nsdb",
          "use (nonstandard) DSA Netscape DB format",
          "-noiter",
          "use 1 as iteration count",
          "-nocrypt",
          "use or expect unencrypted private key",
          "-v2 alg",
          "use PKCS#5 v2.0 and cipher \"alg\"",
          "-v1 obj",
          "use PKCS#5 v1.5 and cipher \"alg\"",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkey": [
          "Unknown cipher help",
          "Usage pkey [options]",
          "where options are",
          "-in file",
          "input file",
          "-inform X",
          "input format (DER or PEM)",
          "-passin arg",
          "input file pass phrase source",
          "-outform X",
          "output format (DER or PEM)",
          "-out file",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "pkeyparam": [],
        "pkeyutl": [
          "Usage: pkeyutl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-sigfile file signature file (verify operation only)",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is a public key",
          "-certin",
          "input is a certificate carrying a public key",
          "-pkeyopt X:Y",
          "public key options",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-verifyrecover",
          "verify with public key, recover original data",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-derive",
          "derive shared secret",
          "-hexdump",
          "hex dump output",
          "-engine e",
          "use engine e, maybe a hardware device, for loading keys.",
          "-engine_impl",
          "also use engine given by -engine for crypto operations",
          "-passin arg",
          "pass phrase source"
        ],
        "prime": [
          "Failed to process value (help)",
          "Unknown option '-help'",
          "options are",
          "-hex",
          "hex",
          "-checks <n>",
          "number of checks",
          "-generate",
          "generate prime",
          "-bits <n>",
          "number of bits",
          "-safe",
          "safe prime"
        ],
        "rand": [
          "Usage: rand [options] num",
          "where options are",
          "-out file",
          "- write to file",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-rand file:file:... - seed PRNG from files",
          "-base64",
          "- base64 encode output",
          "-hex",
          "- hex encode output"
        ],
        "req": [
          "req [options] <infile >outfile",
          "where options",
          "are",
          "-inform arg",
          "input format - DER or PEM",
          "-outform arg",
          "output format - DER or PEM",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-text",
          "text form of request",
          "-pubkey",
          "output public key",
          "-noout",
          "do not output REQ",
          "-verify",
          "verify signature on REQ",
          "-modulus",
          "RSA modulus",
          "-nodes",
          "don't encrypt the output key",
          "-engine e",
          "use engine e, possibly a hardware device",
          "-subject",
          "output the request's subject",
          "-passin",
          "private key password source",
          "-key file",
          "use the private key contained in file",
          "-keyform arg",
          "key file format",
          "-keyout arg",
          "file to send the key to",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "-newkey rsa:bits generate a new RSA key of 'bits' in size",
          "-newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'",
          "-newkey ec:file generate a new EC key, parameters taken from CA in 'file'",
          "-[digest]",
          "Digest to sign with (md5, sha1, md2, mdc2, md4)",
          "-config file",
          "request template file.",
          "-subj arg",
          "set or modify request subject",
          "-multivalue-rdn enable support for multivalued RDNs",
          "-new",
          "new request.",
          "-batch",
          "do not ask anything during request generation",
          "-x509",
          "output a x509 structure instead of a cert. req.",
          "-days",
          "number of days a certificate generated by -x509 is valid for.",
          "-set_serial",
          "serial number to use for a certificate generated by -x509.",
          "-newhdr",
          "output \"NEW\" in the header lines",
          "-asn1-kludge",
          "Output the 'request' in a format that is wrong but some CA's",
          "have been reported as requiring",
          "-extensions .. specify certificate extension section (override value in config file)",
          "-reqexts ..",
          "specify request extension section (override value in config file)",
          "-utf8",
          "input characters are UTF8 (default ASCII)",
          "-nameopt arg",
          "- various certificate name options",
          "-reqopt arg",
          "- various request text options"
        ],
        "rsa": [
          "rsa [options] <infile >outfile",
          "where options are",
          "-inform arg",
          "input format - one of DER NET PEM",
          "-outform arg",
          "output format - one of DER NET PEM",
          "-in arg",
          "input file",
          "-sgckey",
          "Use IIS SGC key format",
          "-passin arg",
          "input file pass phrase source",
          "-out arg",
          "output file",
          "-passout arg",
          "output file pass phrase source",
          "-des",
          "encrypt PEM output with cbc des",
          "-des3",
          "encrypt PEM output with ede cbc des using 168 bit key",
          "-idea",
          "encrypt PEM output with cbc idea",
          "-seed",
          "encrypt PEM output with cbc seed",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-text",
          "print the key in text",
          "-noout",
          "don't print key out",
          "-modulus",
          "print the RSA key modulus",
          "-check",
          "verify key consistency",
          "-pubin",
          "expect a public key in input file",
          "-pubout",
          "output a public key",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "rsautl": [
          "Usage: rsautl [options]",
          "-in file",
          "input file",
          "-out file",
          "output file",
          "-inkey file",
          "input key",
          "-keyform arg",
          "private key format - default PEM",
          "-pubin",
          "input is an RSA public",
          "-certin",
          "input is a certificate carrying an RSA public key",
          "-ssl",
          "use SSL v2 padding",
          "-raw",
          "use no padding",
          "-pkcs",
          "use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "use PKCS#1 OAEP",
          "-sign",
          "sign with private key",
          "-verify",
          "verify with public key",
          "-encrypt",
          "encrypt with public key",
          "-decrypt",
          "decrypt with private key",
          "-hexdump",
          "hex dump output",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "pass phrase source"
        ],
        "s_client": [
          "usage: s_client args",
          "-host host",
          "- use -connect instead",
          "-port port",
          "-connect host:port - who to connect to (default is localhost:4433)",
          "-verify_hostname host - check peer certificate matches \"host\"",
          "-verify_email email - check peer certificate matches \"email\"",
          "-verify_ip ipaddr - check peer certificate matches \"ipaddr\"",
          "-verify arg",
          "- turn on peer certificate verification",
          "-verify_return_error - return verification errors",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private key file to use, in cert file if",
          "not specified but cert file is.",
          "-keyform arg",
          "- key format (PEM or DER) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-no_alt_chains - only ever use the first certificate chain found",
          "-reconnect",
          "- Drop and re-make the connection with the same Session-ID",
          "-pause",
          "- sleep(1) after each read(2) and write(2) system call",
          "-prexit",
          "- print session information even on connection failure",
          "-showcerts",
          "- Show all certificates sent by the server",
          "-debug",
          "- extra output",
          "-msg",
          "- Show protocol messages",
          "-nbio_test",
          "- more ssl protocol testing",
          "-state",
          "- print the 'ssl' states",
          "-nbio",
          "- Run with non-blocking IO",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-quiet",
          "- no s_client output",
          "-ign_eof",
          "- ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "- don't ignore input eof",
          "-psk_identity arg - PSK identity",
          "-psk arg",
          "- PSK in hex (without 0x)",
          "-srpuser user",
          "- SRP authentification for 'user'",
          "-srppass arg",
          "- password for 'user'",
          "-srp_lateuser",
          "- SRP username into second ClientHello message",
          "-srp_moregroups",
          "- Tolerate other than the known g N values.",
          "-srp_strength int - minimal length in bits for N (default 1024).",
          "-ssl2",
          "- just use SSLv2",
          "-ssl3",
          "- just use SSLv3",
          "-tls1_2",
          "- just use TLSv1.2",
          "-tls1_1",
          "- just use TLSv1.1",
          "-tls1",
          "- just use TLSv1",
          "-dtls1",
          "- just use DTLSv1",
          "-fallback_scsv - send TLS_FALLBACK_SCSV",
          "-mtu",
          "- set the link layer MTU",
          "-no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol",
          "-bugs",
          "- Switch on all SSL implementation bug workarounds",
          "-cipher",
          "- preferred cipher to use, use the 'openssl ciphers'",
          "command to see what is available",
          "-starttls prot - use the STARTTLS command before starting TLS",
          "for those protocols that support it, where",
          "'prot' defines which one to assume.",
          "Currently,",
          "only \"smtp\", \"pop3\", \"imap\", \"ftp\" and \"xmpp\"",
          "are supported.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-rand file:file:...",
          "-sess_out arg - file to write SSL session to",
          "-sess_in arg",
          "- file to read SSL session from",
          "-servername host",
          "- Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-status",
          "- request certificate status from server",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-serverinfo types - send empty ClientHello extensions (comma-separated numbers)",
          "-curves arg",
          "- Elliptic curves to advertise (colon-separated list)",
          "-sigalgs arg",
          "- Signature algorithms to support (colon-separated list)",
          "-client_sigalgs arg - Signature algorithms to support for client",
          "certificate authentication (colon-separated list)",
          "-nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)",
          "-alpn arg",
          "- enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)"
        ],
        "s_server": [
          "usage: s_server [args ...]",
          "-accept arg",
          "- port to accept on (default is 4433)",
          "-verify_hostname host - check peer certificate matches \"host\"",
          "-verify_email email - check peer certificate matches \"email\"",
          "-verify_ip ipaddr - check peer certificate matches \"ipaddr\"",
          "-context arg",
          "- set session ID context",
          "-verify arg",
          "- turn on peer certificate verification",
          "-Verify arg",
          "- turn on peer certificate verification, must have a cert.",
          "-verify_return_error - return verification errors",
          "-cert arg",
          "- certificate file to use",
          "(default is server.pem)",
          "-serverinfo arg - PEM serverinfo file for certificate",
          "-auth",
          "- send and receive RFC 5878 TLS auth extensions and supplemental data",
          "-auth_require_reneg - Do not send TLS auth extensions until renegotiation",
          "-no_resumption_on_reneg - set SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION flag",
          "-crl_check",
          "- check the peer certificate has not been revoked by its CA.",
          "The CRL(s) are appended to the certificate file",
          "-crl_check_all - check the peer certificate has not been revoked by its CA",
          "or any other CRL in the CA chain. CRL(s) are appened to the",
          "the certificate file.",
          "-certform arg - certificate format (PEM or DER) PEM default",
          "-key arg",
          "- Private Key file to use, in cert file if",
          "not specified (default is server.pem)",
          "-keyform arg",
          "- key format (PEM, DER or ENGINE) PEM default",
          "-pass arg",
          "- private key file pass phrase source",
          "-dcert arg",
          "- second certificate file to use (usually for DSA)",
          "-dcertform x",
          "- second certificate format (PEM or DER) PEM default",
          "-dkey arg",
          "- second private key file to use (usually for DSA)",
          "-dkeyform arg - second key format (PEM, DER or ENGINE) PEM default",
          "-dpass arg",
          "- second private key file pass phrase source",
          "-dhparam arg",
          "- DH parameter file to use, in cert file if not specified",
          "or a default set of parameters is used",
          "-named_curve arg",
          "- Elliptic curve name to use for ephemeral ECDH keys.",
          "Use \"openssl ecparam -list_curves\" for all names",
          "(default is nistp256).",
          "-nbio",
          "- Run with non-blocking IO",
          "-nbio_test",
          "- test with the non-blocking test bio",
          "-crlf",
          "- convert LF from terminal into CRLF",
          "-debug",
          "- Print more output",
          "-msg",
          "- Show protocol messages",
          "-state",
          "- Print the SSL states",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-no_alt_chains - only ever use the first certificate chain found",
          "-nocert",
          "- Don't use any certificates (Anon-DH)",
          "-cipher arg",
          "- play with 'openssl ciphers' to see what goes here",
          "-serverpref",
          "- Use server's cipher preferences",
          "-quiet",
          "- No server output",
          "-no_tmp_rsa",
          "- Do not generate a tmp RSA key",
          "-psk_hint arg - PSK identity hint to use",
          "-psk arg",
          "- PSK in hex (without 0x)",
          "-srpvfile file",
          "- The verifier file for SRP",
          "-srpuserseed string - A seed string for a default user salt.",
          "-ssl2",
          "- Just talk SSLv2",
          "-ssl3",
          "- Just talk SSLv3",
          "-tls1_2",
          "- Just talk TLSv1.2",
          "-tls1_1",
          "- Just talk TLSv1.1",
          "-tls1",
          "- Just talk TLSv1",
          "-dtls1",
          "- Just talk DTLSv1",
          "-dtls1_2",
          "- Just talk DTLSv1.2",
          "-timeout",
          "- Enable timeouts",
          "-mtu",
          "- Set link layer MTU",
          "-chain",
          "- Read a certificate chain",
          "-no_ssl2",
          "- Just disable SSLv2",
          "-no_ssl3",
          "- Just disable SSLv3",
          "-no_tls1",
          "- Just disable TLSv1",
          "-no_tls1_1",
          "- Just disable TLSv1.1",
          "-no_tls1_2",
          "- Just disable TLSv1.2",
          "-no_dhe",
          "- Disable ephemeral DH",
          "-no_ecdhe",
          "- Disable ephemeral ECDH",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-hack",
          "- workaround for early Netscape code",
          "-www",
          "- Respond to a 'GET /' with a status page",
          "-WWW",
          "- Respond to a 'GET /<path> HTTP/1.0' with file ./<path>",
          "-HTTP",
          "with the assumption it contains a complete HTTP response.",
          "-engine id",
          "- Initialise and use the specified engine",
          "-id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'",
          "-rand file:file:...",
          "-servername host - servername for HostName TLS extension",
          "-servername_fatal - on mismatch send fatal alert (default warning alert)",
          "-cert2 arg",
          "- certificate file to use for servername",
          "(default is server2.pem)",
          "-key2 arg",
          "- Private Key file to use for servername, in cert file if",
          "not specified (default is server2.pem)",
          "-tlsextdebug",
          "- hex dump of all TLS extensions received",
          "-no_ticket",
          "- disable use of RFC4507bis session tickets",
          "-legacy_renegotiation - enable use of legacy renegotiation (dangerous)",
          "-sigalgs arg",
          "- Signature algorithms to support (colon-separated list)",
          "-client_sigalgs arg",
          "- Signature algorithms to support for client",
          "certificate authentication (colon-separated list)",
          "-nextprotoneg arg - set the advertised protocols for the NPN extension (comma-separated list)",
          "-use_srtp profiles - Offer SRTP key management with a colon-separated profile list",
          "-alpn arg",
          "- set the advertised protocols for the ALPN extension (comma-separated list)",
          "-keymatexport label",
          "- Export keying material using label",
          "-keymatexportlen len",
          "- Export len bytes of keying material (default 20)",
          "-status",
          "- respond to certificate status requests",
          "-status_verbose",
          "- enable status request verbose printout",
          "-status_timeout n - status request responder timeout",
          "-status_url URL",
          "- status request fallback URL"
        ],
        "s_time": [
          "usage: s_time <args>",
          "-connect host:port - host:port to connect to (default is localhost:4433)",
          "-nbio",
          "- Run with non-blocking IO",
          "-ssl2",
          "- Just use SSLv2",
          "-ssl3",
          "- Just use SSLv3",
          "-bugs",
          "- Turn on SSL bug compatibility",
          "-new",
          "- Just time new connections",
          "-reuse",
          "- Just time connection reuse",
          "-www page",
          "- Retrieve 'page' from the site",
          "-time arg",
          "- max number of seconds to collect data, default 30",
          "-verify arg",
          "- turn on peer certificate verification, arg == depth",
          "-cert arg",
          "- certificate file to use, PEM format assumed",
          "-key arg",
          "- RSA file to use, PEM format assumed, key is in cert file",
          "file if not specified by this option",
          "-CApath arg",
          "- PEM format directory of CA's",
          "-CAfile arg",
          "- PEM format file of CA's",
          "-cipher",
          "- preferred cipher to use, play with 'openssl ciphers'"
        ],
        "sess_id": [
          "usage: sess_id args",
          "-inform arg",
          "- input format - default PEM (DER or PEM)",
          "-outform arg",
          "- output format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-text",
          "- print ssl session id details",
          "-cert",
          "- output certificate",
          "-noout",
          "- no CRL output",
          "-context arg",
          "- set the session ID context"
        ],
        "smime": [
          "Usage smime [options] cert.pem ...",
          "where options are",
          "-encrypt",
          "encrypt message",
          "-decrypt",
          "decrypt encrypted message",
          "-sign",
          "sign message",
          "-verify",
          "verify signed message",
          "-pk7out",
          "output PKCS#7 structure",
          "-des3",
          "encrypt with triple DES",
          "-des",
          "encrypt with DES",
          "-seed",
          "encrypt with SEED",
          "-rc2-40",
          "encrypt with RC2-40 (default)",
          "-rc2-64",
          "encrypt with RC2-64",
          "-rc2-128",
          "encrypt with RC2-128",
          "-aes128, -aes192, -aes256",
          "encrypt PEM output with cbc aes",
          "-camellia128, -camellia192, -camellia256",
          "encrypt PEM output with cbc camellia",
          "-nointern",
          "don't search certificates in message for signer",
          "-nosigs",
          "don't verify message signature",
          "-noverify",
          "don't verify signers certificate",
          "-nocerts",
          "don't include signers certificate when signing",
          "-nodetach",
          "use opaque signing",
          "-noattr",
          "don't include any signed attributes",
          "-binary",
          "don't translate message to text",
          "-certfile file other certificates file",
          "-signer file",
          "signer certificate file",
          "-recip",
          "file",
          "recipient certificate file for decryption",
          "-in file",
          "input file",
          "-inform arg",
          "input format SMIME (default), PEM or DER",
          "-inkey file",
          "input private key (if not signer or recipient)",
          "-keyform arg",
          "input private key format (PEM or ENGINE)",
          "-out file",
          "output file",
          "-outform arg",
          "output format SMIME (default), PEM or DER",
          "-content file",
          "supply or override content for detached signature",
          "-to addr",
          "to address",
          "-from ad",
          "from address",
          "-subject s",
          "subject",
          "-text",
          "include or delete text MIME headers",
          "-CApath dir",
          "trusted certificates directory",
          "-CAfile file",
          "trusted certificates file",
          "-no_alt_chains only ever use the first certificate chain found",
          "-crl_check",
          "check revocation status of signer's certificate using CRLs",
          "-crl_check_all check revocation status of signer's certificate chain using CRLs",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-passin arg",
          "input file pass phrase source",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator",
          "cert.pem",
          "recipient certificate(s) for encryption"
        ],
        "speed": [
          "Error: bad option or value",
          "Available values:",
          "mdc2",
          "md4",
          "md5",
          "hmac",
          "sha1",
          "sha256",
          "sha512",
          "whirlpoolrmd160",
          "idea-cbc seed-cbc rc2-cbc",
          "bf-cbc",
          "des-cbc",
          "des-ede3 aes-128-cbc aes-192-cbc aes-256-cbc aes-128-ige aes-192-ige aes-256-ige",
          "camellia-128-cbc camellia-192-cbc camellia-256-cbc rc4",
          "rsa512",
          "rsa1024",
          "rsa2048",
          "rsa4096",
          "dsa512",
          "dsa1024",
          "dsa2048",
          "ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521",
          "ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571",
          "ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571",
          "ecdsa",
          "ecdhp160",
          "ecdhp192",
          "ecdhp224 ecdhp256",
          "ecdhp384",
          "ecdhp521",
          "ecdhk163",
          "ecdhk233",
          "ecdhk283",
          "ecdhk409",
          "ecdhk571",
          "ecdhb163",
          "ecdhb233",
          "ecdhb283",
          "ecdhb409",
          "ecdhb571",
          "ecdh",
          "idea",
          "seed",
          "rc2",
          "des",
          "aes",
          "camellia rsa",
          "blowfish",
          "Available options:",
          "-engine e",
          "use engine e, possibly a hardware device.",
          "-evp e",
          "use EVP e.",
          "-decrypt",
          "time decryption instead of encryption (only EVP).",
          "-mr",
          "produce machine readable output.",
          "-multi n",
          "run n benchmarks in parallel."
        ],
        "spkac": [
          "spkac [options]",
          "where options are",
          "-in arg",
          "input file",
          "-out arg",
          "output file",
          "-key arg",
          "create SPKAC using private key",
          "-passin arg",
          "input file pass phrase source",
          "-challenge arg challenge string",
          "-spkac arg",
          "alternative SPKAC name",
          "-noout",
          "don't print SPKAC",
          "-pubkey",
          "output public key",
          "-verify",
          "verify SPKAC signature",
          "-engine e",
          "use engine e, possibly a hardware device."
        ],
        "srp": [
          "Exactly one of the options -add, -delete, -modify -list must be specified.",
          "usage: srp [args] [user]",
          "-verbose",
          "Talk alot while doing things",
          "-config file",
          "A config file",
          "-name arg",
          "The particular srp definition to use",
          "-srpvfile arg",
          "The srp verifier file name",
          "-add",
          "add an user and srp verifier",
          "-modify",
          "modify the srp verifier of an existing user",
          "-delete",
          "delete user from verifier file",
          "-list",
          "list user",
          "-gn arg",
          "g and N values to be used for new verifier",
          "-userinfo arg",
          "additional info to be set for user",
          "-passin arg",
          "input file pass phrase source",
          "-passout arg",
          "output file pass phrase source",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-rand file:file:...",
          "load the file (or the files in the directory) into",
          "the random number generator"
        ],
        "ts": [
          "usage:",
          "ts -query [-rand file:file:...] [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md2|-md4|-md5|-sha|-sha1|-mdc2|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]",
          "or",
          "ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text] [-engine id]",
          "ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem"
        ],
        "verify": [
          "Error opening certificate file help",
          "34494512:error:02001002:system library:fopen:No such file or directory:bss_file.c:413:fopen('help','r')",
          "34494512:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:415:",
          "unable to load certificate",
          "usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check] [-no_alt_chains] [-attime timestamp] [-engine e] cert1 cert2 ...",
          "recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing"
        ],
        "version": [
          "usage:version -[avbofpd]"
        ],
        "x509": [
          "usage: x509 args",
          "-inform arg",
          "- input format - default PEM (one of DER, NET or PEM)",
          "-outform arg",
          "- output format - default PEM (one of DER, NET or PEM)",
          "-keyform arg",
          "- private key format - default PEM",
          "-CAform arg",
          "- CA format - default PEM",
          "-CAkeyform arg",
          "- CA key format - default PEM",
          "-in arg",
          "- input file - default stdin",
          "-out arg",
          "- output file - default stdout",
          "-passin arg",
          "- private key password source",
          "-serial",
          "- print serial number value",
          "-subject_hash",
          "- print subject hash value",
          "-subject_hash_old",
          "- print old-style (MD5) subject hash value",
          "-issuer_hash",
          "- print issuer hash value",
          "-issuer_hash_old",
          "- print old-style (MD5) issuer hash value",
          "-hash",
          "- synonym for -subject_hash",
          "-subject",
          "- print subject DN",
          "-issuer",
          "- print issuer DN",
          "-email",
          "- print email address(es)",
          "-startdate",
          "- notBefore field",
          "-enddate",
          "- notAfter field",
          "-purpose",
          "- print out certificate purposes",
          "-dates",
          "- both Before and After dates",
          "-modulus",
          "- print the RSA key modulus",
          "-pubkey",
          "- output the public key",
          "-fingerprint",
          "- print the certificate fingerprint",
          "-alias",
          "- output certificate alias",
          "-noout",
          "- no certificate output",
          "-ocspid",
          "- print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "- print OCSP Responder URL(s)",
          "-trustout",
          "- output a \"trusted\" certificate",
          "-clrtrust",
          "- clear all trusted purposes",
          "-clrreject",
          "- clear all rejected purposes",
          "-addtrust arg",
          "- trust certificate for a given purpose",
          "-addreject arg",
          "- reject certificate for a given purpose",
          "-setalias arg",
          "- set certificate alias",
          "-days arg",
          "- How long till expiry of a signed certificate - def 30 days",
          "-checkend arg",
          "- check whether the cert expires in the next arg seconds",
          "exit 1 if so, 0 if not",
          "-signkey arg",
          "- self sign cert with arg",
          "-x509toreq",
          "- output a certification request object",
          "-req",
          "- input is a certificate request, sign and output.",
          "-CA arg",
          "- set the CA certificate, must be PEM format.",
          "-CAkey arg",
          "- set the CA key, must be PEM format",
          "missing, it is assumed to be in the CA file.",
          "-CAcreateserial - create serial number file if it does not exist",
          "-CAserial arg",
          "- serial file",
          "-set_serial",
          "- serial number to use",
          "-text",
          "- print the certificate in text form",
          "-C",
          "- print out C code forms",
          "-md2/-md5/-sha1/-mdc2 - digest to use",
          "-extfile",
          "- configuration file with X509V3 extensions to add",
          "-extensions",
          "- section from config file with X509V3 extensions to add",
          "-clrext",
          "- delete extensions before signing and input certificate",
          "-nameopt arg",
          "- various certificate name options",
          "-engine e",
          "- use engine e, possibly a hardware device.",
          "-certopt arg",
          "- various certificate text options",
          "-checkhost host - check certificate matches \"host\"",
          "-checkemail email - check certificate matches \"email\"",
          "-checkip ipaddr - check certificate matches \"ipaddr\""
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dh",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "gendh",
        "gendsa",
        "genpkey",
        "genrsa",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "srp",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "md4",
        "md5",
        "mdc2",
        "rmd160",
        "sha",
        "sha1"
      ]
    },
    "1.1.0l": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "seed",
        "seed-cbc",
        "seed-cfb",
        "seed-ecb",
        "seed-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse: Use -help for summary.",
          "Usage: asn1parse [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "input format - one of DER PEM",
          "-in infile",
          "input file",
          "-out outfile",
          "output file (output format is always DER)",
          "-i",
          "indents the output",
          "-noout",
          "do not produce any output",
          "-offset +int",
          "offset into file",
          "-length +int",
          "length of section in file",
          "-oid infile",
          "file of extra oid definitions",
          "-dump",
          "unknown data in hex form",
          "-dlimit +int",
          "dump the first arg bytes of unknown data in hex form",
          "-strparse +int",
          "offset; a series of these can be used to 'dig'",
          "into multiple ASN1 blob wrappings",
          "-genstr val",
          "string to generate ASN1 structure from",
          "-genconf val",
          "file to generate ASN1 structure from",
          "(-inform",
          "will be ignored)",
          "-strictpem",
          "do not attempt base64 decode outside PEM markers"
        ],
        "ca": [
          "Using configuration from /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.1.0l/ssl/openssl.cnf",
          "Can't open ./demoCA/private/cakey.pem for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('./demoCA/private/cakey.pem','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:81:",
          "unable to load CA private key",
          "Usage: ca [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Verbose output during processing",
          "-config val",
          "A config file",
          "-name val",
          "The particular CA definition to use",
          "-subj val",
          "Use arg instead of request's subject",
          "-utf8",
          "Input characters are UTF8 (default ASCII)",
          "-create_serial",
          "If reading serial fails, create a new random serial",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-startdate val",
          "Cert notBefore, YYMMDDHHMMSSZ",
          "-enddate val",
          "YYMMDDHHMMSSZ cert notAfter (overrides -days)",
          "-days +int",
          "Number of days to certify the cert for",
          "-md val",
          "md to use; one of md2, md5, sha or sha1",
          "-policy val",
          "The CA 'policy' to support",
          "-keyfile val",
          "Private key",
          "-keyform format",
          "Private key file format (PEM or ENGINE)",
          "-passin val",
          "Input file pass phrase source",
          "-key val",
          "Key to decode the private key if it is encrypted",
          "-cert infile",
          "The CA cert",
          "-selfsign",
          "Sign a cert with the key associated with it",
          "-in infile",
          "The input PEM encoded cert request(s)",
          "-out outfile",
          "Where to put the output file(s)",
          "-outdir dir",
          "Where to put output cert",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-notext",
          "Do not print the generated certificate",
          "-batch",
          "Don't ask questions",
          "-preserveDN",
          "Don't re-order the DN",
          "-noemailDN",
          "Don't add the EMAIL field to the DN",
          "-gencrl",
          "Generate a new CRL",
          "-msie_hack",
          "msie modifications to handle all those universal strings",
          "-crldays +int",
          "Days until the next CRL is due",
          "-crlhours +int",
          "Hours until the next CRL is due",
          "-crlsec +int",
          "Seconds until the next CRL is due",
          "-infiles",
          "The last argument, requests to process",
          "-ss_cert infile",
          "File contains a self signed cert to sign",
          "-spkac infile",
          "File contains DN and signed public key and challenge",
          "-revoke infile",
          "Revoke a cert (given in file)",
          "-valid val",
          "Add a Valid(not-revoked) DB entry about a cert (given in file)",
          "-extensions val",
          "Extension section (override value in config file)",
          "-extfile infile",
          "Configuration file with X509v3 extensions to add",
          "-status val",
          "Shows cert status given the serial number",
          "-updatedb",
          "Updates db for expired cert",
          "-crlexts val",
          "CRL extension section (override value in config file)",
          "-crl_reason val",
          "revocation reason",
          "-crl_hold val",
          "the hold instruction, an OID. Sets revocation reason to certificateHold",
          "-crl_compromise val",
          "sets compromise time to val and the revocation reason to keyCompromise",
          "-crl_CA_compromise val",
          "sets compromise time to val and the revocation reason to CACompromise",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "ciphers": [
          "Error in cipher list",
          "0:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl/ssl_lib.c:2193:",
          "Usage: ciphers [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-v",
          "Verbose listing of the SSL/TLS ciphers",
          "-V",
          "Even more verbose",
          "-s",
          "Only supported ciphers",
          "-tls1",
          "TLS1 mode",
          "-tls1_1",
          "TLS1.1 mode",
          "-tls1_2",
          "TLS1.2 mode",
          "-psk",
          "include ciphersuites requiring PSK",
          "-srp",
          "include ciphersuites requiring SRP"
        ],
        "cms": [
          "cms: Use -help for summary.",
          "Usage: cms [options] cert.pem...",
          "cert.pem... recipient certs for encryption",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-sign_receipt",
          "Generate a signed receipt for the message",
          "-resign",
          "Resign a signed message",
          "-verify",
          "Verify signed message",
          "-verify_retcode",
          "(No additional info)",
          "-verify_receipt infile",
          "-cmsout",
          "Output CMS structure",
          "-data_out",
          "-data_create",
          "-digest_verify",
          "-digest_create",
          "-compress",
          "-uncompress",
          "-EncryptedData_decrypt",
          "-EncryptedData_encrypt",
          "-debug_decrypt",
          "-text",
          "Include or delete text MIME headers",
          "-asciicrlf",
          "-nointern",
          "Don't search certificates in message for signer",
          "-noverify",
          "Don't verify signers certificate",
          "-nocerts",
          "Don't include signers certificate when signing",
          "-noattr",
          "Don't include any signed attributes",
          "-nodetach",
          "Use opaque signing",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "-binary",
          "Don't translate message to text",
          "-keyid",
          "Use subject key identifier",
          "-nosigs",
          "Don't verify message signature",
          "-no_content_verify",
          "-no_attr_verify",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "-noout",
          "For the -cmsout operation do not output the parsed CMS structure",
          "-receipt_request_print",
          "Print CMS Receipt Request",
          "-receipt_request_all",
          "-receipt_request_first",
          "-rctform PEM|DER",
          "Receipt file format",
          "-certfile infile",
          "Other certificates file",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath dir",
          "trusted certificates directory",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-content infile",
          "Supply or override content for detached signature",
          "-print",
          "For the -cmsout operation print out all fields of the CMS structure",
          "-secretkey val",
          "-secretkeyid val",
          "-pwri_password val",
          "-econtent_type val",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-passin val",
          "Input file pass phrase source",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "-signer val",
          "Signer certificate file",
          "-recip infile",
          "Recipient cert file for decryption",
          "-certsout outfile",
          "Certificate output file",
          "-md val",
          "Digest algorithm to use when signing or resigning",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-keyform format",
          "Input private key format (PEM or ENGINE)",
          "-keyopt val",
          "Set public key parameters as n:v pairs",
          "-receipt_request_from val",
          "-receipt_request_to val",
          "-*",
          "Any supported cipher",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-aes128-wrap",
          "Use AES128 to wrap key",
          "-aes192-wrap",
          "Use AES192 to wrap key",
          "-aes256-wrap",
          "Use AES256 to wrap key",
          "-des3-wrap",
          "Use 3DES-EDE to wrap key",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "crl": [
          "crl: Use -help for summary.",
          "Usage: crl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format; default PEM",
          "-in infile",
          "Input file - default stdin",
          "-outform PEM|DER",
          "Output format - default PEM",
          "-out outfile",
          "output file - default stdout",
          "-keyform PEM|DER",
          "Private key file format (PEM or ENGINE)",
          "-key infile",
          "CRL signing Private key to use",
          "-issuer",
          "Print issuer DN",
          "-lastupdate",
          "Set lastUpdate field",
          "-nextupdate",
          "Set nextUpdate field",
          "-noout",
          "No CRL output",
          "-fingerprint",
          "Print the crl fingerprint",
          "-crlnumber",
          "Print CRL number",
          "-badsig",
          "Corrupt last byte of loaded CRL signature (for test)",
          "-gendelta infile",
          "Other CRL to compare/diff to the Input one",
          "-CApath dir",
          "Verify CRL using certificates in dir",
          "-CAfile infile",
          "Verify CRL using certificates in file name",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-verify",
          "Verify CRL signature",
          "-text",
          "Print out a text format version",
          "-hash",
          "Print hash value",
          "-nameopt val",
          "Various certificate name options",
          "-*",
          "Any supported digest",
          "-hash_old",
          "Print old-style (MD5) hash value"
        ],
        "crl2pkcs7": [
          "crl2pkcs7: Use -help for summary.",
          "Usage: crl2pkcs7 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-nocrl",
          "No crl to load, just certs from '-certfile'",
          "-certfile infile",
          "File of chain of certs to a trusted CA; can be repeated"
        ],
        "dgst": [
          "help: No such file or directory",
          "Usage: dgst [options] [file...]",
          "file... files to digest (default is stdin)",
          "-help",
          "Display this summary",
          "-c",
          "Print the digest with separating colons",
          "-r",
          "Print the digest in coreutils format",
          "-rand val",
          "Use file(s) containing random data to seed RNG or an EGD sock",
          "-out outfile",
          "Output to filename rather than stdout",
          "-passin val",
          "Input file pass phrase source",
          "-sign val",
          "Sign digest using private key",
          "-verify val",
          "Verify a signature using public key",
          "-prverify val",
          "Verify a signature using private key",
          "-signature infile",
          "File with signature to verify",
          "-keyform format",
          "Key file format (PEM or ENGINE)",
          "-hex",
          "Print as hex dump",
          "-binary",
          "Print in binary form",
          "-d",
          "Print debug info",
          "-debug",
          "-fips-fingerprint",
          "Compute HMAC with the key used in OpenSSL-FIPS fingerprint",
          "-hmac val",
          "Create hashed MAC with key",
          "-mac val",
          "Create MAC (not necessarily HMAC)",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-macopt val",
          "MAC algorithm parameters in n:v form or key",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for digest operations"
        ],
        "dhparam": [
          "dhparam: Can't parse \"help\" as a number",
          "Usage: dhparam [flags] [numbits]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format, DER or PEM",
          "-outform PEM|DER",
          "Output format, DER or PEM",
          "-out outfile",
          "Output file",
          "-check",
          "Check the DH parameters",
          "-text",
          "Print a text form of the DH parameters",
          "-noout",
          "Don't output any DH parameters",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-C",
          "Print C code",
          "-2",
          "Generate parameters using 2 as the generator value",
          "-5",
          "Generate parameters using 5 as the generator value",
          "-dsaparam",
          "Read or generate DSA parameters, convert to DH",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "dsa": [
          "dsa: Use -help for summary.",
          "Usage: dsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format, DER PEM PVK",
          "-outform format",
          "Output format, DER PEM PVK",
          "-in val",
          "Input key",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the DSA public value",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output public key, not private",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-*",
          "Any supported cipher",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "dsaparam": [
          "dsaparam: Can't parse \"help\" as a number",
          "Usage: dsaparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-in infile",
          "Input file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-out outfile",
          "Output file",
          "-text",
          "Print as text",
          "-C",
          "Output C code",
          "-noout",
          "No output",
          "-genkey",
          "Generate a DSA key",
          "-rand val",
          "Files to use for random number input",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "ec": [
          "ec: Use -help for summary.",
          "Usage: ec [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in val",
          "Input file",
          "-inform format",
          "Input format - DER or PEM",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key",
          "-param_out",
          "Print the elliptic curve parameters",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output public key, not private",
          "-no_public",
          "exclude public key from private key",
          "-check",
          "check key consistency",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "-conv_form val",
          "Specifies the point conversion form",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "ecparam": [
          "ecparam: Use -help for summary.",
          "Usage: ecparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "-outform PEM|DER",
          "Output format - default PEM",
          "-in infile",
          "Input file",
          "- default stdin",
          "-out outfile",
          "Output file - default stdout",
          "-text",
          "Print the ec parameters in text form",
          "-C",
          "Print a 'C' function creating the parameters",
          "-check",
          "Validate the ec parameters",
          "-list_curves",
          "Prints a list of all curve 'short names'",
          "-no_seed",
          "If 'explicit' parameters are chosen do not use the seed",
          "-noout",
          "Do not print the ec parameter",
          "-name val",
          "Use the ec parameters with specified 'short name'",
          "-conv_form val",
          "Specifies the point conversion form",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "-genkey",
          "Generate ec key",
          "-rand val",
          "Files to use for random number input",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "enc": [
          "Extra arguments given.",
          "enc: Use -help for summary.",
          "Usage: enc [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-ciphers",
          "List ciphers",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-pass val",
          "Passphrase source",
          "-e",
          "Encrypt",
          "-d",
          "Decrypt",
          "-p",
          "Print the iv/key",
          "-P",
          "Print the iv/key and exit",
          "-v",
          "Verbose output",
          "-nopad",
          "Disable standard block padding",
          "-salt",
          "Use salt in the KDF (default)",
          "-nosalt",
          "Do not use salt in the KDF",
          "-debug",
          "Print debug info",
          "-a",
          "Base64 encode/decode, depending on encryption flag",
          "-base64",
          "Same as option -a",
          "-A",
          "Used with -[base64|a] to specify base64 buffer as a single line",
          "-bufsize val",
          "Buffer size",
          "-k val",
          "Passphrase",
          "-kfile infile",
          "Read passphrase from file",
          "-K val",
          "Raw key, in hex",
          "-S val",
          "Salt, in hex",
          "-iv val",
          "IV in hex",
          "-md val",
          "Use specified digest to create a key from the passphrase",
          "-none",
          "Don't encrypt",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "engine": [
          "0:error:260B6084:engine routines:dynamic_load:dso not found:crypto/engine/eng_dyn.c:414:",
          "0:error:2606A074:engine routines:ENGINE_by_id:no such engine:crypto/engine/eng_list.c:339:id=help",
          "Usage: engine [options] engine...",
          "engine... Engines to load",
          "-help",
          "Display this summary",
          "-v",
          "List 'control commands' For each specified engine",
          "-vv",
          "Also display each command's description",
          "-vvv",
          "Also add the input flags for each command",
          "-vvvv",
          "Also show internal input flags",
          "-c",
          "List the capabilities of specified engine",
          "-t",
          "Check that specified engine is available",
          "-tt",
          "Display error trace for unavailable engines",
          "-pre val",
          "Run command against the ENGINE before loading it",
          "-post val",
          "Run command against the ENGINE after loading it",
          "Commands are like \"SO_PATH:/lib/libdriver.so\""
        ],
        "errstr": [
          "Usage: errstr [options] errnum...",
          "errnum",
          "Error number",
          "-help",
          "Display this summary"
        ],
        "exit": [],
        "gendsa": [
          "Can't open help for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('help','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:81:",
          "Usage: gendsa [args] dsaparam-file",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output the key to the specified file",
          "-passout val",
          "Output file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-*",
          "Encrypt the output with any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "genpkey": [
          "genpkey: Use -help for summary.",
          "Usage: genpkey [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "output format (DER or PEM)",
          "-pass val",
          "Output file pass phrase source",
          "-paramfile infile",
          "Parameters file",
          "-algorithm val",
          "The public key algorithm",
          "-pkeyopt val",
          "Set the public key algorithm option as opt:value",
          "-genparam",
          "Generate parameters, not key",
          "-text",
          "Print the in text",
          "-*",
          "Cipher to use to encrypt the key",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Order of options may be important!",
          "See the documentation."
        ],
        "genrsa": [
          "genrsa: Can't parse \"help\" as a number",
          "Usage: genrsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-3",
          "Use 3 for the E value",
          "-F4",
          "Use F4 (0x10001) for the E value",
          "-f4",
          "-out val",
          "Output the key to specified file",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-passout val",
          "Output file pass phrase source",
          "-*",
          "Encrypt the output with any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "help": [
          "Usage: help",
          "Usage: help [options]",
          "Valid options are:",
          "-help",
          "Display this summary"
        ],
        "list": [
          "Extra arguments given.",
          "list: Use -help for summary.",
          "Usage: list [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-commands",
          "List of standard commands",
          "-digest-commands",
          "List of message digest commands",
          "-digest-algorithms",
          "List of message digest algorithms",
          "-cipher-commands",
          "List of cipher commands",
          "-cipher-algorithms",
          "List of cipher algorithms",
          "-public-key-algorithms",
          "List of public key algorithms",
          "-disabled",
          "List of disabled features"
        ],
        "nseq": [
          "nseq: Use -help for summary.",
          "Usage: nseq [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-toseq",
          "Output NS Sequence file",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file"
        ],
        "ocsp": [
          "ocsp: Use -help for summary.",
          "Usage: ocsp [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output filename",
          "-timeout +int",
          "Connection timeout (in seconds) to the OCSP responder",
          "-url val",
          "Responder URL",
          "-host val",
          "TCP/IP hostname:port to connect to",
          "-port +int",
          "Port to run responder on",
          "-ignore_err",
          "Ignore Error response from OCSP responder, and retry",
          "-noverify",
          "Don't verify response at all",
          "-nonce",
          "Add OCSP nonce to request",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-no_chain",
          "Don't chain verify response",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_explicit",
          "Do not explicitly check the chain, just verify the root",
          "-trust_other",
          "Don't verify additional certificates",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-badsig",
          "Corrupt last byte of loaded OSCP response signature (for test)",
          "-text",
          "Print text form of request and response",
          "-req_text",
          "Print text form of request",
          "-resp_text",
          "Print text form of response",
          "-reqin val",
          "File with the DER-encoded request",
          "-respin val",
          "File with the DER-encoded response",
          "-signer infile",
          "Certificate to sign OCSP request with",
          "-VAfile infile",
          "Validator certificates file",
          "-sign_other infile",
          "Additional certificates to include in signed request",
          "-verify_other infile",
          "Additional certificates to search for signer",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath infile",
          "Trusted certificates directory",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-validity_period ulong",
          "Maximum validity discrepancy in seconds",
          "-status_age +int",
          "Maximum status age in seconds",
          "-signkey val",
          "Private key to sign OCSP request with",
          "-reqout val",
          "Output file for the DER-encoded request",
          "-respout val",
          "Output file for the DER-encoded response",
          "-path val",
          "Path to use in OCSP request",
          "-issuer infile",
          "Issuer certificate",
          "-cert infile",
          "Certificate to check",
          "-serial val",
          "Serial number to check",
          "-index infile",
          "Certificate status index file",
          "-CA infile",
          "CA certificate",
          "-nmin +int",
          "Number of minutes before next update",
          "-nrequest +int",
          "Number of requests to accept (default unlimited)",
          "-ndays +int",
          "Number of days before next update",
          "-rsigner infile",
          "Responder certificate to sign responses with",
          "-rkey infile",
          "Responder key to sign responses with",
          "-rother infile",
          "Other certificates to include in response",
          "-rmd val",
          "Digest Algorithm to use in signature of OCSP response",
          "-header val",
          "key=value header to add",
          "-*",
          "Any supported digest algorithm (sha1,sha256, ... )",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates"
        ],
        "passwd": [
          "oOZKeoJOIk9W6",
          "Usage: passwd [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Read passwords from file",
          "-noverify",
          "Never verify when reading password from terminal",
          "-quiet",
          "No warnings",
          "-table",
          "Format output as table",
          "-reverse",
          "Switch table columns",
          "-salt val",
          "Use provided salt",
          "-stdin",
          "Read passwords from stdin",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-1",
          "MD5-based password algorithm",
          "-crypt",
          "Standard Unix password algorithm (default)"
        ],
        "pkcs12": [
          "pkcs12: Use -help for summary.",
          "Usage: pkcs12 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-nokeys",
          "Don't output private keys",
          "-keyex",
          "Set MS key exchange type",
          "-keysig",
          "Set MS key signature type",
          "-nocerts",
          "Don't output certificates",
          "-clcerts",
          "Only output client certificates",
          "-cacerts",
          "Only output CA certificates",
          "-noout",
          "Don't output anything, just verify",
          "-info",
          "Print info about PKCS#12 structure",
          "-chain",
          "Add certificate chain",
          "-twopass",
          "Separate MAC, encryption passwords",
          "-nomacver",
          "Don't verify MAC",
          "-descert",
          "Encrypt output with 3DES (default RC2-40)",
          "-certpbe val",
          "Certificate PBE algorithm (default RC2-40)",
          "-export",
          "Output PKCS12 file",
          "-noiter",
          "Don't use encryption iteration",
          "-maciter",
          "Use MAC iteration",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomac",
          "Don't generate MAC",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-nodes",
          "Don't encrypt private keys",
          "-macalg val",
          "Digest algorithm used in MAC (default SHA1)",
          "-keypbe val",
          "Private key PBE algorithm (default 3DES)",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-inkey val",
          "Private key if not infile",
          "-certfile infile",
          "Load certs from file",
          "-name val",
          "Use name as friendly name",
          "-CSP val",
          "Microsoft CSP name",
          "-caname val",
          "Use name as CA friendly name (can be repeated)",
          "-in infile",
          "Input filename",
          "-out outfile",
          "Output filename",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-password val",
          "Set import/export password source",
          "-CApath dir",
          "PEM-format directory of CA's",
          "-CAfile infile",
          "PEM-format file of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkcs7": [
          "pkcs7: Use -help for summary.",
          "Usage: pkcs7 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-in infile",
          "Input file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't output encoded data",
          "-text",
          "Print full details of certificates",
          "-print",
          "Print out all fields of the PKCS7 structure",
          "-print_certs",
          "Print_certs",
          "print any certs or crl in the input",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkcs8": [
          "pkcs8: Use -help for summary.",
          "Usage: pkcs8 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format (DER or PEM)",
          "-outform PEM|DER",
          "Output format (DER or PEM)",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-topk8",
          "Output PKCS8 file",
          "-noiter",
          "Use 1 as iteration count",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-v2 val",
          "Use PKCS#5 v2.0 and cipher",
          "-v1 val",
          "Use PKCS#5 v1.5 and cipher",
          "-v2prf val",
          "Set the PRF algorithm to use with PKCS#5 v2.0",
          "-iter +int",
          "Specify the iteration count",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-traditional",
          "use traditional format private key",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-scrypt",
          "Use scrypt algorithm",
          "-scrypt_N val",
          "Set scrypt N parameter",
          "-scrypt_r val",
          "Set scrypt r parameter",
          "-scrypt_p val",
          "Set scrypt p parameter"
        ],
        "pkey": [
          "pkey: Use -help for summary.",
          "Usage: pkey [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format (DER or PEM)",
          "-outform PEM|DER",
          "Output format (DER or PEM)",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-in val",
          "Input key",
          "-out outfile",
          "Output file",
          "-pubin",
          "Read public key from input (default is private key)",
          "-pubout",
          "Output public key, not private",
          "-text_pub",
          "Only output public key components",
          "-text",
          "Output in plaintext as well",
          "-noout",
          "Don't output the key",
          "-*",
          "Any supported cipher",
          "-traditional",
          "Use traditional format for private keys",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkeyparam": [
          "pkeyparam: Use -help for summary.",
          "Usage: pkeyparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-text",
          "Print parameters as text",
          "-noout",
          "Don't output encoded parameters",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkeyutl": [
          "pkeyutl: Use -help for summary.",
          "Usage: pkeyutl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file - default stdin",
          "-out outfile",
          "Output file - default stdout",
          "-pubin",
          "Input is a public key",
          "-certin",
          "Input is a cert with a public key",
          "-asn1parse",
          "asn1parse the output data",
          "-hexdump",
          "Hex dump output",
          "-sign",
          "Sign input data with private key",
          "-verify",
          "Verify with public key",
          "-verifyrecover",
          "Verify with public key, recover original data",
          "-rev",
          "Reverse the order of the input buffer",
          "-encrypt",
          "Encrypt input data with public key",
          "-decrypt",
          "Decrypt input data with private key",
          "-derive",
          "Derive shared secret",
          "-kdf val",
          "Use KDF algorithm",
          "-kdflen +int",
          "KDF algorithm output length",
          "-sigfile infile",
          "Signature file (verify operation only)",
          "-inkey val",
          "Input private key file",
          "-peerkey val",
          "Peer key file used in key derivation",
          "-passin val",
          "Input file pass phrase source",
          "-peerform PEM|DER|ENGINE",
          "Peer key format - default PEM",
          "-keyform PEM|DER|ENGINE",
          "Private key format - default PEM",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for crypto operations"
        ],
        "prime": [
          "Failed to process value (help)",
          "Usage: prime [options] [number...]",
          "number Number to check for primality",
          "-help",
          "Display this summary",
          "-hex",
          "Hex output",
          "-generate",
          "Generate a prime",
          "-bits +int",
          "Size of number in bits",
          "-safe",
          "When used with -generate, generate a safe prime",
          "-checks +int",
          "Number of checks"
        ],
        "rand": [
          "rand: Can't parse \"help\" as a number",
          "Usage: rand [flags] num",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output file",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-base64",
          "Base64 encode output",
          "-hex",
          "Hex encode output",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "rehash": [
          "Skipping help, can't write",
          "Usage: rehash [options] [cert-directory...]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-h",
          "-compat",
          "Create both new- and old-style hash links",
          "-old",
          "Use old-style hash to generate links",
          "-n",
          "Do not remove existing links",
          "-v",
          "Verbose output"
        ],
        "req": [
          "req: Use -help for summary.",
          "Usage: req [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-key val",
          "Private key to use",
          "-keyform format",
          "Key file format",
          "-pubkey",
          "Output public key",
          "-new",
          "New request",
          "-config infile",
          "Request template file",
          "-keyout outfile",
          "File to send the key to",
          "-passin val",
          "Private key password source",
          "-passout val",
          "Output file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-newkey val",
          "Specify as type:bits",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-batch",
          "Do not ask anything during request generation",
          "-newhdr",
          "Output \"NEW\" in the header lines",
          "-modulus",
          "RSA modulus",
          "-verify",
          "Verify signature on REQ",
          "-nodes",
          "Don't encrypt the output key",
          "-noout",
          "Do not output REQ",
          "-verbose",
          "Verbose output",
          "-utf8",
          "Input characters are UTF8 (default ASCII)",
          "-nameopt val",
          "Various certificate name options",
          "-reqopt val",
          "Various request text options",
          "-text",
          "Text form of request",
          "-x509",
          "Output a x509 structure instead of a cert request",
          "(Required by some CA's)",
          "-subj val",
          "Set or modify request subject",
          "-subject",
          "Output the request's subject",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-days +int",
          "Number of days cert is valid for",
          "-set_serial val",
          "Serial number to use",
          "-extensions val",
          "Cert extension section (override value in config file)",
          "-reqexts val",
          "Request extension section (override value in config file)",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-keygen_engine val",
          "Specify engine to be used for key generation operations"
        ],
        "rsa": [
          "rsa: Use -help for summary.",
          "Usage: rsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format, one of DER NET PEM",
          "-outform format",
          "Output format, one of DER NET PEM PVK",
          "-in val",
          "Input file",
          "-out outfile",
          "Output file",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output a public key",
          "-passout val",
          "Output file pass phrase source",
          "-passin val",
          "Input file pass phrase source",
          "-RSAPublicKey_in",
          "Input is an RSAPublicKey",
          "-RSAPublicKey_out",
          "Output is an RSAPublicKey",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the RSA key modulus",
          "-check",
          "Verify key consistency",
          "-*",
          "Any supported cipher",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "rsautl": [
          "rsautl: Use -help for summary.",
          "Usage: rsautl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-inkey val",
          "Input key",
          "-keyform PEM|DER|ENGINE",
          "Private key format - default PEM",
          "-pubin",
          "Input is an RSA public",
          "-certin",
          "Input is a cert carrying an RSA public key",
          "-ssl",
          "Use SSL v2 padding",
          "-raw",
          "Use no padding",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "Use PKCS#1 OAEP",
          "-sign",
          "Sign with private key",
          "-verify",
          "Verify with public key",
          "-asn1parse",
          "Run output through asn1parse; useful with -verify",
          "-hexdump",
          "Hex dump output",
          "-x931",
          "Use ANSI X9.31 padding",
          "-rev",
          "Reverse the order of the input buffer",
          "-encrypt",
          "Encrypt with public key",
          "-decrypt",
          "Decrypt with private key",
          "-passin val",
          "Input file pass phrase source",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "s_client": [
          "s_client: Use -help for summary.",
          "Usage: s_client [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-host val",
          "Use -connect instead",
          "-port +int",
          "-connect val",
          "TCP/IP where to connect (default is :4433)",
          "-proxy val",
          "Connect to via specified proxy to the real server",
          "-unix val",
          "Connect over the specified Unix-domain socket",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-verify +int",
          "Turn on peer certificate verification",
          "-cert infile",
          "Certificate file to use, PEM format assumed",
          "-certform PEM|DER",
          "Certificate format (PEM or DER) PEM default",
          "-key val",
          "Private key file to use, if not in -cert file",
          "-keyform PEM|DER|ENGINE",
          "Key format (PEM, DER or engine) PEM default",
          "-pass val",
          "Private key file pass phrase source",
          "-CApath dir",
          "PEM format directory of CA's",
          "-CAfile infile",
          "PEM format file of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-dane_tlsa_domain val",
          "DANE TLSA base domain",
          "-dane_tlsa_rrdata val",
          "DANE TLSA rrdata presentation form",
          "-dane_ee_no_namechecks",
          "Disable name checks when matching DANE-EE(3) TLSA records",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-showcerts",
          "Show all certificates sent by the server",
          "-debug",
          "Extra output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-nbio_test",
          "More ssl protocol testing",
          "-state",
          "Print the ssl states",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-quiet",
          "No s_client output",
          "-ign_eof",
          "Ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "Don't ignore input eof",
          "-starttls val",
          "Use the appropriate STARTTLS command before starting TLS",
          "-xmpphost val",
          "Host to use with \"-starttls xmpp[-server]\"",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-sess_out outfile",
          "File to write SSL session to",
          "-sess_in infile",
          "File to read SSL session from",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material (default 20)",
          "-fallback_scsv",
          "Send the fallback SCSV",
          "-name val",
          "Hostname to use for \"-starttls smtp\"",
          "-CRL infile",
          "CRL file to use",
          "-crl_download",
          "Download CRL from distribution points",
          "-CRLform PEM|DER",
          "CRL format (PEM or DER) PEM is default",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "Restrict verify output to errors",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-prexit",
          "Print session information when the program exits",
          "-security_debug",
          "Enable security debug messages",
          "-security_debug_verbose",
          "Output more security debug output",
          "-cert_chain infile",
          "Certificate chain file (in PEM format)",
          "-chainCApath dir",
          "Use dir as certificate store path to build CA certificate chain",
          "-verifyCApath dir",
          "Use dir as certificate store path to verify CA certificate",
          "-build_chain",
          "Build certificate chain",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-nocommands",
          "Do not use interactive command letters",
          "-servername val",
          "Set TLS extension servername in ClientHello",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-status",
          "Request certificate status from server",
          "-serverinfo val",
          "types",
          "Send empty ClientHello extensions (comma-separated numbers)",
          "-alpn val",
          "Enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-async",
          "Support asynchronous operation",
          "-ssl_config val",
          "Use specified configuration file",
          "-split_send_frag int",
          "Size used to split data for encrypt pipelines",
          "-max_pipelines int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-read_buf int",
          "Default read buffer size to be used for connections",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-curves val",
          "Elliptic curves to advertise (colon-separated list)",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify cipher list to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM or DER) PEM default",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (PEM or DER) PEM default",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-dtls",
          "Use any version of DTLS",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-mtu +int",
          "Set the link layer MTU",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-nbio",
          "Use non-blocking IO",
          "-psk_identity val",
          "PSK identity",
          "-psk val",
          "PSK in hex (without 0x)",
          "-srpuser val",
          "SRP authentication for 'user'",
          "-srppass val",
          "Password for 'user'",
          "-srp_lateuser",
          "SRP username into second ClientHello message",
          "-srp_moregroups",
          "Tolerate other than the known g N values.",
          "-srp_strength +int",
          "Minimal length in bits for N",
          "-nextprotoneg val",
          "Enable NPN extension, considering named protocols supported (comma-separated list)",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-ssl_client_engine val",
          "Specify engine to be used for client certificate operations",
          "-ct",
          "Request and parse SCTs (also enables OCSP stapling)",
          "-noct",
          "Do not request or parse SCTs (default)",
          "-ctlogfile infile",
          "CT log list CONF file"
        ],
        "s_server": [
          "Can't open server.pem for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('server.pem','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:81:",
          "unable to load server certificate private key file",
          "Usage: s_server [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-port +int",
          "TCP/IP port to listen on for connections (default is 4433)",
          "-accept val",
          "TCP/IP optional host and port to listen on for connections (default is *:4433)",
          "-unix val",
          "Unix domain socket to accept on",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-unlink",
          "For -unix, unlink existing socket first",
          "-context val",
          "Set session ID context",
          "-verify int",
          "Turn on peer certificate verification",
          "-Verify int",
          "Turn on peer certificate verification, must have a cert",
          "-cert infile",
          "Certificate file to use; default is server.pem",
          "-naccept +int",
          "Terminate after #num connections",
          "-serverinfo val",
          "PEM serverinfo file for certificate",
          "-certform PEM|DER",
          "Certificate format (PEM or DER) PEM default",
          "-key val",
          "Private Key if not in -cert; default is server.pem",
          "-keyform format",
          "Key format (PEM, DER or ENGINE) PEM default",
          "-pass val",
          "Private key file pass phrase source",
          "-dcert infile",
          "Second certificate file to use (usually for DSA)",
          "-dhparam infile",
          "DH parameters file to use",
          "-dcertform PEM|DER",
          "Second certificate format (PEM or DER) PEM default",
          "-dkey infile",
          "Second private key file to use (usually for DSA)",
          "-dkeyform PEM|DER",
          "Second key format (PEM, DER or ENGINE) PEM default",
          "-dpass val",
          "Second private key file pass phrase source",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-debug",
          "Print more output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-state",
          "Print the SSL states",
          "-CAfile infile",
          "PEM format file of CA's",
          "-CApath dir",
          "PEM format directory of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-quiet",
          "No server output",
          "-no_resume_ephemeral",
          "Disable caching and tickets if ephemeral (EC)DH is used",
          "-www",
          "Respond to a 'GET /' with a status page",
          "-WWW",
          "Respond to a 'GET with the file ./path",
          "-servername val",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "mismatch send fatal alert (default warning alert)",
          "-cert2 infile",
          "Certificate file to use for servername; default isserver2.pem",
          "-key2 infile",
          "-Private Key file to use for servername if not in -cert2",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-HTTP",
          "Like -WWW but ./path includes HTTP headers",
          "-id_prefix val",
          "Generate SSL/TLS session IDs prefixed by arg",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material (default 20)",
          "-CRL infile",
          "CRL file to use",
          "-crl_download",
          "Download CRL from distribution points",
          "-cert_chain infile",
          "certificate chain file in PEM format",
          "-dcert_chain infile",
          "second certificate chain file in PEM format",
          "-chainCApath dir",
          "use dir as certificate store path to build CA certificate chain",
          "-verifyCApath dir",
          "use dir as certificate store path to verify CA certificate",
          "-no_cache",
          "Disable session cache",
          "-ext_cache",
          "Disable internal cache, setup and use external cache",
          "-CRLform PEM|DER",
          "CRL format (PEM or DER) PEM is default",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "No verify output except verify errors",
          "-build_chain",
          "Build certificate chain",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-ign_eof",
          "ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "Do not ignore input eof",
          "-status",
          "Request certificate status from server",
          "-status_verbose",
          "Print more output in certificate status callback",
          "-status_timeout int",
          "Status request responder timeout",
          "-status_url val",
          "Status request fallback URL",
          "-security_debug",
          "Print output from SSL/TLS security framework",
          "-security_debug_verbose",
          "Print more output from SSL/TLS security framework",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-rev",
          "act as a simple test server which just sends back with the received text reversed",
          "-async",
          "Operate in asynchronous mode",
          "-ssl_config val",
          "Configure SSL_CTX using the configuration 'val'",
          "-split_send_frag int",
          "Size used to split data for encrypt pipelines",
          "-max_pipelines int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-read_buf int",
          "Default read buffer size to be used for connections",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-curves val",
          "Elliptic curves to advertise (colon-separated list)",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify cipher list to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM or DER) PEM default",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (PEM or DER) PEM default",
          "-nbio",
          "Use non-blocking IO",
          "-psk_hint val",
          "PSK identity hint to use",
          "-psk val",
          "PSK in hex (without 0x)",
          "-srpvfile infile",
          "The verifier file for SRP",
          "-srpuserseed val",
          "A seed string for a default user salt",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "just talk TLSv1.2",
          "-dtls",
          "Use any DTLS version",
          "-timeout",
          "Enable timeouts",
          "-mtu +int",
          "Set link layer MTU",
          "-listen",
          "Listen for a DTLS ClientHello with a cookie and then connect",
          "-dtls1",
          "Just talk DTLSv1",
          "-dtls1_2",
          "Just talk DTLSv1.2",
          "-no_dhe",
          "Disable ephemeral DH",
          "-nextprotoneg val",
          "Set the advertised protocols for the NPN extension (comma-separated list)",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-alpn val",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "s_time": [
          "s_time: Use -help for summary.",
          "Usage: s_time [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-connect val",
          "Where to connect as post:port (default is localhost:4433)",
          "-cipher val",
          "Cipher to use, see 'openssl ciphers'",
          "-cert infile",
          "Cert file to use, PEM format assumed",
          "-key infile",
          "File with key, PEM; default is -cert file",
          "-CApath dir",
          "PEM format directory of CA's",
          "-cafile infile",
          "PEM format file of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-new",
          "Just time new connections",
          "-reuse",
          "Just time connection reuse",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-verify +int",
          "Turn on peer certificate verification, set depth",
          "-time +int",
          "Seconds to collect data, default 30",
          "-www val",
          "Fetch specified page from the site"
        ],
        "sess_id": [
          "sess_id: Use -help for summary.",
          "Usage: sess_id [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "-outform format",
          "Output format - default PEM (PEM, DER or NSS)",
          "-in val",
          "Input file - default stdin",
          "-out val",
          "Output file - default stdout",
          "-text",
          "Print ssl session id details",
          "-cert",
          "Output certificate",
          "-noout",
          "Don't output the encoded session info",
          "-context val",
          "Set the session ID context"
        ],
        "smime": [
          "smime: Use -help for summary.",
          "Usage: smime [options] cert.pem...",
          "cert.pem... recipient certs for encryption",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-verify",
          "Verify signed message",
          "-pk7out",
          "Output PKCS#7 structure",
          "-nointern",
          "Don't search certificates in message for signer",
          "-nosigs",
          "Don't verify message signature",
          "-noverify",
          "Don't verify signers certificate",
          "-nocerts",
          "Don't include signers certificate when signing",
          "-nodetach",
          "Use opaque signing",
          "-noattr",
          "Don't include any signed attributes",
          "-binary",
          "Don't translate message to text",
          "-certfile infile",
          "Other certificates file",
          "-signer val",
          "Signer certificate file",
          "-recip infile",
          "Recipient certificate file for decryption",
          "-in infile",
          "Input file",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-keyform format",
          "Input private key format (PEM or ENGINE)",
          "-out outfile",
          "Output file",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-content infile",
          "Supply or override content for detached signature",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "-text",
          "Include or delete text MIME headers",
          "-CApath dir",
          "Trusted certificates directory",
          "-CAfile infile",
          "Trusted certificates file",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-resign",
          "Resign a signed message",
          "-nochain",
          "set PKCS7_NOCHAIN so certificates contained in the message are not used as untrusted CAs",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-passin val",
          "Input file pass phrase source",
          "-md val",
          "Digest algorithm to use when signing or resigning",
          "-*",
          "Any supported cipher",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "speed": [
          "speed: Unknown algorithm help",
          "Usage: speed [options] ciphers...",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-evp val",
          "Use specified EVP cipher",
          "-decrypt",
          "Time decryption instead of encryption (only EVP)",
          "-mr",
          "Produce machine readable output",
          "-mb",
          "Enable (tls1.1) multi-block mode on evp_cipher requested with -evp",
          "-misalign int",
          "Amount to mis-align buffers",
          "-elapsed",
          "Measure time in real time instead of CPU user time",
          "-multi +int",
          "Run benchmarks in parallel",
          "-async_jobs +int",
          "Enable async mode and start pnum jobs",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "spkac": [
          "spkac: Use -help for summary.",
          "Usage: spkac [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-key infile",
          "Create SPKAC using private key",
          "-passin val",
          "Input file pass phrase source",
          "-challenge val",
          "Challenge string",
          "-spkac val",
          "Alternative SPKAC name",
          "-noout",
          "Don't print SPKAC",
          "-pubkey",
          "Output public key",
          "-verify",
          "Verify SPKAC signature",
          "-spksect val",
          "Specify the name of an SPKAC-dedicated section of configuration",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "srp": [
          "Exactly one of the options -add, -delete, -modify -list must be specified.",
          "srp: Use -help for summary.",
          "Usage: srp [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Talk a lot while doing things",
          "-config infile",
          "A config file",
          "-name val",
          "The particular srp definition to use",
          "-srpvfile infile",
          "The srp verifier file name",
          "-add",
          "Add a user and srp verifier",
          "-modify",
          "Modify the srp verifier of an existing user",
          "-delete",
          "Delete user from verifier file",
          "-list",
          "List users",
          "-gn val",
          "Set g and N values to be used for new verifier",
          "-userinfo val",
          "Additional info to be set for user",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "ts": [
          "ts: Use -help for summary.",
          "Usage: ts [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-config infile",
          "Configuration file",
          "-section val",
          "Section to use within config file",
          "-query",
          "Generate a TS query",
          "-data infile",
          "File to hash",
          "-digest val",
          "Digest (as a hex string)",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-tspolicy val",
          "Policy OID to use",
          "-no_nonce",
          "Do not include a nonce",
          "-cert",
          "Put cert request into query",
          "-in infile",
          "Input file",
          "-token_in",
          "Input is a PKCS#7 file",
          "-out outfile",
          "Output file",
          "-token_out",
          "Output is a PKCS#7 file",
          "-text",
          "Output text (not DER)",
          "-reply",
          "Generate a TS reply",
          "-queryfile infile",
          "File containing a TS query",
          "-passin val",
          "Input file pass phrase source",
          "-inkey val",
          "File with private key for reply",
          "-signer val",
          "Signer certificate file",
          "-chain infile",
          "File with signer CA chain",
          "-verify",
          "Verify a TS response",
          "-CApath dir",
          "Path to trusted CA files",
          "-CAfile infile",
          "File with trusted CA certs",
          "-untrusted infile",
          "File with untrusted certs",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Options specific to 'ts -verify':",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Typical uses:",
          "ts -query [-rand file...] [-config file] [-data file]",
          "[-digest hexstring] [-tspolicy oid] [-no_nonce] [-cert]",
          "[-in file] [-out file] [-text]",
          "or",
          "ts -reply [-config file] [-section tsa_section]",
          "[-queryfile file] [-passin password]",
          "[-signer tsa_cert.pem] [-inkey private_key.pem]",
          "[-chain certs_file.pem] [-tspolicy oid]",
          "[-in file] [-token_in] [-out file] [-token_out]",
          "[-text] [-engine id]",
          "ts -verify -CApath dir -CAfile file.pem -untrusted file.pem",
          "[-data file] [-digest hexstring]",
          "[-queryfile file] -in file [-token_in]",
          "[[options specific to 'ts -verify']]"
        ],
        "verify": [
          "Can't open help for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('help','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:81:",
          "unable to load certificate",
          "Usage: verify [options] cert.pem...",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Print extra information about the operations being performed.",
          "-CApath dir",
          "A directory of trusted certificates",
          "-CAfile infile",
          "A file of trusted certificates",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-untrusted infile",
          "A file of untrusted certificates",
          "-trusted infile",
          "-CRLfile infile",
          "File containing one or more CRL's (in PEM format) to load",
          "-crl_download",
          "Attempt to download CRL information for this certificate",
          "-show_chain",
          "Display information about the certificate chain",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing",
          "Recognized verify names:",
          "default",
          "",
          "pkcs7",
          "smime_sign",
          "ssl_client",
          "ssl_server"
        ],
        "version": [
          "Extra parameters given.",
          "version: Use -help for summary.",
          "Usage: version [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-a",
          "Show all data",
          "-b",
          "Show build date",
          "-d",
          "Show configuration directory",
          "-e",
          "Show engines directory",
          "-f",
          "Show compiler flags used",
          "-o",
          "Show some internal datatype options",
          "-p",
          "Show target build platform",
          "-v",
          "Show library version"
        ],
        "x509": [
          "x509: Unknown parameter help",
          "x509: Use -help for summary.",
          "Usage: x509 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format - default PEM (one of DER, NET or PEM)",
          "-in infile",
          "Input file - default stdin",
          "-outform format",
          "Output format - default PEM (one of DER, NET or PEM)",
          "-out outfile",
          "Output file - default stdout",
          "-keyform PEM|DER",
          "Private key format - default PEM",
          "-passin val",
          "Private key password/pass-phrase source",
          "-serial",
          "Print serial number value",
          "-subject_hash",
          "Print subject hash value",
          "-issuer_hash",
          "Print issuer hash value",
          "-hash",
          "Synonym for -subject_hash",
          "-subject",
          "Print subject DN",
          "-issuer",
          "Print issuer DN",
          "-email",
          "Print email address(es)",
          "-startdate",
          "Set notBefore field",
          "-enddate",
          "Set notAfter field",
          "-purpose",
          "Print out certificate purposes",
          "-dates",
          "Both Before and After dates",
          "-modulus",
          "Print the RSA key modulus",
          "-pubkey",
          "Output the public key",
          "-fingerprint",
          "Print the certificate fingerprint",
          "-alias",
          "Output certificate alias",
          "-noout",
          "No output, just status",
          "-nocert",
          "No certificate output",
          "-ocspid",
          "Print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "Print OCSP Responder URL(s)",
          "-trustout",
          "Output a trusted certificate",
          "-clrtrust",
          "Clear all trusted purposes",
          "-clrext",
          "Clear all certificate extensions",
          "-addtrust val",
          "Trust certificate for a given purpose",
          "-addreject val",
          "Reject certificate for a given purpose",
          "-setalias val",
          "Set certificate alias",
          "-days int",
          "How long till expiry of a signed certificate - def 30 days",
          "-checkend intmax",
          "Check whether the cert expires in the next arg seconds",
          "Exit 1 if so, 0 if not",
          "-signkey infile",
          "Self sign cert with arg",
          "-x509toreq",
          "Output a certification request object",
          "-req",
          "Input is a certificate request, sign and output",
          "-CA infile",
          "Set the CA certificate, must be PEM format",
          "-CAkey val",
          "The CA key, must be PEM format; if not in CAfile",
          "-CAcreateserial",
          "Create serial number file if it does not exist",
          "-CAserial val",
          "Serial file",
          "-set_serial val",
          "Serial number to use",
          "-text",
          "Print the certificate in text form",
          "-C",
          "Print out C code forms",
          "-extfile infile",
          "File with X509V3 extensions to add",
          "-extensions val",
          "Section from config file to use",
          "-nameopt val",
          "Various certificate name options",
          "-certopt val",
          "Various certificate text options",
          "-checkhost val",
          "Check certificate matches host",
          "-checkemail val",
          "Check certificate matches email",
          "-checkip val",
          "Check certificate matches ipaddr",
          "-CAform PEM|DER",
          "CA format - default PEM",
          "-CAkeyform format",
          "CA key format - default PEM",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-force_pubkey infile",
          "Force the Key to put inside certificate",
          "-next_serial",
          "Increment current certificate serial number",
          "-clrreject",
          "Clears all the prohibited or rejected uses of the certificate",
          "-badsig",
          "Corrupt last byte of certificate signature (for test)",
          "-*",
          "Any supported digest",
          "-subject_hash_old",
          "Print old-style (MD5) issuer hash value",
          "-issuer_hash_old",
          "Print old-style (MD5) subject hash value",
          "-engine val",
          "Use engine, possibly a hardware device"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "exit",
        "gendsa",
        "genpkey",
        "genrsa",
        "help",
        "list",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "rehash",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "srp",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "blake2b512",
        "blake2s256",
        "gost",
        "md4",
        "md5",
        "mdc2",
        "rmd160",
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512"
      ]
    },
    "1.1.1l": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "aria-128-cbc",
        "aria-128-cfb",
        "aria-128-cfb1",
        "aria-128-cfb8",
        "aria-128-ctr",
        "aria-128-ecb",
        "aria-128-ofb",
        "aria-192-cbc",
        "aria-192-cfb",
        "aria-192-cfb1",
        "aria-192-cfb8",
        "aria-192-ctr",
        "aria-192-ecb",
        "aria-192-ofb",
        "aria-256-cbc",
        "aria-256-cfb",
        "aria-256-cfb1",
        "aria-256-cfb8",
        "aria-256-ctr",
        "aria-256-ecb",
        "aria-256-ofb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "seed",
        "seed-cbc",
        "seed-cfb",
        "seed-ecb",
        "seed-ofb",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ctr",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse: Use -help for summary.",
          "Usage: asn1parse [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "input format - one of DER PEM",
          "-in infile",
          "input file",
          "-out outfile",
          "output file (output format is always DER)",
          "-i",
          "indents the output",
          "-noout",
          "do not produce any output",
          "-offset +int",
          "offset into file",
          "-length +int",
          "length of section in file",
          "-oid infile",
          "file of extra oid definitions",
          "-dump",
          "unknown data in hex form",
          "-dlimit +int",
          "dump the first arg bytes of unknown data in hex form",
          "-strparse +int",
          "offset; a series of these can be used to 'dig'",
          "into multiple ASN1 blob wrappings",
          "-genstr val",
          "string to generate ASN1 structure from",
          "-genconf val",
          "file to generate ASN1 structure from",
          "(-inform",
          "will be ignored)",
          "-strictpem",
          "do not attempt base64 decode outside PEM markers",
          "-item val",
          "item to parse and print"
        ],
        "ca": [
          "Using configuration from /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.1.1l/ssl/openssl.cnf",
          "Can't open ./demoCA/private/cakey.pem for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:69:fopen('./demoCA/private/cakey.pem','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:76:",
          "unable to load CA private key",
          "Usage: ca [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Verbose output during processing",
          "-config val",
          "A config file",
          "-name val",
          "The particular CA definition to use",
          "-subj val",
          "Use arg instead of request's subject",
          "-utf8",
          "Input characters are UTF8 (default ASCII)",
          "-create_serial",
          "If reading serial fails, create a new random serial",
          "-rand_serial",
          "Always create a random serial; do not store it",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-startdate val",
          "Cert notBefore, YYMMDDHHMMSSZ",
          "-enddate val",
          "YYMMDDHHMMSSZ cert notAfter (overrides -days)",
          "-days +int",
          "Number of days to certify the cert for",
          "-md val",
          "md to use; one of md2, md5, sha or sha1",
          "-policy val",
          "The CA 'policy' to support",
          "-keyfile val",
          "Private key",
          "-keyform format",
          "Private key file format (PEM or ENGINE)",
          "-passin val",
          "Input file pass phrase source",
          "-key val",
          "Key to decode the private key if it is encrypted",
          "-cert infile",
          "The CA cert",
          "-selfsign",
          "Sign a cert with the key associated with it",
          "-in infile",
          "The input PEM encoded cert request(s)",
          "-out outfile",
          "Where to put the output file(s)",
          "-outdir dir",
          "Where to put output cert",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-notext",
          "Do not print the generated certificate",
          "-batch",
          "Don't ask questions",
          "-preserveDN",
          "Don't re-order the DN",
          "-noemailDN",
          "Don't add the EMAIL field to the DN",
          "-gencrl",
          "Generate a new CRL",
          "-msie_hack",
          "msie modifications to handle all those universal strings",
          "-crldays +int",
          "Days until the next CRL is due",
          "-crlhours +int",
          "Hours until the next CRL is due",
          "-crlsec +int",
          "Seconds until the next CRL is due",
          "-infiles",
          "The last argument, requests to process",
          "-ss_cert infile",
          "File contains a self signed cert to sign",
          "-spkac infile",
          "File contains DN and signed public key and challenge",
          "-revoke infile",
          "Revoke a cert (given in file)",
          "-valid val",
          "Add a Valid(not-revoked) DB entry about a cert (given in file)",
          "-extensions val",
          "Extension section (override value in config file)",
          "-extfile infile",
          "Configuration file with X509v3 extensions to add",
          "-status val",
          "Shows cert status given the serial number",
          "-updatedb",
          "Updates db for expired cert",
          "-crlexts val",
          "CRL extension section (override value in config file)",
          "-crl_reason val",
          "revocation reason",
          "-crl_hold val",
          "the hold instruction, an OID. Sets revocation reason to certificateHold",
          "-crl_compromise val",
          "sets compromise time to val and the revocation reason to keyCompromise",
          "-crl_CA_compromise val",
          "sets compromise time to val and the revocation reason to CACompromise",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "ciphers": [
          "Error in cipher list",
          "0:error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl/ssl_lib.c:2571:",
          "Usage: ciphers [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-v",
          "Verbose listing of the SSL/TLS ciphers",
          "-V",
          "Even more verbose",
          "-s",
          "Only supported ciphers",
          "-tls1",
          "TLS1 mode",
          "-tls1_1",
          "TLS1.1 mode",
          "-tls1_2",
          "TLS1.2 mode",
          "-tls1_3",
          "TLS1.3 mode",
          "-stdname",
          "Show standard cipher names",
          "-psk",
          "include ciphersuites requiring PSK",
          "-srp",
          "include ciphersuites requiring SRP",
          "-convert val",
          "Convert standard name into OpenSSL name",
          "-ciphersuites val",
          "Configure the TLSv1.3 ciphersuites to use"
        ],
        "cms": [
          "No operation option (-encrypt|-decrypt|-sign|-verify|...) specified.",
          "cms: Use -help for summary.",
          "Usage: cms [options] cert.pem...",
          "cert.pem... recipient certs for encryption",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-sign_receipt",
          "Generate a signed receipt for the message",
          "-resign",
          "Resign a signed message",
          "-verify",
          "Verify signed message",
          "-verify_retcode",
          "(No additional info)",
          "-verify_receipt infile",
          "-cmsout",
          "Output CMS structure",
          "-data_out",
          "-data_create",
          "-digest_verify",
          "-digest_create",
          "-compress",
          "-uncompress",
          "-EncryptedData_decrypt",
          "-EncryptedData_encrypt",
          "-debug_decrypt",
          "-text",
          "Include or delete text MIME headers",
          "-asciicrlf",
          "-nointern",
          "Don't search certificates in message for signer",
          "-noverify",
          "Don't verify signers certificate",
          "-nocerts",
          "Don't include signers certificate when signing",
          "-noattr",
          "Don't include any signed attributes",
          "-nodetach",
          "Use opaque signing",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "-binary",
          "Don't translate message to text",
          "-keyid",
          "Use subject key identifier",
          "-nosigs",
          "Don't verify message signature",
          "-no_content_verify",
          "-no_attr_verify",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "-noout",
          "For the -cmsout operation do not output the parsed CMS structure",
          "-receipt_request_print",
          "Print CMS Receipt Request",
          "-receipt_request_all",
          "-receipt_request_first",
          "-rctform PEM|DER",
          "Receipt file format",
          "-certfile infile",
          "Other certificates file",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath dir",
          "trusted certificates directory",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-content infile",
          "Supply or override content for detached signature",
          "-print",
          "For the -cmsout operation print out all fields of the CMS structure",
          "-secretkey val",
          "-secretkeyid val",
          "-pwri_password val",
          "-econtent_type val",
          "-passin val",
          "Input file pass phrase source",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "-signer val",
          "Signer certificate file",
          "-recip infile",
          "Recipient cert file for decryption",
          "-certsout outfile",
          "Certificate output file",
          "-md val",
          "Digest algorithm to use when signing or resigning",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-keyform format",
          "Input private key format (PEM or ENGINE)",
          "-keyopt val",
          "Set public key parameters as n:v pairs",
          "-receipt_request_from val",
          "-receipt_request_to val",
          "-*",
          "Any supported cipher",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-aes128-wrap",
          "Use AES128 to wrap key",
          "-aes192-wrap",
          "Use AES192 to wrap key",
          "-aes256-wrap",
          "Use AES256 to wrap key",
          "-des3-wrap",
          "Use 3DES-EDE to wrap key",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "crl": [
          "crl: Use -help for summary.",
          "Usage: crl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format; default PEM",
          "-in infile",
          "Input file - default stdin",
          "-outform PEM|DER",
          "Output format - default PEM",
          "-out outfile",
          "output file - default stdout",
          "-keyform PEM|DER",
          "Private key file format (PEM or ENGINE)",
          "-key infile",
          "CRL signing Private key to use",
          "-issuer",
          "Print issuer DN",
          "-lastupdate",
          "Set lastUpdate field",
          "-nextupdate",
          "Set nextUpdate field",
          "-noout",
          "No CRL output",
          "-fingerprint",
          "Print the crl fingerprint",
          "-crlnumber",
          "Print CRL number",
          "-badsig",
          "Corrupt last byte of loaded CRL signature (for test)",
          "-gendelta infile",
          "Other CRL to compare/diff to the Input one",
          "-CApath dir",
          "Verify CRL using certificates in dir",
          "-CAfile infile",
          "Verify CRL using certificates in file name",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-verify",
          "Verify CRL signature",
          "-text",
          "Print out a text format version",
          "-hash",
          "Print hash value",
          "-nameopt val",
          "Various certificate name options",
          "-*",
          "Any supported digest",
          "-hash_old",
          "Print old-style (MD5) hash value"
        ],
        "crl2pkcs7": [
          "crl2pkcs7: Use -help for summary.",
          "Usage: crl2pkcs7 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-nocrl",
          "No crl to load, just certs from '-certfile'",
          "-certfile infile",
          "File of chain of certs to a trusted CA; can be repeated"
        ],
        "dgst": [
          "help: No such file or directory",
          "Usage: dgst [options] [file...]",
          "file... files to digest (default is stdin)",
          "-help",
          "Display this summary",
          "-list",
          "List digests",
          "-c",
          "Print the digest with separating colons",
          "-r",
          "Print the digest in coreutils format",
          "-out outfile",
          "Output to filename rather than stdout",
          "-passin val",
          "Input file pass phrase source",
          "-sign val",
          "Sign digest using private key",
          "-verify val",
          "Verify a signature using public key",
          "-prverify val",
          "Verify a signature using private key",
          "-signature infile",
          "File with signature to verify",
          "-keyform format",
          "Key file format (PEM or ENGINE)",
          "-hex",
          "Print as hex dump",
          "-binary",
          "Print in binary form",
          "-d",
          "Print debug info",
          "-debug",
          "-fips-fingerprint",
          "Compute HMAC with the key used in OpenSSL-FIPS fingerprint",
          "-hmac val",
          "Create hashed MAC with key",
          "-mac val",
          "Create MAC (not necessarily HMAC)",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-macopt val",
          "MAC algorithm parameters in n:v form or key",
          "-*",
          "Any supported digest",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for digest operations"
        ],
        "dhparam": [
          "dhparam: Can't parse \"help\" as a number",
          "Usage: dhparam [flags] [numbits]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format, DER or PEM",
          "-outform PEM|DER",
          "Output format, DER or PEM",
          "-out outfile",
          "Output file",
          "-check",
          "Check the DH parameters",
          "-text",
          "Print a text form of the DH parameters",
          "-noout",
          "Don't output any DH parameters",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-C",
          "Print C code",
          "-2",
          "Generate parameters using 2 as the generator value",
          "-5",
          "Generate parameters using 5 as the generator value",
          "-dsaparam",
          "Read or generate DSA parameters, convert to DH",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "dsa": [
          "dsa: Use -help for summary.",
          "Usage: dsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format, DER PEM PVK",
          "-outform format",
          "Output format, DER PEM PVK",
          "-in val",
          "Input key",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the DSA public value",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output public key, not private",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-*",
          "Any supported cipher",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "dsaparam": [
          "dsaparam: Can't parse \"help\" as a number",
          "Usage: dsaparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-in infile",
          "Input file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-out outfile",
          "Output file",
          "-text",
          "Print as text",
          "-C",
          "Output C code",
          "-noout",
          "No output",
          "-genkey",
          "Generate a DSA key",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine e, possibly a hardware device"
        ],
        "ec": [
          "ec: Use -help for summary.",
          "Usage: ec [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in val",
          "Input file",
          "-inform format",
          "Input format - DER or PEM",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key",
          "-param_out",
          "Print the elliptic curve parameters",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output public key, not private",
          "-no_public",
          "exclude public key from private key",
          "-check",
          "check key consistency",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "-conv_form val",
          "Specifies the point conversion form",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "ecparam": [
          "ecparam: Use -help for summary.",
          "Usage: ecparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "-outform PEM|DER",
          "Output format - default PEM",
          "-in infile",
          "Input file",
          "- default stdin",
          "-out outfile",
          "Output file - default stdout",
          "-text",
          "Print the ec parameters in text form",
          "-C",
          "Print a 'C' function creating the parameters",
          "-check",
          "Validate the ec parameters",
          "-list_curves",
          "Prints a list of all curve 'short names'",
          "-no_seed",
          "If 'explicit' parameters are chosen do not use the seed",
          "-noout",
          "Do not print the ec parameter",
          "-name val",
          "Use the ec parameters with specified 'short name'",
          "-conv_form val",
          "Specifies the point conversion form",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "-genkey",
          "Generate ec key",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "enc": [
          "Extra arguments given.",
          "enc: Use -help for summary.",
          "Usage: enc [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-list",
          "List ciphers",
          "-ciphers",
          "Alias for -list",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-pass val",
          "Passphrase source",
          "-e",
          "Encrypt",
          "-d",
          "Decrypt",
          "-p",
          "Print the iv/key",
          "-P",
          "Print the iv/key and exit",
          "-v",
          "Verbose output",
          "-nopad",
          "Disable standard block padding",
          "-salt",
          "Use salt in the KDF (default)",
          "-nosalt",
          "Do not use salt in the KDF",
          "-debug",
          "Print debug info",
          "-a",
          "Base64 encode/decode, depending on encryption flag",
          "-base64",
          "Same as option -a",
          "-A",
          "Used with -[base64|a] to specify base64 buffer as a single line",
          "-bufsize val",
          "Buffer size",
          "-k val",
          "Passphrase",
          "-kfile infile",
          "Read passphrase from file",
          "-K val",
          "Raw key, in hex",
          "-S val",
          "Salt, in hex",
          "-iv val",
          "IV in hex",
          "-md val",
          "Use specified digest to create a key from the passphrase",
          "-iter +int",
          "Specify the iteration count and force use of PBKDF2",
          "-pbkdf2",
          "Use password-based key derivation function 2",
          "-none",
          "Don't encrypt",
          "-*",
          "Any supported cipher",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "engine": [
          "0:error:25066067:DSO support routines:dlfcn_load:could not load the shared library:crypto/dso/dso_dlfcn.c:118:filename(/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.1.1l/lib/engines-1.1/help.so): /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v1.1.1l/lib/engines-1.1/help.so: cannot open shared object file: No such file or directory",
          "0:error:25070067:DSO support routines:DSO_load:could not load the shared library:crypto/dso/dso_lib.c:162:",
          "0:error:260B6084:engine routines:dynamic_load:dso not found:crypto/engine/eng_dyn.c:414:",
          "0:error:2606A074:engine routines:ENGINE_by_id:no such engine:crypto/engine/eng_list.c:334:id=help",
          "Usage: engine [options] engine...",
          "engine... Engines to load",
          "-help",
          "Display this summary",
          "-v",
          "List 'control commands' For each specified engine",
          "-vv",
          "Also display each command's description",
          "-vvv",
          "Also add the input flags for each command",
          "-vvvv",
          "Also show internal input flags",
          "-c",
          "List the capabilities of specified engine",
          "-t",
          "Check that specified engine is available",
          "-tt",
          "Display error trace for unavailable engines",
          "-pre val",
          "Run command against the ENGINE before loading it",
          "-post val",
          "Run command against the ENGINE after loading it",
          "Commands are like \"SO_PATH:/lib/libdriver.so\""
        ],
        "errstr": [
          "Usage: errstr [options] errnum...",
          "errnum",
          "Error number",
          "-help",
          "Display this summary"
        ],
        "gendsa": [
          "Can't open help for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:69:fopen('help','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:76:",
          "Usage: gendsa [args] dsaparam-file",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output the key to the specified file",
          "-passout val",
          "Output file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-*",
          "Encrypt the output with any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "genpkey": [
          "genpkey: Use -help for summary.",
          "Usage: genpkey [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "output format (DER or PEM)",
          "-pass val",
          "Output file pass phrase source",
          "-paramfile infile",
          "Parameters file",
          "-algorithm val",
          "The public key algorithm",
          "-pkeyopt val",
          "Set the public key algorithm option as opt:value",
          "-genparam",
          "Generate parameters, not key",
          "-text",
          "Print the in text",
          "-*",
          "Cipher to use to encrypt the key",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Order of options may be important!",
          "See the documentation."
        ],
        "genrsa": [
          "genrsa: Can't parse \"help\" as a number",
          "Usage: genrsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-3",
          "Use 3 for the E value",
          "-F4",
          "Use F4 (0x10001) for the E value",
          "-f4",
          "-out outfile",
          "Output the key to specified file",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-passout val",
          "Output file pass phrase source",
          "-*",
          "Encrypt the output with any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-primes +int",
          "Specify number of primes"
        ],
        "help": [
          "Usage: help [options]",
          "help [command]",
          "-help",
          "Display this summary"
        ],
        "list": [
          "Extra arguments given.",
          "list: Use -help for summary.",
          "Usage: list [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-1",
          "List in one column",
          "-commands",
          "List of standard commands",
          "-digest-commands",
          "List of message digest commands",
          "-digest-algorithms",
          "List of message digest algorithms",
          "-cipher-commands",
          "List of cipher commands",
          "-cipher-algorithms",
          "List of cipher algorithms",
          "-public-key-algorithms",
          "List of public key algorithms",
          "-public-key-methods",
          "List of public key methods",
          "-disabled",
          "List of disabled features",
          "-missing-help",
          "List missing detailed help strings",
          "-options val",
          "List options for specified command"
        ],
        "nseq": [
          "nseq: Use -help for summary.",
          "Usage: nseq [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-toseq",
          "Output NS Sequence file",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file"
        ],
        "ocsp": [
          "ocsp: Use -help for summary.",
          "Usage: ocsp [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output filename",
          "-timeout +int",
          "Connection timeout (in seconds) to the OCSP responder",
          "-url val",
          "Responder URL",
          "-host val",
          "TCP/IP hostname:port to connect to",
          "-port +int",
          "Port to run responder on",
          "-ignore_err",
          "Ignore error on OCSP request or response and continue running",
          "-noverify",
          "Don't verify response at all",
          "-nonce",
          "Add OCSP nonce to request",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-multi +int",
          "run multiple responder processes",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-no_chain",
          "Don't chain verify response",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_explicit",
          "Do not explicitly check the chain, just verify the root",
          "-trust_other",
          "Don't verify additional certificates",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-badsig",
          "Corrupt last byte of loaded OSCP response signature (for test)",
          "-text",
          "Print text form of request and response",
          "-req_text",
          "Print text form of request",
          "-resp_text",
          "Print text form of response",
          "-reqin val",
          "File with the DER-encoded request",
          "-respin val",
          "File with the DER-encoded response",
          "-signer infile",
          "Certificate to sign OCSP request with",
          "-VAfile infile",
          "Validator certificates file",
          "-sign_other infile",
          "Additional certificates to include in signed request",
          "-verify_other infile",
          "Additional certificates to search for signer",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath infile",
          "Trusted certificates directory",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-validity_period ulong",
          "Maximum validity discrepancy in seconds",
          "-status_age +int",
          "Maximum status age in seconds",
          "-signkey val",
          "Private key to sign OCSP request with",
          "-reqout val",
          "Output file for the DER-encoded request",
          "-respout val",
          "Output file for the DER-encoded response",
          "-path val",
          "Path to use in OCSP request",
          "-issuer infile",
          "Issuer certificate",
          "-cert infile",
          "Certificate to check",
          "-serial val",
          "Serial number to check",
          "-index infile",
          "Certificate status index file",
          "-CA infile",
          "CA certificate",
          "-nmin +int",
          "Number of minutes before next update",
          "-nrequest +int",
          "Number of requests to accept (default unlimited)",
          "-ndays +int",
          "Number of days before next update",
          "-rsigner infile",
          "Responder certificate to sign responses with",
          "-rkey infile",
          "Responder key to sign responses with",
          "-rother infile",
          "Other certificates to include in response",
          "-rmd val",
          "Digest Algorithm to use in signature of OCSP response",
          "-rsigopt val",
          "OCSP response signature parameter in n:v form",
          "-header val",
          "key=value header to add",
          "-*",
          "Any supported digest algorithm (sha1,sha256, ... )",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates"
        ],
        "passwd": [
          "5w67HqGiqdvhM",
          "Usage: passwd [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Read passwords from file",
          "-noverify",
          "Never verify when reading password from terminal",
          "-quiet",
          "No warnings",
          "-table",
          "Format output as table",
          "-reverse",
          "Switch table columns",
          "-salt val",
          "Use provided salt",
          "-stdin",
          "Read passwords from stdin",
          "-6",
          "SHA512-based password algorithm",
          "-5",
          "SHA256-based password algorithm",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-1",
          "MD5-based password algorithm",
          "-aixmd5",
          "AIX MD5-based password algorithm",
          "-crypt",
          "Standard Unix password algorithm (default)",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file"
        ],
        "pkcs12": [
          "pkcs12: Use -help for summary.",
          "Usage: pkcs12 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-nokeys",
          "Don't output private keys",
          "-keyex",
          "Set MS key exchange type",
          "-keysig",
          "Set MS key signature type",
          "-nocerts",
          "Don't output certificates",
          "-clcerts",
          "Only output client certificates",
          "-cacerts",
          "Only output CA certificates",
          "-noout",
          "Don't output anything, just verify",
          "-info",
          "Print info about PKCS#12 structure",
          "-chain",
          "Add certificate chain",
          "-twopass",
          "Separate MAC, encryption passwords",
          "-nomacver",
          "Don't verify MAC",
          "-descert",
          "Encrypt output with 3DES (default RC2-40)",
          "-certpbe val",
          "Certificate PBE algorithm (default RC2-40)",
          "-export",
          "Output PKCS12 file",
          "-noiter",
          "Don't use encryption iteration",
          "-maciter",
          "Use MAC iteration",
          "-nomaciter",
          "Don't use MAC iteration",
          "-nomac",
          "Don't generate MAC",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-nodes",
          "Don't encrypt private keys",
          "-macalg val",
          "Digest algorithm used in MAC (default SHA1)",
          "-keypbe val",
          "Private key PBE algorithm (default 3DES)",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-inkey val",
          "Private key if not infile",
          "-certfile infile",
          "Load certs from file",
          "-name val",
          "Use name as friendly name",
          "-CSP val",
          "Microsoft CSP name",
          "-caname val",
          "Use name as CA friendly name (can be repeated)",
          "-in infile",
          "Input filename",
          "-out outfile",
          "Output filename",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-password val",
          "Set import/export password source",
          "-CApath dir",
          "PEM-format directory of CA's",
          "-CAfile infile",
          "PEM-format file of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkcs7": [
          "pkcs7: Use -help for summary.",
          "Usage: pkcs7 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-in infile",
          "Input file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't output encoded data",
          "-text",
          "Print full details of certificates",
          "-print",
          "Print out all fields of the PKCS7 structure",
          "-print_certs",
          "Print_certs",
          "print any certs or crl in the input",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "pkcs8": [
          "pkcs8: Use -help for summary.",
          "Usage: pkcs8 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format (DER or PEM)",
          "-outform PEM|DER",
          "Output format (DER or PEM)",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-topk8",
          "Output PKCS8 file",
          "-noiter",
          "Use 1 as iteration count",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-v2 val",
          "Use PKCS#5 v2.0 and cipher",
          "-v1 val",
          "Use PKCS#5 v1.5 and cipher",
          "-v2prf val",
          "Set the PRF algorithm to use with PKCS#5 v2.0",
          "-iter +int",
          "Specify the iteration count",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-traditional",
          "use traditional format private key",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-scrypt",
          "Use scrypt algorithm",
          "-scrypt_N val",
          "Set scrypt N parameter",
          "-scrypt_r val",
          "Set scrypt r parameter",
          "-scrypt_p val",
          "Set scrypt p parameter"
        ],
        "pkey": [
          "pkey: Use -help for summary.",
          "Usage: pkey [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format (DER or PEM)",
          "-outform PEM|DER",
          "Output format (DER or PEM)",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-in val",
          "Input key",
          "-out outfile",
          "Output file",
          "-pubin",
          "Read public key from input (default is private key)",
          "-pubout",
          "Output public key, not private",
          "-text_pub",
          "Only output public key components",
          "-text",
          "Output in plaintext as well",
          "-noout",
          "Don't output the key",
          "-*",
          "Any supported cipher",
          "-traditional",
          "Use traditional format for private keys",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-check",
          "Check key consistency",
          "-pubcheck",
          "Check public key consistency"
        ],
        "pkeyparam": [
          "pkeyparam: Use -help for summary.",
          "Usage: pkeyparam [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-text",
          "Print parameters as text",
          "-noout",
          "Don't output encoded parameters",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-check",
          "Check key param consistency"
        ],
        "pkeyutl": [
          "pkeyutl: Use -help for summary.",
          "Usage: pkeyutl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file - default stdin",
          "-out outfile",
          "Output file - default stdout",
          "-pubin",
          "Input is a public key",
          "-certin",
          "Input is a cert with a public key",
          "-asn1parse",
          "asn1parse the output data",
          "-hexdump",
          "Hex dump output",
          "-sign",
          "Sign input data with private key",
          "-verify",
          "Verify with public key",
          "-verifyrecover",
          "Verify with public key, recover original data",
          "-rev",
          "Reverse the order of the input buffer",
          "-encrypt",
          "Encrypt input data with public key",
          "-decrypt",
          "Decrypt input data with private key",
          "-derive",
          "Derive shared secret",
          "-kdf val",
          "Use KDF algorithm",
          "-kdflen +int",
          "KDF algorithm output length",
          "-sigfile infile",
          "Signature file (verify operation only)",
          "-inkey val",
          "Input private key file",
          "-peerkey val",
          "Peer key file used in key derivation",
          "-passin val",
          "Input file pass phrase source",
          "-peerform PEM|DER|ENGINE",
          "Peer key format - default PEM",
          "-keyform PEM|DER|ENGINE",
          "Private key format - default PEM",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for crypto operations"
        ],
        "prime": [
          "Failed to process value (help)",
          "Usage: prime [options] [number...]",
          "number Number to check for primality",
          "-help",
          "Display this summary",
          "-hex",
          "Hex output",
          "-generate",
          "Generate a prime",
          "-bits +int",
          "Size of number in bits",
          "-safe",
          "When used with -generate, generate a safe prime",
          "-checks +int",
          "Number of checks"
        ],
        "rand": [
          "rand: Can't parse \"help\" as a number",
          "Usage: rand [flags] num",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output file",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-base64",
          "Base64 encode output",
          "-hex",
          "Hex encode output",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "rehash": [
          "Skipping help, can't write",
          "Usage: rehash [options] [cert-directory...]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-h",
          "-compat",
          "Create both new- and old-style hash links",
          "-old",
          "Use old-style hash to generate links",
          "-n",
          "Do not remove existing links",
          "-v",
          "Verbose output"
        ],
        "req": [
          "req: Use -help for summary.",
          "Usage: req [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-key val",
          "Private key to use",
          "-keyform format",
          "Key file format",
          "-pubkey",
          "Output public key",
          "-new",
          "New request",
          "-config infile",
          "Request template file",
          "-keyout outfile",
          "File to send the key to",
          "-passin val",
          "Private key password source",
          "-passout val",
          "Output file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-newkey val",
          "Specify as type:bits",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-batch",
          "Do not ask anything during request generation",
          "-newhdr",
          "Output \"NEW\" in the header lines",
          "-modulus",
          "RSA modulus",
          "-verify",
          "Verify signature on REQ",
          "-nodes",
          "Don't encrypt the output key",
          "-noout",
          "Do not output REQ",
          "-verbose",
          "Verbose output",
          "-utf8",
          "Input characters are UTF8 (default ASCII)",
          "-nameopt val",
          "Various certificate name options",
          "-reqopt val",
          "Various request text options",
          "-text",
          "Text form of request",
          "-x509",
          "Output a x509 structure instead of a cert request",
          "(Required by some CA's)",
          "-subj val",
          "Set or modify request subject",
          "-subject",
          "Output the request's subject",
          "-multivalue-rdn",
          "Enable support for multivalued RDNs",
          "-days +int",
          "Number of days cert is valid for",
          "-set_serial val",
          "Serial number to use",
          "-addext val",
          "Additional cert extension key=value pair (may be given more than once)",
          "-extensions val",
          "Cert extension section (override value in config file)",
          "-reqexts val",
          "Request extension section (override value in config file)",
          "-precert",
          "Add a poison extension (implies -new)",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-keygen_engine val",
          "Specify engine to be used for key generation operations"
        ],
        "rsa": [
          "rsa: Use -help for summary.",
          "Usage: rsa [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format, one of DER PEM",
          "-outform format",
          "Output format, one of DER PEM PVK",
          "-in val",
          "Input file",
          "-out outfile",
          "Output file",
          "-pubin",
          "Expect a public key in input file",
          "-pubout",
          "Output a public key",
          "-passout val",
          "Output file pass phrase source",
          "-passin val",
          "Input file pass phrase source",
          "-RSAPublicKey_in",
          "Input is an RSAPublicKey",
          "-RSAPublicKey_out",
          "Output is an RSAPublicKey",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the RSA key modulus",
          "-check",
          "Verify key consistency",
          "-*",
          "Any supported cipher",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "rsautl": [
          "rsautl: Use -help for summary.",
          "Usage: rsautl [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-inkey val",
          "Input key",
          "-keyform PEM|DER|ENGINE",
          "Private key format - default PEM",
          "-pubin",
          "Input is an RSA public",
          "-certin",
          "Input is a cert carrying an RSA public key",
          "-ssl",
          "Use SSL v2 padding",
          "-raw",
          "Use no padding",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-oaep",
          "Use PKCS#1 OAEP",
          "-sign",
          "Sign with private key",
          "-verify",
          "Verify with public key",
          "-asn1parse",
          "Run output through asn1parse; useful with -verify",
          "-hexdump",
          "Hex dump output",
          "-x931",
          "Use ANSI X9.31 padding",
          "-rev",
          "Reverse the order of the input buffer",
          "-encrypt",
          "Encrypt with public key",
          "-decrypt",
          "Decrypt with private key",
          "-passin val",
          "Input file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "s_client": [
          "0:error:2008F002:BIO routines:BIO_lookup_ex:system lib:crypto/bio/b_addr.c:730:Temporary failure in name resolution",
          "connect:errno=11",
          "Usage: s_client [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-host val",
          "Use -connect instead",
          "-port +int",
          "-connect val",
          "TCP/IP where to connect (default is :4433)",
          "-bind val",
          "bind local address for connection",
          "-proxy val",
          "Connect to via specified proxy to the real server",
          "-unix val",
          "Connect over the specified Unix-domain socket",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-verify +int",
          "Turn on peer certificate verification",
          "-cert infile",
          "Certificate file to use, PEM format assumed",
          "-certform PEM|DER",
          "Certificate format (PEM or DER) PEM default",
          "-nameopt val",
          "Various certificate name options",
          "-key val",
          "Private key file to use, if not in -cert file",
          "-keyform PEM|DER|ENGINE",
          "Key format (PEM, DER or engine) PEM default",
          "-pass val",
          "Private key file pass phrase source",
          "-CApath dir",
          "PEM format directory of CA's",
          "-CAfile infile",
          "PEM format file of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-requestCAfile infile",
          "PEM format file of CA names to send to the server",
          "-dane_tlsa_domain val",
          "DANE TLSA base domain",
          "-dane_tlsa_rrdata val",
          "DANE TLSA rrdata presentation form",
          "-dane_ee_no_namechecks",
          "Disable name checks when matching DANE-EE(3) TLSA records",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-showcerts",
          "Show all certificates sent by the server",
          "-debug",
          "Extra output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-nbio_test",
          "More ssl protocol testing",
          "-state",
          "Print the ssl states",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-quiet",
          "No s_client output",
          "-ign_eof",
          "Ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "Don't ignore input eof",
          "-starttls val",
          "Use the appropriate STARTTLS command before starting TLS",
          "-xmpphost val",
          "Alias of -name option for \"-starttls xmpp[-server]\"",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-sess_out outfile",
          "File to write SSL session to",
          "-sess_in infile",
          "File to read SSL session from",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material (default 20)",
          "-maxfraglen +int",
          "Enable Maximum Fragment Length Negotiation (len values: 512, 1024, 2048 and 4096)",
          "-fallback_scsv",
          "Send the fallback SCSV",
          "-name val",
          "Hostname to use for \"-starttls lmtp\", \"-starttls smtp\" or \"-starttls xmpp[-server]\"",
          "-CRL infile",
          "CRL file to use",
          "-crl_download",
          "Download CRL from distribution points",
          "-CRLform PEM|DER",
          "CRL format (PEM or DER) PEM is default",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "Restrict verify output to errors",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-prexit",
          "Print session information when the program exits",
          "-security_debug",
          "Enable security debug messages",
          "-security_debug_verbose",
          "Output more security debug output",
          "-cert_chain infile",
          "Certificate chain file (in PEM format)",
          "-chainCApath dir",
          "Use dir as certificate store path to build CA certificate chain",
          "-verifyCApath dir",
          "Use dir as certificate store path to verify CA certificate",
          "-build_chain",
          "Build certificate chain",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-nocommands",
          "Do not use interactive command letters",
          "-servername val",
          "Set TLS extension servername (SNI) in ClientHello (default)",
          "-noservername",
          "Do not send the server name (SNI) extension in the ClientHello",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-status",
          "Request certificate status from server",
          "-serverinfo val",
          "types",
          "Send empty ClientHello extensions (comma-separated numbers)",
          "-alpn val",
          "Enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-async",
          "Support asynchronous operation",
          "-ssl_config val",
          "Use specified configuration file",
          "-max_send_frag +int",
          "Maximum Size of send frames",
          "-split_send_frag +int",
          "Size used to split data for encrypt pipelines",
          "-max_pipelines +int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-read_buf +int",
          "Default read buffer size to be used for connections",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-allow_no_dhe_kex",
          "In TLSv1.3 allow non-(ec)dhe based key exchange on resumption",
          "-prioritize_chacha",
          "Prioritize ChaCha ciphers when preferred by clients",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-groups val",
          "Groups to advertise (colon-separated list)",
          "-curves val",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-record_padding val",
          "Block size to pad TLS 1.3 records to.",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-no_middlebox",
          "Disable TLSv1.3 middlebox compat mode",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM or DER) PEM default",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (PEM or DER) PEM default",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-dtls",
          "Use any version of DTLS",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-mtu +int",
          "Set the link layer MTU",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-nbio",
          "Use non-blocking IO",
          "-psk_identity val",
          "PSK identity",
          "-psk val",
          "PSK in hex (without 0x)",
          "-psk_session infile",
          "File to read PSK SSL session from",
          "-srpuser val",
          "SRP authentication for 'user'",
          "-srppass val",
          "Password for 'user'",
          "-srp_lateuser",
          "SRP username into second ClientHello message",
          "-srp_moregroups",
          "Tolerate other than the known g N values.",
          "-srp_strength +int",
          "Minimal length in bits for N",
          "-nextprotoneg val",
          "Enable NPN extension, considering named protocols supported (comma-separated list)",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-ssl_client_engine val",
          "Specify engine to be used for client certificate operations",
          "-ct",
          "Request and parse SCTs (also enables OCSP stapling)",
          "-noct",
          "Do not request or parse SCTs (default)",
          "-ctlogfile infile",
          "CT log list CONF file",
          "-keylogfile outfile",
          "Write TLS secrets to file",
          "-early_data infile",
          "File to send as early data",
          "-enable_pha",
          "Enable post-handshake-authentication"
        ],
        "s_server": [
          "Can't open server.pem for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:69:fopen('server.pem','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:76:",
          "unable to load server certificate private key file",
          "Usage: s_server [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-port +int",
          "TCP/IP port to listen on for connections (default is 4433)",
          "-accept val",
          "TCP/IP optional host and port to listen on for connections (default is *:4433)",
          "-unix val",
          "Unix domain socket to accept on",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-unlink",
          "For -unix, unlink existing socket first",
          "-context val",
          "Set session ID context",
          "-verify int",
          "Turn on peer certificate verification",
          "-Verify int",
          "Turn on peer certificate verification, must have a cert",
          "-cert infile",
          "Certificate file to use; default is server.pem",
          "-nameopt val",
          "Various certificate name options",
          "-naccept +int",
          "Terminate after #num connections",
          "-serverinfo val",
          "PEM serverinfo file for certificate",
          "-certform PEM|DER",
          "Certificate format (PEM or DER) PEM default",
          "-key val",
          "Private Key if not in -cert; default is server.pem",
          "-keyform format",
          "Key format (PEM, DER or ENGINE) PEM default",
          "-pass val",
          "Private key file pass phrase source",
          "-dcert infile",
          "Second certificate file to use (usually for DSA)",
          "-dhparam infile",
          "DH parameters file to use",
          "-dcertform PEM|DER",
          "Second certificate format (PEM or DER) PEM default",
          "-dkey infile",
          "Second private key file to use (usually for DSA)",
          "-dkeyform PEM|DER",
          "Second key format (PEM, DER or ENGINE) PEM default",
          "-dpass val",
          "Second private key file pass phrase source",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-debug",
          "Print more output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-state",
          "Print the SSL states",
          "-CAfile infile",
          "PEM format file of CA's",
          "-CApath dir",
          "PEM format directory of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-quiet",
          "No server output",
          "-no_resume_ephemeral",
          "Disable caching and tickets if ephemeral (EC)DH is used",
          "-www",
          "Respond to a 'GET /' with a status page",
          "-WWW",
          "Respond to a 'GET with the file ./path",
          "-servername val",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "mismatch send fatal alert (default warning alert)",
          "-cert2 infile",
          "Certificate file to use for servername; default isserver2.pem",
          "-key2 infile",
          "-Private Key file to use for servername if not in -cert2",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-HTTP",
          "Like -WWW but ./path includes HTTP headers",
          "-id_prefix val",
          "Generate SSL/TLS session IDs prefixed by arg",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material (default 20)",
          "-CRL infile",
          "CRL file to use",
          "-crl_download",
          "Download CRL from distribution points",
          "-cert_chain infile",
          "certificate chain file in PEM format",
          "-dcert_chain infile",
          "second certificate chain file in PEM format",
          "-chainCApath dir",
          "use dir as certificate store path to build CA certificate chain",
          "-verifyCApath dir",
          "use dir as certificate store path to verify CA certificate",
          "-no_cache",
          "Disable session cache",
          "-ext_cache",
          "Disable internal cache, setup and use external cache",
          "-CRLform PEM|DER",
          "CRL format (PEM or DER) PEM is default",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "No verify output except verify errors",
          "-build_chain",
          "Build certificate chain",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-ign_eof",
          "ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "Do not ignore input eof",
          "-status",
          "Request certificate status from server",
          "-status_verbose",
          "Print more output in certificate status callback",
          "-status_timeout int",
          "Status request responder timeout",
          "-status_url val",
          "Status request fallback URL",
          "-status_file infile",
          "File containing DER encoded OCSP Response",
          "-security_debug",
          "Print output from SSL/TLS security framework",
          "-security_debug_verbose",
          "Print more output from SSL/TLS security framework",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-rev",
          "act as a simple test server which just sends back with the received text reversed",
          "-async",
          "Operate in asynchronous mode",
          "-ssl_config val",
          "Configure SSL_CTX using the configuration 'val'",
          "-max_send_frag +int",
          "Maximum Size of send frames",
          "-split_send_frag +int",
          "Size used to split data for encrypt pipelines",
          "-max_pipelines +int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-read_buf +int",
          "Default read buffer size to be used for connections",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-allow_no_dhe_kex",
          "In TLSv1.3 allow non-(ec)dhe based key exchange on resumption",
          "-prioritize_chacha",
          "Prioritize ChaCha ciphers when preferred by clients",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-groups val",
          "Groups to advertise (colon-separated list)",
          "-curves val",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-record_padding val",
          "Block size to pad TLS 1.3 records to.",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-no_middlebox",
          "Disable TLSv1.3 middlebox compat mode",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM or DER) PEM default",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (PEM or DER) PEM default",
          "-nbio",
          "Use non-blocking IO",
          "-psk_identity val",
          "PSK identity to expect",
          "-psk_hint val",
          "PSK identity hint to use",
          "-psk val",
          "PSK in hex (without 0x)",
          "-psk_session infile",
          "File to read PSK SSL session from",
          "-srpvfile infile",
          "The verifier file for SRP",
          "-srpuserseed val",
          "A seed string for a default user salt",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "just talk TLSv1.2",
          "-tls1_3",
          "just talk TLSv1.3",
          "-dtls",
          "Use any DTLS version",
          "-timeout",
          "Enable timeouts",
          "-mtu +int",
          "Set link layer MTU",
          "-listen",
          "Listen for a DTLS ClientHello with a cookie and then connect",
          "-stateless",
          "Require TLSv1.3 cookies",
          "-dtls1",
          "Just talk DTLSv1",
          "-dtls1_2",
          "Just talk DTLSv1.2",
          "-no_dhe",
          "Disable ephemeral DH",
          "-nextprotoneg val",
          "Set the advertised protocols for the NPN extension (comma-separated list)",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-alpn val",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-keylogfile outfile",
          "Write TLS secrets to file",
          "-max_early_data int",
          "The maximum number of bytes of early data as advertised in tickets",
          "-recv_max_early_data int",
          "The maximum number of bytes of early data (hard limit)",
          "-early_data",
          "Attempt to read early data",
          "-num_tickets int",
          "The number of TLSv1.3 session tickets that a server will automatically",
          "issue",
          "-anti_replay",
          "Switch on anti-replay protection (default)",
          "-no_anti_replay",
          "Switch off anti-replay protection"
        ],
        "s_time": [
          "s_time: Use -help for summary.",
          "Usage: s_time [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-connect val",
          "Where to connect as post:port (default is localhost:4433)",
          "-cipher val",
          "TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-cert infile",
          "Cert file to use, PEM format assumed",
          "-nameopt val",
          "Various certificate name options",
          "-key infile",
          "File with key, PEM; default is -cert file",
          "-CApath dir",
          "PEM format directory of CA's",
          "-cafile infile",
          "PEM format file of CA's",
          "-CAfile infile",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-new",
          "Just time new connections",
          "-reuse",
          "Just time connection reuse",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-verify +int",
          "Turn on peer certificate verification, set depth",
          "-time +int",
          "Seconds to collect data, default 30",
          "-www val",
          "Fetch specified page from the site"
        ],
        "sess_id": [
          "sess_id: Use -help for summary.",
          "Usage: sess_id [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "-outform format",
          "Output format - default PEM (PEM, DER or NSS)",
          "-in val",
          "Input file - default stdin",
          "-out outfile",
          "Output file - default stdout",
          "-text",
          "Print ssl session id details",
          "-cert",
          "Output certificate",
          "-noout",
          "Don't output the encoded session info",
          "-context val",
          "Set the session ID context"
        ],
        "smime": [
          "smime: Use -help for summary.",
          "Usage: smime [options] cert.pem...",
          "cert.pem... recipient certs for encryption",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-verify",
          "Verify signed message",
          "-pk7out",
          "Output PKCS#7 structure",
          "-nointern",
          "Don't search certificates in message for signer",
          "-nosigs",
          "Don't verify message signature",
          "-noverify",
          "Don't verify signers certificate",
          "-nocerts",
          "Don't include signers certificate when signing",
          "-nodetach",
          "Use opaque signing",
          "-noattr",
          "Don't include any signed attributes",
          "-binary",
          "Don't translate message to text",
          "-certfile infile",
          "Other certificates file",
          "-signer val",
          "Signer certificate file",
          "-recip infile",
          "Recipient certificate file for decryption",
          "-in infile",
          "Input file",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-keyform format",
          "Input private key format (PEM or ENGINE)",
          "-out outfile",
          "Output file",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-content infile",
          "Supply or override content for detached signature",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "-text",
          "Include or delete text MIME headers",
          "-CApath dir",
          "Trusted certificates directory",
          "-CAfile infile",
          "Trusted certificates file",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-resign",
          "Resign a signed message",
          "-nochain",
          "set PKCS7_NOCHAIN so certificates contained in the message are not used as untrusted CAs",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-passin val",
          "Input file pass phrase source",
          "-md val",
          "Digest algorithm to use when signing or resigning",
          "-*",
          "Any supported cipher",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "speed": [
          "speed: Unknown algorithm help",
          "Usage: speed [options] ciphers...",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-evp val",
          "Use EVP-named cipher or digest",
          "-decrypt",
          "Time decryption instead of encryption (only EVP)",
          "-aead",
          "Benchmark EVP-named AEAD cipher in TLS-like sequence",
          "-mb",
          "Enable (tls1>=1) multi-block mode on EVP-named cipher",
          "-mr",
          "Produce machine readable output",
          "-multi +int",
          "Run benchmarks in parallel",
          "-async_jobs +int",
          "Enable async mode and start specified number of jobs",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-elapsed",
          "Use wall-clock time instead of CPU user time as divisor",
          "-primes +int",
          "Specify number of primes (for RSA only)",
          "-seconds +int",
          "Run benchmarks for specified amount of seconds",
          "-bytes +int",
          "Run [non-PKI] benchmarks on custom-sized buffer",
          "-misalign +int",
          "Use specified offset to mis-align buffers"
        ],
        "spkac": [
          "spkac: Use -help for summary.",
          "Usage: spkac [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-key infile",
          "Create SPKAC using private key",
          "-keyform format",
          "Private key file format - default PEM (PEM, DER, or ENGINE)",
          "-passin val",
          "Input file pass phrase source",
          "-challenge val",
          "Challenge string",
          "-spkac val",
          "Alternative SPKAC name",
          "-noout",
          "Don't print SPKAC",
          "-pubkey",
          "Output public key",
          "-verify",
          "Verify SPKAC signature",
          "-spksect val",
          "Specify the name of an SPKAC-dedicated section of configuration",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "srp": [
          "Exactly one of the options -add, -delete, -modify -list must be specified.",
          "srp: Use -help for summary.",
          "Usage: srp [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Talk a lot while doing things",
          "-config infile",
          "A config file",
          "-name val",
          "The particular srp definition to use",
          "-srpvfile infile",
          "The srp verifier file name",
          "-add",
          "Add a user and srp verifier",
          "-modify",
          "Modify the srp verifier of an existing user",
          "-delete",
          "Delete user from verifier file",
          "-list",
          "List users",
          "-gn val",
          "Set g and N values to be used for new verifier",
          "-userinfo val",
          "Additional info to be set for user",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device"
        ],
        "storeutl": [
          "Couldn't open file or uri help",
          "0:error:02016002:system library:stat:No such file or directory:crypto/store/loader_file.c:864:help",
          "Usage: storeutl [options] uri",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-out outfile",
          "Output file - default stdout",
          "-passin val",
          "Input file pass phrase source",
          "-text",
          "Print a text form of the objects",
          "-noout",
          "No PEM output, just status",
          "-certs",
          "Search for certificates only",
          "-keys",
          "Search for keys only",
          "-crls",
          "Search for CRLs only",
          "-subject val",
          "Search by subject",
          "-issuer val",
          "Search by issuer and serial, issuer name",
          "-serial val",
          "Search by issuer and serial, serial number",
          "-fingerprint val",
          "Search by public key fingerprint, given in hex",
          "-alias val",
          "Search by alias",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-r",
          "Recurse through names"
        ],
        "ts": [
          "ts: Use -help for summary.",
          "Usage: ts [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-config infile",
          "Configuration file",
          "-section val",
          "Section to use within config file",
          "-query",
          "Generate a TS query",
          "-data infile",
          "File to hash",
          "-digest val",
          "Digest (as a hex string)",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-tspolicy val",
          "Policy OID to use",
          "-no_nonce",
          "Do not include a nonce",
          "-cert",
          "Put cert request into query",
          "-in infile",
          "Input file",
          "-token_in",
          "Input is a PKCS#7 file",
          "-out outfile",
          "Output file",
          "-token_out",
          "Output is a PKCS#7 file",
          "-text",
          "Output text (not DER)",
          "-reply",
          "Generate a TS reply",
          "-queryfile infile",
          "File containing a TS query",
          "-passin val",
          "Input file pass phrase source",
          "-inkey val",
          "File with private key for reply",
          "-signer val",
          "Signer certificate file",
          "-chain infile",
          "File with signer CA chain",
          "-verify",
          "Verify a TS response",
          "-CApath dir",
          "Path to trusted CA files",
          "-CAfile infile",
          "File with trusted CA certs",
          "-untrusted infile",
          "File with untrusted certs",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Options specific to 'ts -verify':",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Typical uses:",
          "ts -query [-rand file...] [-config file] [-data file]",
          "[-digest hexstring] [-tspolicy oid] [-no_nonce] [-cert]",
          "[-in file] [-out file] [-text]",
          "or",
          "ts -reply [-config file] [-section tsa_section]",
          "[-queryfile file] [-passin password]",
          "[-signer tsa_cert.pem] [-inkey private_key.pem]",
          "[-chain certs_file.pem] [-tspolicy oid]",
          "[-in file] [-token_in] [-out file] [-token_out]",
          "[-text] [-engine id]",
          "ts -verify -CApath dir -CAfile file.pem -untrusted file.pem",
          "[-data file] [-digest hexstring]",
          "[-queryfile file] -in file [-token_in]",
          "[[options specific to 'ts -verify']]"
        ],
        "verify": [
          "Can't open help for reading, No such file or directory",
          "0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:69:fopen('help','r')",
          "0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:76:",
          "unable to load certificate",
          "Usage: verify [options] cert.pem...",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-verbose",
          "Print extra information about the operations being performed.",
          "-CApath dir",
          "A directory of trusted certificates",
          "-CAfile infile",
          "A file of trusted certificates",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-untrusted infile",
          "A file of untrusted certificates",
          "-trusted infile",
          "-CRLfile infile",
          "File containing one or more CRL's (in PEM format) to load",
          "-crl_download",
          "Attempt to download CRL information for this certificate",
          "-show_chain",
          "Display information about the certificate chain",
          "-nameopt val",
          "Various certificate name options",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Recognized usages:",
          "sslclient \tSSL client",
          "sslserver \tSSL server",
          "nssslserver\tNetscape SSL server",
          "smimesign \tS/MIME signing",
          "smimeencrypt\tS/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper\tOCSP helper",
          "timestampsign\tTime Stamp signing",
          "Recognized verify names:",
          "default",
          "",
          "pkcs7",
          "smime_sign",
          "ssl_client",
          "ssl_server"
        ],
        "version": [
          "Extra parameters given.",
          "version: Use -help for summary.",
          "Usage: version [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-a",
          "Show all data",
          "-b",
          "Show build date",
          "-d",
          "Show configuration directory",
          "-e",
          "Show engines directory",
          "-f",
          "Show compiler flags used",
          "-o",
          "Show some internal datatype options",
          "-p",
          "Show target build platform",
          "-r",
          "Show random seeding options",
          "-v",
          "Show library version"
        ],
        "x509": [
          "x509: Unknown parameter help",
          "x509: Use -help for summary.",
          "Usage: x509 [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-inform format",
          "Input format - default PEM (one of DER or PEM)",
          "-in infile",
          "Input file - default stdin",
          "-outform format",
          "Output format - default PEM (one of DER or PEM)",
          "-out outfile",
          "Output file - default stdout",
          "-keyform PEM|DER|ENGINE",
          "Private key format - default PEM",
          "-passin val",
          "Private key password/pass-phrase source",
          "-serial",
          "Print serial number value",
          "-subject_hash",
          "Print subject hash value",
          "-issuer_hash",
          "Print issuer hash value",
          "-hash",
          "Synonym for -subject_hash",
          "-subject",
          "Print subject DN",
          "-issuer",
          "Print issuer DN",
          "-email",
          "Print email address(es)",
          "-startdate",
          "Set notBefore field",
          "-enddate",
          "Set notAfter field",
          "-purpose",
          "Print out certificate purposes",
          "-dates",
          "Both Before and After dates",
          "-modulus",
          "Print the RSA key modulus",
          "-pubkey",
          "Output the public key",
          "-fingerprint",
          "Print the certificate fingerprint",
          "-alias",
          "Output certificate alias",
          "-noout",
          "No output, just status",
          "-nocert",
          "No certificate output",
          "-ocspid",
          "Print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "Print OCSP Responder URL(s)",
          "-trustout",
          "Output a trusted certificate",
          "-clrtrust",
          "Clear all trusted purposes",
          "-clrext",
          "Clear all certificate extensions",
          "-addtrust val",
          "Trust certificate for a given purpose",
          "-addreject val",
          "Reject certificate for a given purpose",
          "-setalias val",
          "Set certificate alias",
          "-days int",
          "How long till expiry of a signed certificate - def 30 days",
          "-checkend intmax",
          "Check whether the cert expires in the next arg seconds",
          "Exit 1 if so, 0 if not",
          "-signkey val",
          "Self sign cert with arg",
          "-x509toreq",
          "Output a certification request object",
          "-req",
          "Input is a certificate request, sign and output",
          "-CA infile",
          "Set the CA certificate, must be PEM format",
          "-CAkey val",
          "The CA key, must be PEM format; if not in CAfile",
          "-CAcreateserial",
          "Create serial number file if it does not exist",
          "-CAserial val",
          "Serial file",
          "-set_serial val",
          "Serial number to use",
          "-text",
          "Print the certificate in text form",
          "-ext val",
          "Print various X509V3 extensions",
          "-C",
          "Print out C code forms",
          "-extfile infile",
          "File with X509V3 extensions to add",
          "-rand val",
          "Load the file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-extensions val",
          "Section from config file to use",
          "-nameopt val",
          "Various certificate name options",
          "-certopt val",
          "Various certificate text options",
          "-checkhost val",
          "Check certificate matches host",
          "-checkemail val",
          "Check certificate matches email",
          "-checkip val",
          "Check certificate matches ipaddr",
          "-CAform PEM|DER",
          "CA format - default PEM",
          "-CAkeyform PEM|DER|ENGINE",
          "CA key format - default PEM",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-force_pubkey infile",
          "Force the Key to put inside certificate",
          "-next_serial",
          "Increment current certificate serial number",
          "-clrreject",
          "Clears all the prohibited or rejected uses of the certificate",
          "-badsig",
          "Corrupt last byte of certificate signature (for test)",
          "-*",
          "Any supported digest",
          "-subject_hash_old",
          "Print old-style (MD5) subject hash value",
          "-issuer_hash_old",
          "Print old-style (MD5) issuer hash value",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-preserve_dates",
          "preserve existing dates when signing"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "gendsa",
        "genpkey",
        "genrsa",
        "help",
        "list",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "rehash",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "srp",
        "storeutl",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "blake2b512",
        "blake2s256",
        "gost",
        "md4",
        "md5",
        "mdc2",
        "rmd160",
        "sha1",
        "sha224",
        "sha256",
        "sha3-224",
        "sha3-256",
        "sha3-384",
        "sha3-512",
        "sha384",
        "sha512",
        "sha512-224",
        "sha512-256",
        "shake128",
        "shake256",
        "sm3"
      ]
    },
    "3.0.1": {
      "ciphersAndEncoding": [
        "aes-128-cbc",
        "aes-128-ecb",
        "aes-192-cbc",
        "aes-192-ecb",
        "aes-256-cbc",
        "aes-256-ecb",
        "aria-128-cbc",
        "aria-128-cfb",
        "aria-128-cfb1",
        "aria-128-cfb8",
        "aria-128-ctr",
        "aria-128-ecb",
        "aria-128-ofb",
        "aria-192-cbc",
        "aria-192-cfb",
        "aria-192-cfb1",
        "aria-192-cfb8",
        "aria-192-ctr",
        "aria-192-ecb",
        "aria-192-ofb",
        "aria-256-cbc",
        "aria-256-cfb",
        "aria-256-cfb1",
        "aria-256-cfb8",
        "aria-256-ctr",
        "aria-256-ecb",
        "aria-256-ofb",
        "base64",
        "bf",
        "bf-cbc",
        "bf-cfb",
        "bf-ecb",
        "bf-ofb",
        "camellia-128-cbc",
        "camellia-128-ecb",
        "camellia-192-cbc",
        "camellia-192-ecb",
        "camellia-256-cbc",
        "camellia-256-ecb",
        "cast",
        "cast-cbc",
        "cast5-cbc",
        "cast5-cfb",
        "cast5-ecb",
        "cast5-ofb",
        "des",
        "des-cbc",
        "des-cfb",
        "des-ecb",
        "des-ede",
        "des-ede-cbc",
        "des-ede-cfb",
        "des-ede-ofb",
        "des-ede3",
        "des-ede3-cbc",
        "des-ede3-cfb",
        "des-ede3-ofb",
        "des-ofb",
        "des3",
        "desx",
        "idea",
        "idea-cbc",
        "idea-cfb",
        "idea-ecb",
        "idea-ofb",
        "rc2",
        "rc2-40-cbc",
        "rc2-64-cbc",
        "rc2-cbc",
        "rc2-cfb",
        "rc2-ecb",
        "rc2-ofb",
        "rc4",
        "rc4-40",
        "seed",
        "seed-cbc",
        "seed-cfb",
        "seed-ecb",
        "seed-ofb",
        "sm4-cbc",
        "sm4-cfb",
        "sm4-ctr",
        "sm4-ecb",
        "sm4-ofb"
      ],
      "commandArguments": {
        "asn1parse": [
          "asn1parse: Use -help for summary.",
          "Usage: asn1parse [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-oid infile",
          "file of extra oid definitions",
          "I/O options:",
          "-inform PEM|DER",
          "input format - one of DER PEM",
          "-in infile",
          "input file",
          "-out outfile",
          "output file (output format is always DER)",
          "-noout",
          "do not produce any output",
          "-offset +int",
          "offset into file",
          "-length +int",
          "length of section in file",
          "-strparse +int",
          "offset; a series of these can be used to 'dig'",
          "-genstr val",
          "string to generate ASN1 structure from",
          "into multiple ASN1 blob wrappings",
          "-genconf val",
          "file to generate ASN1 structure from",
          "-strictpem",
          "do not attempt base64 decode outside PEM markers",
          "-item val",
          "item to parse and print",
          "(-inform",
          "will be ignored)",
          "Formatting options:",
          "-i",
          "indents the output",
          "-dump",
          "unknown data in hex form",
          "-dlimit +int",
          "dump the first arg bytes of unknown data in hex form"
        ],
        "ca": [
          "Using configuration from /home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v3.0.1/ssl/openssl.cnf",
          "Could not open file or uri for loading CA private key from ./demoCA/private/cakey.pem",
          "00000000:error:16000069:STORE routines:ossl_store_get0_loader_int:unregistered scheme:crypto/store/store_register.c:237:scheme=file",
          "00000000:error:80000002:system library:file_open:No such file or directory:providers/implementations/storemgmt/file_store.c:269:calling stat(./demoCA/private/cakey.pem)",
          "Usage: ca [options] [certreq...]",
          "General options:",
          "-help",
          "Display this summary",
          "-verbose",
          "Verbose output during processing",
          "-outdir dir",
          "Where to put output cert",
          "-in infile",
          "The input cert request(s)",
          "-inform PEM|DER",
          "CSR input format (DER or PEM); default PEM",
          "-infiles",
          "The last argument, requests to process",
          "-out outfile",
          "Where to put the output file(s)",
          "-dateopt val",
          "Datetime format used for printing. (rfc_822/iso_8601). Default is rfc_822.",
          "-notext",
          "Do not print the generated certificate",
          "-batch",
          "Don't ask questions",
          "-msie_hack",
          "msie modifications to handle all Universal Strings",
          "-ss_cert infile",
          "File contains a self signed cert to sign",
          "-spkac infile",
          "File contains DN and signed public key and challenge",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Configuration options:",
          "-config val",
          "A config file",
          "-name val",
          "The particular CA definition to use",
          "-section val",
          "An alias for -name",
          "-policy val",
          "The CA 'policy' to support",
          "Certificate options:",
          "-subj val",
          "Use arg instead of request's subject",
          "-utf8",
          "Input characters are UTF8; default ASCII",
          "-create_serial",
          "If reading serial fails, create a new random serial",
          "-rand_serial",
          "Always create a random serial; do not store it",
          "-multivalue-rdn",
          "Deprecated; multi-valued RDNs support is always on.",
          "-startdate val",
          "Cert notBefore, YYMMDDHHMMSSZ",
          "-enddate val",
          "YYMMDDHHMMSSZ cert notAfter (overrides -days)",
          "-days +int",
          "Number of days to certify the cert for",
          "-extensions val",
          "Extension section (override value in config file)",
          "-extfile infile",
          "Configuration file with X509v3 extensions to add",
          "-preserveDN",
          "Don't re-order the DN",
          "-noemailDN",
          "Don't add the EMAIL field to the DN",
          "Signing options:",
          "-md val",
          "Digest to use, such as sha256",
          "-keyfile val",
          "The CA private key",
          "-keyform format",
          "Private key file format (ENGINE, other values ignored)",
          "-passin val",
          "Key and cert input file pass phrase source",
          "-key val",
          "Key to decrypt the private key or cert files if encrypted. Better use -passin",
          "-cert infile",
          "The CA cert",
          "-certform PEM|DER",
          "Certificate input format (DER/PEM/P12); has no effect",
          "-selfsign",
          "Sign a cert with the key associated with it",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-vfyopt val",
          "Verification parameter in n:v form",
          "Revocation options:",
          "-gencrl",
          "Generate a new CRL",
          "-valid val",
          "Add a Valid(not-revoked) DB entry about a cert (given in file)",
          "-status val",
          "Shows cert status given the serial number",
          "-updatedb",
          "Updates db for expired cert",
          "-crlexts val",
          "CRL extension section (override value in config file)",
          "-crl_reason val",
          "revocation reason",
          "-crl_hold val",
          "the hold instruction, an OID. Sets revocation reason to certificateHold",
          "-crl_compromise val",
          "sets compromise time to val and the revocation reason to keyCompromise",
          "-crl_CA_compromise val",
          "sets compromise time to val and the revocation reason to CACompromise",
          "-crl_lastupdate val",
          "Sets the CRL lastUpdate time to val (YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ)",
          "-crl_nextupdate val",
          "Sets the CRL nextUpdate time to val (YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ)",
          "-crldays +int",
          "Days until the next CRL is due",
          "-crlhours +int",
          "Hours until the next CRL is due",
          "-crlsec +int",
          "Seconds until the next CRL is due",
          "-revoke infile",
          "Revoke a cert (given in file)",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "certreq",
          "Certificate requests to be signed (optional)"
        ],
        "ciphers": [
          "Error in cipher list",
          "00000000:error:0A0000B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match:ssl/ssl_lib.c:2731:",
          "Usage: ciphers [options] [cipher]",
          "General options:",
          "-help",
          "Display this summary",
          "Output options:",
          "-v",
          "Verbose listing of the SSL/TLS ciphers",
          "-V",
          "Even more verbose",
          "-stdname",
          "Show standard cipher names",
          "-convert val",
          "Convert standard name into OpenSSL name",
          "Cipher specification options:",
          "-s",
          "Only supported ciphers",
          "-tls1",
          "Ciphers compatible with TLS1",
          "-tls1_1",
          "Ciphers compatible with TLS1.1",
          "-tls1_2",
          "Ciphers compatible with TLS1.2",
          "-tls1_3",
          "Ciphers compatible with TLS1.3",
          "-psk",
          "Include ciphersuites requiring PSK",
          "-srp",
          "(deprecated) Include ciphersuites requiring SRP",
          "-ciphersuites val",
          "Configure the TLSv1.3 ciphersuites to use",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "cipher",
          "Cipher string to decode (optional)"
        ],
        "cmp": [
          "cmp_main:apps/cmp.c:2737:CMP info: using section(s) 'cmp' of OpenSSL configuration file '/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v3.0.1/ssl/openssl.cnf'",
          "cmp_main:apps/cmp.c:2745:CMP info: no [cmp] section found in config file '/home/jfroehle/Documents/github/dexus/pem/openssl/openssl_v3.0.1/ssl/openssl.cnf'; will thus use just [default] and unnamed section if present",
          "cmp: Use -help for summary.",
          "Usage: cmp [options]",
          "Valid options are:",
          "-help",
          "Display this summary",
          "-config val",
          "Configuration file to use. \"\" = none. Default from env variable OPENSSL_CONF",
          "-section val",
          "Section(s) in config file to get options from. \"\" = 'default'. Default 'cmp'",
          "-verbosity nonneg",
          "Log level; 3=ERR, 4=WARN, 6=INFO, 7=DEBUG, 8=TRACE. Default 6 = INFO",
          "Generic message options:",
          "-cmd val",
          "CMP request to send: ir/cr/kur/p10cr/rr/genm",
          "-infotype val",
          "InfoType name for requesting specific info in genm, e.g. 'signKeyPairTypes'",
          "-geninfo val",
          "generalInfo integer values to place in request PKIHeader with given OID",
          "specified in the form <OID>:int:<n>, e.g. \"1.2.3.4:int:56789\"",
          "Certificate enrollment options:",
          "-newkey val",
          "Private or public key for the requested cert. Default: CSR key or client key",
          "-newkeypass val",
          "New private key pass phrase source",
          "-subject val",
          "Distinguished Name (DN) of subject to use in the requested cert template",
          "For kur, default is subject of -csr arg or else of reference cert (see -oldcert)",
          "this default is used for ir and cr only if no Subject Alt Names are set",
          "-issuer val",
          "DN of the issuer to place in the requested certificate template",
          "also used as recipient if neither -recipient nor -srvcert are given",
          "-days nonneg",
          "Requested validity time of the new certificate in number of days",
          "-reqexts val",
          "Name of config file section defining certificate request extensions.",
          "Augments or replaces any extensions contained CSR given with -csr",
          "-sans val",
          "Subject Alt Names (IPADDR/DNS/URI) to add as (critical) cert req extension",
          "-san_nodefault",
          "Do not take default SANs from reference certificate (see -oldcert)",
          "-policies val",
          "Name of config file section defining policies certificate request extension",
          "-policy_oids val",
          "Policy OID(s) to add as policies certificate request extension",
          "-policy_oids_critical",
          "Flag the policy OID(s) given with -policy_oids as critical",
          "-popo int",
          "Proof-of-Possession (POPO) method to use for ir/cr/kur where",
          "-1 = NONE, 0 = RAVERIFIED, 1 = SIGNATURE (default), 2 = KEYENC",
          "-csr val",
          "PKCS#10 CSR file in PEM or DER format to convert or to use in p10cr",
          "-out_trusted val",
          "Certificates to trust when verifying newly enrolled certificates",
          "-implicit_confirm",
          "Request implicit confirmation of newly enrolled certificates",
          "-disable_confirm",
          "Do not confirm newly enrolled certificate w/o requesting implicit",
          "confirmation. WARNING: This leads to behavior violating RFC 4210",
          "-certout val",
          "File to save newly enrolled certificate",
          "-chainout val",
          "File to save the chain of newly enrolled certificate",
          "Certificate enrollment and revocation options:",
          "-oldcert val",
          "Certificate to be updated (defaulting to -cert) or to be revoked in rr;",
          "also used as reference (defaulting to -cert) for subject DN and SANs.",
          "Its issuer is used as recipient unless -recipient, -srvcert, or -issuer given",
          "-revreason int",
          "Reason code to include in revocation request (rr); possible values:",
          "0..6, 8..10 (see RFC5280, 5.3.1) or -1. Default -1 = none included",
          "Message transfer options:",
          "-server val",
          "[http[s]://]address[:port][/path] of CMP server. Default port 80 or 443.",
          "address may be a DNS name or an IP address; path can be overridden by -path",
          "-proxy val",
          "[http[s]://]address[:port][/path] of HTTP(S) proxy to use; path is ignored",
          "-no_proxy val",
          "List of addresses of servers not to use HTTP(S) proxy for",
          "Default from environment variable 'no_proxy', else 'NO_PROXY', else none",
          "-recipient val",
          "DN of CA. Default: subject of -srvcert, -issuer, issuer of -oldcert or -cert",
          "-path val",
          "HTTP path (aka CMP alias) at the CMP server. Default from -server, else \"/\"",
          "-keep_alive nonneg",
          "Persistent HTTP connections. 0: no, 1 (the default): request, 2: require",
          "-msg_timeout nonneg",
          "Number of seconds allowed per CMP message round trip, or 0 for infinite",
          "-total_timeout nonneg",
          "Overall time an enrollment incl. polling may take. Default 0 = infinite",
          "Server authentication options:",
          "-trusted val",
          "Certificates to trust as chain roots when verifying signed CMP responses",
          "unless -srvcert is given",
          "-untrusted val",
          "Intermediate CA certs for chain construction for CMP/TLS/enrolled certs",
          "-srvcert val",
          "Server cert to pin and trust directly when verifying signed CMP responses",
          "-expect_sender val",
          "DN of expected sender of responses. Defaults to subject of -srvcert, if any",
          "-ignore_keyusage",
          "Ignore CMP signer cert key usage, else 'digitalSignature' must be allowed",
          "-unprotected_errors",
          "Accept missing or invalid protection of regular error messages and negative",
          "certificate responses (ip/cp/kup), revocation responses (rp), and PKIConf",
          "WARNING: This setting leads to behavior allowing violation of RFC 4210",
          "-extracertsout val",
          "File to save extra certificates received in the extraCerts field",
          "-cacertsout val",
          "File to save CA certificates received in the caPubs field of 'ip' messages",
          "Client authentication options:",
          "-ref val",
          "Reference value to use as senderKID in case no -cert is given",
          "-secret val",
          "Prefer PBM (over signatures) for protecting msgs with given password source",
          "-cert val",
          "Client's CMP signer certificate; its public key must match the -key argument",
          "This also used as default reference for subject DN and SANs.",
          "Any further certs included are appended to the untrusted certs",
          "-own_trusted val",
          "Optional certs to verify chain building for own CMP signer cert",
          "-key val",
          "CMP signer private key, not used when -secret given",
          "-keypass val",
          "Client private key (and cert and old cert) pass phrase source",
          "-digest val",
          "Digest to use in message protection and POPO signatures. Default \"sha256\"",
          "-mac val",
          "MAC algorithm to use in PBM-based message protection. Default \"hmac-sha1\"",
          "-extracerts val",
          "Certificates to append in extraCerts field of outgoing messages.",
          "This can be used as the default CMP signer cert chain to include",
          "-unprotected_requests",
          "Send messages without CMP-level protection",
          "Credentials format options:",
          "-certform val",
          "Format (PEM or DER) to use when saving a certificate to a file. Default PEM",
          "-keyform val",
          "Format of the key input (ENGINE, other values ignored)",
          "-otherpass val",
          "Pass phrase source potentially needed for loading certificates of others",
          "-engine val",
          "Use crypto engine with given identifier, possibly a hardware device.",
          "Engines may also be defined in OpenSSL config file engine section.",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "TLS connection options:",
          "-tls_used",
          "Enable using TLS (also when other TLS options are not set)",
          "-tls_cert val",
          "Client's TLS certificate. May include chain to be provided to TLS server",
          "-tls_key val",
          "Private key for the client's TLS certificate",
          "-tls_keypass val",
          "Pass phrase source for the client's private TLS key (and TLS cert)",
          "-tls_extra val",
          "Extra certificates to provide to TLS server during TLS handshake",
          "-tls_trusted val",
          "Trusted certificates to use for verifying the TLS server certificate;",
          "this implies host name validation",
          "-tls_host val",
          "Address to be checked (rather than -server) during TLS host name validation",
          "Client-side debugging options:",
          "-batch",
          "Do not interactively prompt for input when a password is required etc.",
          "-repeat +int",
          "Invoke the transaction the given positive number of times. Default 1",
          "-reqin val",
          "Take sequence of CMP requests from file(s)",
          "-reqin_new_tid",
          "Use fresh transactionID for CMP requests read from -reqin",
          "-reqout val",
          "Save sequence of CMP requests to file(s)",
          "-rspin val",
          "Process sequence of CMP responses provided in file(s), skipping server",
          "-rspout val",
          "Save sequence of CMP responses to file(s)",
          "-use_mock_srv",
          "Use mock server at API level, bypassing HTTP",
          "Mock server options:",
          "-port val",
          "Act as HTTP mock server listening on given port",
          "-max_msgs nonneg",
          "max number of messages handled by HTTP mock server. Default: 0 = unlimited",
          "-srv_ref val",
          "Reference value to use as senderKID of server in case no -srv_cert is given",
          "-srv_secret val",
          "Password source for server authentication with a pre-shared key (secret)",
          "-srv_cert val",
          "Certificate of the server",
          "-srv_key val",
          "Private key used by the server for signing messages",
          "-srv_keypass val",
          "Server private key (and cert) pass phrase source",
          "-srv_trusted val",
          "Trusted certificates for client authentication",
          "-srv_untrusted val",
          "Intermediate certs that may be useful for verifying CMP protection",
          "-rsp_cert val",
          "Certificate to be returned as mock enrollment result",
          "-rsp_extracerts val",
          "Extra certificates to be included in mock certification responses",
          "-rsp_capubs val",
          "CA certificates to be included in mock ip response",
          "-poll_count nonneg",
          "Number of times the client must poll before receiving a certificate",
          "-check_after nonneg",
          "The check_after value (time to wait) to include in poll response",
          "-grant_implicitconf",
          "Grant implicit confirmation of newly enrolled certificate",
          "-pkistatus nonneg",
          "PKIStatus to be included in server response. Possible values: 0..6",
          "-failure nonneg",
          "A single failure info bit number to include in server response, 0..26",
          "-failurebits nonneg",
          "Number representing failure bits to include in server response, 0..2^27 - 1",
          "-statusstring val",
          "Status string to be included in server response",
          "-send_error",
          "Force server to reply with error message",
          "-send_unprotected",
          "Send response messages without CMP-level protection",
          "-send_unprot_err",
          "In case of negative responses, server shall send unprotected error messages,",
          "certificate responses (ip/cp/kup), and revocation responses (rp).",
          "WARNING: This setting leads to behavior violating RFC 4210",
          "-accept_unprotected",
          "Accept missing or invalid protection of requests",
          "-accept_unprot_err",
          "Accept unprotected error messages from client",
          "-accept_raverified",
          "Accept RAVERIFIED as proof-of-possession (POPO)",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates"
        ],
        "cms": [
          "No operation option (-encrypt|-decrypt|-sign|-verify|...) specified.",
          "cms: Use -help for summary.",
          "Usage: cms [options] [cert...]",
          "-help",
          "Display this summary",
          "General options:",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-config infile",
          "Load a configuration file (this may load modules)",
          "Operation options:",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-verify",
          "Verify signed message",
          "-resign",
          "Resign a signed message",
          "-sign_receipt",
          "Generate a signed receipt for a message",
          "-verify_receipt infile",
          "Verify receipts; exit if receipt signatures do not verify",
          "-digest_create",
          "Create a CMS \"DigestedData\" object",
          "-digest_verify",
          "Verify a CMS \"DigestedData\" object and output it",
          "-compress",
          "Create a CMS \"CompressedData\" object",
          "-uncompress",
          "Uncompress a CMS \"CompressedData\" object",
          "-EncryptedData_encrypt",
          "Create CMS \"EncryptedData\" object using symmetric key",
          "-EncryptedData_decrypt",
          "Decrypt CMS \"EncryptedData\" object using symmetric key",
          "-data_create",
          "Create a CMS \"Data\" object",
          "-data_out",
          "Copy CMS \"Data\" object to output",
          "-cmsout",
          "Output CMS structure",
          "File format options:",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-rctform PEM|DER",
          "Receipt file format",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-binary",
          "Treat input as binary: do not translate to canonical form",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "-asciicrlf",
          "Perform CRLF canonicalisation when signing",
          "Keys and passwords options:",
          "-pwri_password val",
          "Specific password for recipient",
          "-secretkey val",
          "Use specified hex-encoded key to decrypt/encrypt recipients or content",
          "-secretkeyid val",
          "Identity of the -secretkey for CMS \"KEKRecipientInfo\" object",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-passin val",
          "Input file pass phrase source",
          "-keyopt val",
          "Set public key parameters as n:v pairs",
          "-keyform format",
          "Input private key format (ENGINE, other values ignored)",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Encryption and decryption options:",
          "-originator val",
          "Originator certificate file",
          "-recip infile",
          "Recipient cert file",
          "-cert... parm",
          "Recipient certs (optional; used only when encrypting)",
          "-*",
          "The encryption algorithm to use (any supported cipher)",
          "-wrap val",
          "Key wrap algorithm to use when encrypting with key agreement",
          "-aes128-wrap",
          "Use AES128 to wrap key",
          "-aes192-wrap",
          "Use AES192 to wrap key",
          "-aes256-wrap",
          "Use AES256 to wrap key",
          "-des3-wrap",
          "Use 3DES-EDE to wrap key",
          "-debug_decrypt",
          "Disable MMA protection, return error if no recipient found (see doc)",
          "Signing options:",
          "-md val",
          "Digest algorithm to use",
          "-signer val",
          "Signer certificate input file",
          "-certfile infile",
          "Other certificates file",
          "-cades",
          "Include signingCertificate attribute (CAdES-BES)",
          "-nodetach",
          "Use opaque signing",
          "-nocerts",
          "Don't include signer's certificate when signing",
          "-noattr",
          "Don't include any signed attributes",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "-receipt_request_all",
          "When signing, create a receipt request for all recipients",
          "-receipt_request_first",
          "When signing, create a receipt request for first recipient",
          "-receipt_request_from val",
          "Create signed receipt request with specified email address",
          "-receipt_request_to val",
          "Create signed receipt targeted to specified address",
          "Verification options:",
          "Signer certificate(s) output file",
          "-content infile",
          "Supply or override content for detached signature",
          "-no_content_verify",
          "Do not verify signed content signatures",
          "-no_attr_verify",
          "Do not verify signed attribute signatures",
          "-nosigs",
          "Don't verify message signature",
          "-noverify",
          "Don't verify signers certificate",
          "-nointern",
          "Don't search certificates in message for signer",
          "Check signingCertificate (CAdES-BES)",
          "-verify_retcode",
          "Exit non-zero on verification failure",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath dir",
          "Trusted certificates directory",
          "-CAstore uri",
          "Trusted certificates store URI",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "Output options:",
          "-keyid",
          "Use subject key identifier",
          "-econtent_type val",
          "OID for external content",
          "-text",
          "Include or delete text MIME headers",
          "-certsout outfile",
          "Certificate output file",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "Printing options:",
          "-noout",
          "For the -cmsout operation do not output the parsed CMS structure",
          "-print",
          "For the -cmsout operation print out all fields of the CMS structure",
          "-nameopt val",
          "For the -print option specifies various strings printing options",
          "-receipt_request_print",
          "Print CMS Receipt Request",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates"
        ],
        "crl": [
          "crl: Use -help for summary.",
          "Usage: crl [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-verify",
          "Verify CRL signature",
          "Input options:",
          "-in infile",
          "Input file - default stdin",
          "-inform PEM|DER",
          "CRL input format (DER or PEM); has no effect",
          "-key infile",
          "CRL signing Private key to use",
          "-keyform PEM|DER",
          "Private key file format (DER/PEM/P12); has no effect",
          "Output options:",
          "-out outfile",
          "output file - default stdout",
          "-outform PEM|DER",
          "Output format - default PEM",
          "-dateopt val",
          "Datetime format used for printing. (rfc_822/iso_8601). Default is rfc_822.",
          "-text",
          "Print out a text format version",
          "-hash",
          "Print hash value",
          "-hash_old",
          "Print old-style (MD5) hash value",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-*",
          "Any supported digest",
          "CRL options:",
          "-issuer",
          "Print issuer DN",
          "-lastupdate",
          "Set lastUpdate field",
          "-nextupdate",
          "Set nextUpdate field",
          "-noout",
          "No CRL output",
          "-fingerprint",
          "Print the crl fingerprint",
          "-crlnumber",
          "Print CRL number",
          "-badsig",
          "Corrupt last byte of loaded CRL signature (for test)",
          "-gendelta infile",
          "Other CRL to compare/diff to the Input one",
          "Certificate options:",
          "-CApath dir",
          "Verify CRL using certificates in dir",
          "-CAfile infile",
          "Verify CRL using certificates in file name",
          "-CAstore uri",
          "Verify CRL using certificates in store URI",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "crl2pkcs7": [
          "crl2pkcs7: Use -help for summary.",
          "Usage: crl2pkcs7 [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Input options:",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-nocrl",
          "No crl to load, just certs from '-certfile'",
          "-certfile infile",
          "File of chain of certs to a trusted CA; can be repeated",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "dgst": [
          "help: No such file or directory",
          "00000000:error:80000002:system library:file_ctrl:No such file or directory:crypto/bio/bss_file.c:297:calling fopen(help, r)",
          "00000000:error:10080002:BIO routines:file_ctrl:system lib:crypto/bio/bss_file.c:300:",
          "Usage: dgst [options] [file...]",
          "General options:",
          "-help",
          "Display this summary",
          "-list",
          "List digests",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for digest operations",
          "-passin val",
          "Input file pass phrase source",
          "Output options:",
          "-c",
          "Print the digest with separating colons",
          "-r",
          "Print the digest in coreutils format",
          "-out outfile",
          "Output to filename rather than stdout",
          "-keyform format",
          "Key file format (ENGINE, other values ignored)",
          "-hex",
          "Print as hex dump",
          "-binary",
          "Print in binary form",
          "-xoflen +int",
          "Output length for XOF algorithms",
          "-d",
          "Print debug info",
          "-debug",
          "Signing options:",
          "-sign val",
          "Sign digest using private key",
          "-verify val",
          "Verify a signature using public key",
          "-prverify val",
          "Verify a signature using private key",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-signature infile",
          "File with signature to verify",
          "-hmac val",
          "Create hashed MAC with key",
          "-mac val",
          "Create MAC (not necessarily HMAC)",
          "-macopt val",
          "MAC algorithm parameters in n:v form or key",
          "-*",
          "Any supported digest",
          "-fips-fingerprint",
          "Compute HMAC with the key used in OpenSSL-FIPS fingerprint",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "file",
          "Files to digest (optional; default is stdin)"
        ],
        "dhparam": [
          "dhparam: Can't parse \"help\" as a number",
          "dhparam: Use -help for summary.",
          "Usage: dhparam [options] [numbits]",
          "General options:",
          "-help",
          "Display this summary",
          "-check",
          "Check the DH parameters",
          "-dsaparam",
          "Read or generate DSA parameters, convert to DH",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format, DER or PEM",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format, DER or PEM",
          "-text",
          "Print a text form of the DH parameters",
          "-noout",
          "Don't output any DH parameters",
          "-2",
          "Generate parameters using 2 as the generator value",
          "-3",
          "Generate parameters using 3 as the generator value",
          "-5",
          "Generate parameters using 5 as the generator value",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "numbits",
          "Number of bits if generating parameters (optional)"
        ],
        "dsa": [
          "dsa: Use -help for summary.",
          "Usage: dsa [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-*",
          "Any supported cipher",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "Input options:",
          "-in val",
          "Input key",
          "-inform format",
          "Input format (DER/PEM/PVK); has no effect",
          "-pubin",
          "Expect a public key in input file",
          "-passin val",
          "Input file pass phrase source",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform format",
          "Output format, DER PEM PVK",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the DSA public value",
          "-pubout",
          "Output public key, not private",
          "-passout val",
          "Output file pass phrase source",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "dsaparam": [
          "dsaparam: Can't parse \"help\" as a number",
          "dsaparam: Use -help for summary.",
          "Usage: dsaparam [options] [numbits]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine e, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-text",
          "Print as text",
          "-noout",
          "No output",
          "-verbose",
          "Verbose output",
          "-genkey",
          "Generate a DSA key",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "numbits",
          "Number of bits if generating parameters (optional)"
        ],
        "ec": [
          "ec: Use -help for summary.",
          "Usage: ec [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in val",
          "Input file",
          "-inform format",
          "Input format (DER/PEM/P12/ENGINE)",
          "-pubin",
          "Expect a public key in input file",
          "-passin val",
          "Input file pass phrase source",
          "-check",
          "check key consistency",
          "-*",
          "Any supported cipher",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "-conv_form val",
          "Specifies the point conversion form",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key",
          "-param_out",
          "Print the elliptic curve parameters",
          "-pubout",
          "Output public key, not private",
          "-no_public",
          "exclude public key from private key",
          "-passout val",
          "Output file pass phrase source",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "ecparam": [
          "ecparam: Use -help for summary.",
          "Usage: ecparam [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-list_curves",
          "Prints a list of all curve 'short names'",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-genkey",
          "Generate ec key",
          "-in infile",
          "Input file",
          "- default stdin",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "-out outfile",
          "Output file - default stdout",
          "-outform PEM|DER",
          "Output format - default PEM",
          "Output options:",
          "-text",
          "Print the ec parameters in text form",
          "-noout",
          "Do not print the ec parameter",
          "-param_enc val",
          "Specifies the way the ec parameters are encoded",
          "Parameter options:",
          "-check",
          "Validate the ec parameters",
          "-check_named",
          "Check that named EC curve parameters have not been modified",
          "-no_seed",
          "If 'explicit' parameters are chosen do not use the seed",
          "-name val",
          "Use the ec parameters with specified 'short name'",
          "-conv_form val",
          "Specifies the point conversion form",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "enc": [
          "enc: Use -help for summary.",
          "Usage: enc [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-list",
          "List ciphers",
          "-ciphers",
          "Alias for -list",
          "-e",
          "Encrypt",
          "-d",
          "Decrypt",
          "-p",
          "Print the iv/key",
          "-P",
          "Print the iv/key and exit",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-k val",
          "Passphrase",
          "-kfile infile",
          "Read passphrase from file",
          "Output options:",
          "-out outfile",
          "Output file",
          "-pass val",
          "Passphrase source",
          "-v",
          "Verbose output",
          "-a",
          "Base64 encode/decode, depending on encryption flag",
          "-base64",
          "Same as option -a",
          "-A",
          "Used with -[base64|a] to specify base64 buffer as a single line",
          "Encryption options:",
          "-nopad",
          "Disable standard block padding",
          "-salt",
          "Use salt in the KDF (default)",
          "-nosalt",
          "Do not use salt in the KDF",
          "-debug",
          "Print debug info",
          "-bufsize val",
          "Buffer size",
          "-K val",
          "Raw key, in hex",
          "-S val",
          "Salt, in hex",
          "-iv val",
          "IV in hex",
          "-md val",
          "Use specified digest to create a key from the passphrase",
          "-iter +int",
          "Specify the iteration count and force use of PBKDF2",
          "-pbkdf2",
          "Use password-based key derivation function 2",
          "-none",
          "Don't encrypt",
          "-*",
          "Any supported cipher",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "engine": [
          "00000000:error:13000084:engine routines:dynamic_load:dso not found:crypto/engine/eng_dyn.c:422:",
          "00000000:error:13000074:engine routines:ENGINE_by_id:no such engine:crypto/engine/eng_list.c:430:id=help",
          "Usage: engine [options] engine...",
          "General options:",
          "-help",
          "Display this summary",
          "-t",
          "Check that specified engine is available",
          "-pre val",
          "Run command against the ENGINE before loading it",
          "-post val",
          "Run command against the ENGINE after loading it",
          "Output options:",
          "-v",
          "List 'control commands' For each specified engine",
          "-vv",
          "Also display each command's description",
          "-vvv",
          "Also add the input flags for each command",
          "-vvvv",
          "Also show internal input flags",
          "-c",
          "List the capabilities of specified engine",
          "-tt",
          "Display error trace for unavailable engines",
          "Commands are like \"SO_PATH:/lib/libdriver.so\"",
          "Parameters:",
          "engine",
          "ID of engine(s) to load"
        ],
        "errstr": [
          "Usage: errstr [options] errnum...",
          "General options:",
          "-help",
          "Display this summary",
          "Parameters:",
          "errnum",
          "Error number(s) to decode"
        ],
        "fipsinstall": [
          "fipsinstall: Use -help for summary.",
          "Usage: fipsinstall [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-verify",
          "Verify a config file instead of generating one",
          "-module infile",
          "File name of the provider module",
          "-provider_name val",
          "FIPS provider name",
          "-section_name val",
          "FIPS Provider config section name (optional)",
          "-no_conditional_errors",
          "Disable the ability of the fips module to enter an error state if any conditional self tests fail",
          "-no_security_checks",
          "Disable the run-time FIPS security checks in the module",
          "-self_test_onload",
          "Forces self tests to always run on module load",
          "Input options:",
          "-in infile",
          "Input config file, used when verifying",
          "Output options:",
          "-out outfile",
          "Output config file, used when generating",
          "-mac_name val",
          "MAC name",
          "-macopt val",
          "MAC algorithm parameters in n:v form. See 'PARAMETER NAMES' in the EVP_MAC_ docs",
          "-noout",
          "Disable logging of self test events",
          "-corrupt_desc val",
          "Corrupt a self test by description",
          "-corrupt_type val",
          "Corrupt a self test by type",
          "-config infile",
          "The parent config to verify",
          "-quiet",
          "No messages, just exit status"
        ],
        "gendsa": [
          "Could not open file or uri for loading params of DSA parameters from help",
          "00000000:error:16000069:STORE routines:ossl_store_get0_loader_int:unregistered scheme:crypto/store/store_register.c:237:scheme=file",
          "00000000:error:80000002:system library:file_open:No such file or directory:providers/implementations/storemgmt/file_store.c:269:calling stat(help)",
          "unable to create PKEY context",
          "00000000:error:0300009C:digital envelope routines:int_ctx_new:unsupported algorithm:crypto/evp/pmeth_lib.c:316:",
          "Usage: gendsa [options] dsaparam-file",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Output options:",
          "-out outfile",
          "Output the key to the specified file",
          "-passout val",
          "Output file pass phrase source",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "-*",
          "Encrypt the output with any supported cipher",
          "-verbose",
          "Verbose output",
          "Parameters:",
          "dsaparam-file",
          "File containing DSA parameters"
        ],
        "genpkey": [
          "genpkey: Use -help for summary.",
          "Usage: genpkey [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-paramfile infile",
          "Parameters file",
          "-algorithm val",
          "The public key algorithm",
          "-quiet",
          "Do not output status while generating keys",
          "-pkeyopt val",
          "Set the public key algorithm option as opt:value",
          "-config infile",
          "Load a configuration file (this may load modules)",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "output format (DER or PEM)",
          "-pass val",
          "Output file pass phrase source",
          "-genparam",
          "Generate parameters, not key",
          "-text",
          "Print the in text",
          "-*",
          "Cipher to use to encrypt the key",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Order of options may be important!",
          "See the documentation."
        ],
        "genrsa": [
          "genrsa: Can't parse \"help\" as a number",
          "Usage: genrsa [options] numbits",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-3",
          "(deprecated) Use 3 for the E value",
          "-F4",
          "Use the Fermat number F4 (0x10001) for the E value",
          "-f4",
          "Output options:",
          "-out outfile",
          "Output the key to specified file",
          "-passout val",
          "Output file pass phrase source",
          "-primes +int",
          "Specify number of primes",
          "-verbose",
          "Verbose output",
          "-traditional",
          "Use traditional format for private keys",
          "-*",
          "Encrypt the output with any supported cipher",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "numbits",
          "Size of key in bits"
        ],
        "help": [
          "Usage: help [options] [command]",
          "General options:",
          "-help",
          "Display this summary",
          "Parameters:",
          "command",
          "Name of command to display help (optional)"
        ],
        "info": [
          "info: Use -help for summary.",
          "Usage: info [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Output options:",
          "-configdir",
          "Default configuration file directory",
          "-enginesdir",
          "Default engine module directory",
          "-modulesdir",
          "Default module directory (other than engine modules)",
          "-dsoext",
          "Configured extension for modules",
          "-dirnamesep",
          "Directory-filename separator",
          "-listsep",
          "List separator character",
          "-seeds",
          "Seed sources",
          "-cpusettings",
          "CPU settings info"
        ],
        "kdf": [
          "Invalid KDF name help",
          "kdf: Use -help for summary.",
          "00000000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (help : 0), Properties (<null>)",
          "Usage: kdf [options] kdf_name",
          "General options:",
          "-help",
          "Display this summary",
          "-kdfopt val",
          "KDF algorithm control parameters in n:v form",
          "-cipher val",
          "Cipher",
          "-digest val",
          "Digest",
          "-mac val",
          "MAC",
          "See 'Supported Controls' in the EVP_KDF_ docs",
          "-keylen val",
          "The size of the output derived key",
          "Output options:",
          "-out outfile",
          "Output to filename rather than stdout",
          "-binary",
          "Output in binary format (default is hexadecimal)",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "kdf_name",
          "Name of the KDF algorithm"
        ],
        "list": [
          "list: Use -help for summary.",
          "Usage: list [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Output options:",
          "-1",
          "List in one column",
          "-verbose",
          "Verbose listing",
          "-select val",
          "Select a single algorithm",
          "-commands",
          "List of standard commands",
          "-standard-commands",
          "-digest-commands",
          "List of message digest commands (deprecated)",
          "-digest-algorithms",
          "List of message digest algorithms",
          "-kdf-algorithms",
          "List of key derivation and pseudo random function algorithms",
          "-random-instances",
          "List the primary, public and private random number generator details",
          "-random-generators",
          "List of random number generators",
          "-mac-algorithms",
          "List of message authentication code algorithms",
          "-cipher-commands",
          "List of cipher commands (deprecated)",
          "-cipher-algorithms",
          "List of cipher algorithms",
          "-encoders",
          "List of encoding methods",
          "-decoders",
          "List of decoding methods",
          "-key-managers",
          "List of key managers",
          "-key-exchange-algorithms",
          "List of key exchange algorithms",
          "-kem-algorithms",
          "List of key encapsulation mechanism algorithms",
          "-signature-algorithms",
          "List of signature algorithms",
          "-asymcipher-algorithms",
          "List of asymmetric cipher algorithms",
          "-public-key-algorithms",
          "List of public key algorithms",
          "-public-key-methods",
          "List of public key methods",
          "-store-loaders",
          "List of store loaders",
          "-providers",
          "List of provider information",
          "-engines",
          "List of loaded engines",
          "-disabled",
          "List of disabled features",
          "-options val",
          "List options for specified command",
          "-objects",
          "List built in objects (OID<->name mappings)",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "mac": [
          "Invalid MAC name help",
          "mac: Use -help for summary.",
          "00000000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (help : 0), Properties (<null>)",
          "Usage: mac [options] mac_name",
          "General options:",
          "-help",
          "Display this summary",
          "-macopt val",
          "MAC algorithm parameters in n:v form",
          "-cipher val",
          "Cipher",
          "-digest val",
          "Digest",
          "See 'PARAMETER NAMES' in the EVP_MAC_ docs",
          "Input options:",
          "-in infile",
          "Input file to MAC (default is stdin)",
          "Output options:",
          "-out outfile",
          "Output to filename rather than stdout",
          "-binary",
          "Output in binary format (default is hexadecimal)",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "mac_name",
          "MAC algorithm"
        ],
        "nseq": [
          "nseq: Use -help for summary.",
          "Usage: nseq [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Input options:",
          "-in infile",
          "Input file",
          "Output options:",
          "-toseq",
          "Output NS Sequence file",
          "-out outfile",
          "Output file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "ocsp": [
          "ocsp: Use -help for summary.",
          "Usage: ocsp [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-ignore_err",
          "Ignore error on OCSP request or response and continue running",
          "-CAfile infile",
          "Trusted certificates file",
          "-CApath infile",
          "Trusted certificates directory",
          "-CAstore uri",
          "Trusted certificates store URI",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "Responder options:",
          "-timeout +int",
          "Connection timeout (in seconds) to the OCSP responder",
          "-resp_no_certs",
          "Don't include any certificates in response",
          "-multi +int",
          "run multiple responder processes",
          "-no_certs",
          "Don't include any certificates in signed request",
          "-badsig",
          "Corrupt last byte of loaded OSCP response signature (for test)",
          "-CA infile",
          "CA certificate",
          "-nmin +int",
          "Number of minutes before next update",
          "-nrequest +int",
          "Number of requests to accept (default unlimited)",
          "-reqin val",
          "File with the DER-encoded request",
          "-signer infile",
          "Certificate to sign OCSP request with",
          "-sign_other infile",
          "Additional certificates to include in signed request",
          "-index infile",
          "Certificate status index file",
          "-ndays +int",
          "Number of days before next update",
          "-rsigner infile",
          "Responder certificate to sign responses with",
          "-rkey infile",
          "Responder key to sign responses with",
          "-passin val",
          "Responder key pass phrase source",
          "-rother infile",
          "Other certificates to include in response",
          "-rmd val",
          "Digest Algorithm to use in signature of OCSP response",
          "-rsigopt val",
          "OCSP response signature parameter in n:v form",
          "-header val",
          "key=value header to add",
          "-rcid val",
          "Use specified algorithm for cert id in response",
          "-*",
          "Any supported digest algorithm (sha1,sha256, ... )",
          "Client options:",
          "-url val",
          "Responder URL",
          "-host val",
          "TCP/IP hostname:port to connect to",
          "-port nonneg",
          "Port to run responder on",
          "-path val",
          "Path to use in OCSP request",
          "-proxy val",
          "[http[s]://]host[:port][/path] of HTTP(S) proxy to use; path is ignored",
          "-no_proxy val",
          "List of addresses of servers not to use HTTP(S) proxy for",
          "Default from environment variable 'no_proxy', else 'NO_PROXY', else none",
          "-out outfile",
          "Output filename",
          "-noverify",
          "Don't verify response at all",
          "-nonce",
          "Add OCSP nonce to request",
          "-no_nonce",
          "Don't add OCSP nonce to request",
          "-no_signature_verify",
          "Don't check signature on response",
          "-resp_key_id",
          "Identify response by signing certificate key ID",
          "-no_cert_verify",
          "Don't check signing certificate",
          "-text",
          "Print text form of request and response",
          "-req_text",
          "Print text form of request",
          "-resp_text",
          "Print text form of response",
          "-no_chain",
          "Don't chain verify response",
          "-no_cert_checks",
          "Don't do additional checks on signing certificate",
          "-no_explicit",
          "Do not explicitly check the chain, just verify the root",
          "-trust_other",
          "Don't verify additional certificates",
          "-no_intern",
          "Don't search certificates contained in response for signer",
          "-respin val",
          "File with the DER-encoded response",
          "-VAfile infile",
          "Validator certificates file",
          "-verify_other infile",
          "Additional certificates to search for signer",
          "-cert infile",
          "Certificate to check",
          "-serial val",
          "Serial number to check",
          "-validity_period ulong",
          "Maximum validity discrepancy in seconds",
          "-signkey val",
          "Private key to sign OCSP request with",
          "-reqout val",
          "Output file for the DER-encoded request",
          "-respout val",
          "Output file for the DER-encoded response",
          "-issuer infile",
          "Issuer certificate",
          "-status_age +int",
          "Maximum status age in seconds",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "passwd": [
          "$1$7.AkNXoN$gqHVE5rpOO2L3ku5av8H71",
          "Usage: passwd [options] [password]",
          "General options:",
          "-help",
          "Display this summary",
          "Input options:",
          "-in infile",
          "Read passwords from file",
          "-noverify",
          "Never verify when reading password from terminal",
          "-stdin",
          "Read passwords from stdin",
          "Output options:",
          "-quiet",
          "No warnings",
          "-table",
          "Format output as table",
          "-reverse",
          "Switch table columns",
          "Cryptographic options:",
          "-salt val",
          "Use provided salt",
          "-6",
          "SHA512-based password algorithm",
          "-5",
          "SHA256-based password algorithm",
          "-apr1",
          "MD5-based password algorithm, Apache variant",
          "-1",
          "MD5-based password algorithm",
          "-aixmd5",
          "AIX MD5-based password algorithm",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "password",
          "Password text to digest (optional)"
        ],
        "pkcs12": [
          "pkcs12: Use -help for summary.",
          "Usage: pkcs12 [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-out outfile",
          "Output file",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "-password val",
          "Set PKCS#12 import/export password source",
          "-twopass",
          "Separate MAC, encryption passwords",
          "-nokeys",
          "Don't output private keys",
          "-nocerts",
          "Don't output certificates",
          "-noout",
          "Don't output anything, just verify PKCS#12 input",
          "-legacy",
          "Use legacy encryption: 3DES_CBC for keys, RC2_CBC for certs",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "PKCS#12 import (parsing PKCS#12) options:",
          "-info",
          "Print info about PKCS#12 structure",
          "-nomacver",
          "Don't verify integrity MAC",
          "-clcerts",
          "Only output client certificates",
          "-cacerts",
          "Only output CA certificates",
          "-*",
          "Any supported cipher for output encryption",
          "-noenc",
          "Don't encrypt private keys",
          "-nodes",
          "Don't encrypt private keys; deprecated",
          "PKCS#12 output (export) options:",
          "-export",
          "Create PKCS12 file",
          "-inkey val",
          "Private key, else read from -in input file",
          "-certfile infile",
          "Extra certificates for PKCS12 output",
          "-passcerts val",
          "Certificate file pass phrase source",
          "-chain",
          "Build and add certificate chain for EE cert,",
          "which is the 1st cert from -in matching the private key (if given)",
          "-untrusted infile",
          "Untrusted certificates for chain building",
          "-CAfile infile",
          "PEM-format file of CA's",
          "-CApath dir",
          "PEM-format directory of CA's",
          "-CAstore uri",
          "URI to store of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "-name val",
          "Use name as friendly name",
          "-caname val",
          "Use name as CA friendly name (can be repeated)",
          "-CSP val",
          "Microsoft CSP name",
          "-LMK",
          "Add local machine keyset attribute to private key",
          "-keyex",
          "Set key type to MS key exchange",
          "-keysig",
          "Set key type to MS key signature",
          "-keypbe val",
          "Private key PBE algorithm (default AES-256 CBC)",
          "-certpbe val",
          "Certificate PBE algorithm (default PBES2 with PBKDF2 and AES-256 CBC)",
          "-descert",
          "Encrypt output with 3DES (default PBES2 with PBKDF2 and AES-256 CBC)",
          "-macalg val",
          "Digest algorithm to use in MAC (default SHA1)",
          "-iter +int",
          "Specify the iteration count for encryption and MAC",
          "-noiter",
          "Don't use encryption iteration",
          "-nomaciter",
          "Don't use MAC iteration)",
          "-maciter",
          "Unused, kept for backwards compatibility",
          "-nomac",
          "Don't generate MAC"
        ],
        "pkcs7": [
          "pkcs7: Use -help for summary.",
          "Usage: pkcs7 [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "Output options:",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't output encoded data",
          "-text",
          "Print full details of certificates",
          "-print",
          "Print out all fields of the PKCS7 structure",
          "-print_certs",
          "Print_certs",
          "print any certs or crl in the input",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "pkcs8": [
          "pkcs8: Use -help for summary.",
          "Usage: pkcs8 [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-v1 val",
          "Use PKCS#5 v1.5 and cipher",
          "-v2 val",
          "Use PKCS#5 v2.0 and cipher",
          "-v2prf val",
          "Set the PRF algorithm to use with PKCS#5 v2.0",
          "Input options:",
          "-in infile",
          "Input file",
          "-inform PEM|DER",
          "Input format (DER or PEM)",
          "-passin val",
          "Input file pass phrase source",
          "-nocrypt",
          "Use or expect unencrypted private key",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format (DER or PEM)",
          "-topk8",
          "Output PKCS8 file",
          "-passout val",
          "Output file pass phrase source",
          "-traditional",
          "use traditional format private key",
          "-iter +int",
          "Specify the iteration count",
          "-noiter",
          "Use 1 as iteration count",
          "Scrypt options:",
          "-scrypt",
          "Use scrypt algorithm",
          "-scrypt_N val",
          "Set scrypt N parameter",
          "-scrypt_r val",
          "Set scrypt r parameter",
          "-scrypt_p val",
          "Set scrypt p parameter",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "pkey": [
          "pkey: Use -help for summary.",
          "Usage: pkey [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "-check",
          "Check key consistency",
          "-pubcheck",
          "Check public key consistency",
          "Input options:",
          "-in val",
          "Input key",
          "-inform format",
          "Key input format (ENGINE, other values ignored)",
          "-passin val",
          "Key input pass phrase source",
          "-pubin",
          "Read only public components from key input",
          "Output options:",
          "-out outfile",
          "Output file for encoded and/or text output",
          "-outform PEM|DER",
          "Output encoding format (DER or PEM)",
          "-*",
          "Any supported cipher to be used for encryption",
          "-passout val",
          "Output PEM file pass phrase source",
          "-traditional",
          "Use traditional format for private key PEM output",
          "-pubout",
          "Restrict encoded output to public components",
          "-noout",
          "Do not output the key in encoded form",
          "-text",
          "Output key components in plaintext",
          "-text_pub",
          "Output only public key components in text form",
          "-ec_conv_form val",
          "Specifies the EC point conversion form in the encoding",
          "-ec_param_enc val",
          "Specifies the way the EC parameters are encoded"
        ],
        "pkeyparam": [
          "pkeyparam: Use -help for summary.",
          "Usage: pkeyparam [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-check",
          "Check key param consistency",
          "Input options:",
          "-in infile",
          "Input file",
          "Output options:",
          "-out outfile",
          "Output file",
          "-text",
          "Print parameters as text",
          "-noout",
          "Don't output encoded parameters",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "pkeyutl": [
          "pkeyutl: Use -help for summary.",
          "Usage: pkeyutl [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-engine_impl",
          "Also use engine given by -engine for crypto operations",
          "-sign",
          "Sign input data with private key",
          "-verify",
          "Verify with public key",
          "-encrypt",
          "Encrypt input data with public key",
          "-decrypt",
          "Decrypt input data with private key",
          "-derive",
          "Derive shared secret",
          "-config infile",
          "Load a configuration file (this may load modules)",
          "Input options:",
          "-in infile",
          "Input file - default stdin",
          "-rawin",
          "Indicate the input data is in raw form",
          "-pubin",
          "Input is a public key",
          "-inkey val",
          "Input private key file",
          "-passin val",
          "Input file pass phrase source",
          "-peerkey val",
          "Peer key file used in key derivation",
          "-peerform PEM|DER|ENGINE",
          "Peer key format (DER/PEM/P12/ENGINE)",
          "-certin",
          "Input is a cert with a public key",
          "-rev",
          "Reverse the order of the input buffer",
          "-sigfile infile",
          "Signature file (verify operation only)",
          "-keyform PEM|DER|ENGINE",
          "Private key format (ENGINE, other values ignored)",
          "Output options:",
          "-out outfile",
          "Output file - default stdout",
          "-asn1parse",
          "asn1parse the output data",
          "-hexdump",
          "Hex dump output",
          "-verifyrecover",
          "Verify with public key, recover original data",
          "Signing/Derivation options:",
          "-digest val",
          "Specify the digest algorithm when signing the raw input data",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-pkeyopt_passin val",
          "Public key option that is read as a passphrase argument opt:passphrase",
          "-kdf val",
          "Use KDF algorithm",
          "-kdflen +int",
          "KDF algorithm output length",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "prime": [
          "Failed to process value (help)",
          "Usage: prime [options] [number...]",
          "General options:",
          "-help",
          "Display this summary",
          "-bits +int",
          "Size of number in bits",
          "-checks +int",
          "Number of checks",
          "Output options:",
          "-hex",
          "Hex output",
          "-generate",
          "Generate a prime",
          "-safe",
          "When used with -generate, generate a safe prime",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "number",
          "Number(s) to check for primality if not generating"
        ],
        "rand": [
          "rand: Can't parse \"help\" as a number",
          "rand: Use -help for summary.",
          "Usage: rand [options] num",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Output options:",
          "-out outfile",
          "Output file",
          "-base64",
          "Base64 encode output",
          "-hex",
          "Hex encode output",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "num",
          "Number of bytes to generate"
        ],
        "rehash": [
          "Skipping help, can't write",
          "Usage: rehash [options] [directory...]",
          "General options:",
          "-help",
          "Display this summary",
          "-h",
          "-compat",
          "Create both new- and old-style hash links",
          "-old",
          "Use old-style hash to generate links",
          "-n",
          "Do not remove existing links",
          "Output options:",
          "-v",
          "Verbose output",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "directory",
          "One or more directories to process (optional)"
        ],
        "req": [
          "req: Use -help for summary.",
          "Usage: req [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-keygen_engine val",
          "Specify engine to be used for key generation operations",
          "-in infile",
          "X.509 request input file (default stdin)",
          "-inform PEM|DER",
          "Input format - DER or PEM",
          "-verify",
          "Verify self-signature on the request",
          "Certificate options:",
          "-new",
          "New request",
          "-config infile",
          "Request template file",
          "-section val",
          "Config section to use (default \"req\")",
          "-utf8",
          "Input characters are UTF8 (default ASCII)",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-reqopt val",
          "Various request text options",
          "-text",
          "Text form of request",
          "-x509",
          "Output an X.509 certificate structure instead of a cert request",
          "-CA infile",
          "Issuer cert to use for signing a cert, implies -x509",
          "-CAkey val",
          "Issuer private key to use with -CA; default is -CA arg",
          "(Required by some CA's)",
          "-subj val",
          "Set or modify subject of request or cert",
          "-subject",
          "Print the subject of the output request or cert",
          "-multivalue-rdn",
          "Deprecated; multi-valued RDNs support is always on.",
          "-days +int",
          "Number of days cert is valid for",
          "-set_serial val",
          "Serial number to use",
          "-copy_extensions val",
          "copy extensions from request when using -x509",
          "-addext val",
          "Additional cert extension key=value pair (may be given more than once)",
          "-extensions val",
          "Cert extension section (override value in config file)",
          "-reqexts val",
          "Request extension section (override value in config file)",
          "-precert",
          "Add a poison extension to the generated cert (implies -new)",
          "Keys and Signing options:",
          "-key val",
          "Key for signing, and to include unless -in given",
          "-keyform format",
          "Key file format (ENGINE, other values ignored)",
          "-pubkey",
          "Output public key",
          "-keyout outfile",
          "File to write private key to",
          "-passin val",
          "Private key and certificate password source",
          "-passout val",
          "Output file pass phrase source",
          "-newkey val",
          "Generate new key with [<alg>:]<nbits> or <alg>[:<file>] or param:<file>",
          "-pkeyopt val",
          "Public key options as opt:value",
          "-sigopt val",
          "Signature parameter in n:v form",
          "-vfyopt val",
          "Verification parameter in n:v form",
          "-*",
          "Any supported digest",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform PEM|DER",
          "Output format - DER or PEM",
          "-batch",
          "Do not ask anything during request generation",
          "-verbose",
          "Verbose output",
          "-noenc",
          "Don't encrypt private keys",
          "-nodes",
          "Don't encrypt private keys; deprecated",
          "-noout",
          "Do not output REQ",
          "-newhdr",
          "Output \"NEW\" in the header lines",
          "-modulus",
          "RSA modulus",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "rsa": [
          "rsa: Use -help for summary.",
          "Usage: rsa [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-check",
          "Verify key consistency",
          "-*",
          "Any supported cipher",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in val",
          "Input file",
          "-inform format",
          "Input format (DER/PEM/P12/ENGINE",
          "-pubin",
          "Expect a public key in input file",
          "-RSAPublicKey_in",
          "Input is an RSAPublicKey",
          "-passin val",
          "Input file pass phrase source",
          "Output options:",
          "-out outfile",
          "Output file",
          "-outform format",
          "Output format, one of DER PEM PVK",
          "-pubout",
          "Output a public key",
          "-RSAPublicKey_out",
          "Output is an RSAPublicKey",
          "-passout val",
          "Output file pass phrase source",
          "-noout",
          "Don't print key out",
          "-text",
          "Print the key in text",
          "-modulus",
          "Print the RSA key modulus",
          "-traditional",
          "Use traditional format for private keys",
          "PVK options:",
          "-pvk-strong",
          "Enable 'Strong' PVK encoding level (default)",
          "-pvk-weak",
          "Enable 'Weak' PVK encoding level",
          "-pvk-none",
          "Don't enforce PVK encoding",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "rsautl": [
          "The command rsautl was deprecated in version 3.0. Use 'pkeyutl' instead.",
          "rsautl: Use -help for summary.",
          "Usage: rsautl [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-sign",
          "Sign with private key",
          "-verify",
          "Verify with public key",
          "-encrypt",
          "Encrypt with public key",
          "-decrypt",
          "Decrypt with private key",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-inkey val",
          "Input key",
          "-keyform PEM|DER|ENGINE",
          "Private key format (ENGINE, other values ignored)",
          "-pubin",
          "Input is an RSA public",
          "-certin",
          "Input is a cert carrying an RSA public key",
          "-rev",
          "Reverse the order of the input buffer",
          "-passin val",
          "Input file pass phrase source",
          "Output options:",
          "-out outfile",
          "Output file",
          "-raw",
          "Use no padding",
          "-pkcs",
          "Use PKCS#1 v1.5 padding (default)",
          "-x931",
          "Use ANSI X9.31 padding",
          "-oaep",
          "Use PKCS#1 OAEP",
          "-asn1parse",
          "Run output through asn1parse; useful with -verify",
          "-hexdump",
          "Hex dump output",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "s_client": [
          "00000000:error:10080002:BIO routines:BIO_lookup_ex:system lib:crypto/bio/bio_addr.c:738:Temporary failure in name resolution",
          "connect:errno=11",
          "Usage: s_client [options] [host:port]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-ssl_client_engine val",
          "Specify engine to be used for client certificate operations",
          "-ssl_config val",
          "Use specified section for SSL_CTX configuration",
          "-ct",
          "Request and parse SCTs (also enables OCSP stapling)",
          "-noct",
          "Do not request or parse SCTs (default)",
          "-ctlogfile infile",
          "CT log list CONF file",
          "Network options:",
          "-host val",
          "Use -connect instead",
          "-port +int",
          "-connect val",
          "TCP/IP where to connect; default: 4433)",
          "-bind val",
          "bind local address for connection",
          "-proxy val",
          "Connect to via specified proxy to the real server",
          "-proxy_user val",
          "UserID for proxy authentication",
          "-proxy_pass val",
          "Proxy authentication password source",
          "-unix val",
          "Connect over the specified Unix-domain socket",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "-maxfraglen +int",
          "Enable Maximum Fragment Length Negotiation (len values: 512, 1024, 2048 and 4096)",
          "-max_send_frag +int",
          "Maximum Size of send frames",
          "-split_send_frag +int",
          "Size used to split data for encrypt pipelines",
          "-max_pipelines +int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-read_buf +int",
          "Default read buffer size to be used for connections",
          "-fallback_scsv",
          "Send the fallback SCSV",
          "Identity options:",
          "-cert infile",
          "Client certificate file to use",
          "-certform PEM|DER",
          "Client certificate file format (PEM/DER/P12); has no effect",
          "-cert_chain infile",
          "Client certificate chain file (in PEM format)",
          "-build_chain",
          "Build client certificate chain",
          "-key val",
          "Private key file to use; default: -cert file",
          "-keyform PEM|DER|ENGINE",
          "Key format (ENGINE, other values ignored)",
          "-pass val",
          "Private key and cert file pass phrase source",
          "-verify +int",
          "Turn on peer certificate verification",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-CApath dir",
          "PEM format directory of CA's",
          "-CAfile infile",
          "PEM format file of CA's",
          "-CAstore uri",
          "URI to store of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "-requestCAfile infile",
          "PEM format file of CA names to send to the server",
          "-dane_tlsa_domain val",
          "DANE TLSA base domain",
          "-dane_tlsa_rrdata val",
          "DANE TLSA rrdata presentation form",
          "-dane_ee_no_namechecks",
          "Disable name checks when matching DANE-EE(3) TLSA records",
          "-psk_identity val",
          "PSK identity",
          "-psk val",
          "PSK in hex (without 0x)",
          "-psk_session infile",
          "File to read PSK SSL session from",
          "-name val",
          "Hostname to use for \"-starttls lmtp\", \"-starttls smtp\" or \"-starttls xmpp[-server]\"",
          "Session options:",
          "-reconnect",
          "Drop and re-make the connection with the same Session-ID",
          "-sess_out outfile",
          "File to write SSL session to",
          "-sess_in infile",
          "File to read SSL session from",
          "Input/Output options:",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-quiet",
          "No s_client output",
          "-ign_eof",
          "Ignore input eof (default when -quiet)",
          "-no_ign_eof",
          "Don't ignore input eof",
          "-starttls val",
          "Use the appropriate STARTTLS command before starting TLS",
          "-xmpphost val",
          "Alias of -name option for \"-starttls xmpp[-server]\"",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-prexit",
          "Print session information when the program exits",
          "Debug options:",
          "-showcerts",
          "Show all certificates sent by the server",
          "-debug",
          "Extra output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-nbio_test",
          "More ssl protocol testing",
          "-state",
          "Print the ssl states",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material; default 20",
          "-security_debug",
          "Enable security debug messages",
          "-security_debug_verbose",
          "Output more security debug output",
          "-trace",
          "Show trace output of protocol messages",
          "-keylogfile outfile",
          "Write TLS secrets to file",
          "-nocommands",
          "Do not use interactive command letters",
          "-servername val",
          "Set TLS extension servername (SNI) in ClientHello (default)",
          "-noservername",
          "Do not send the server name (SNI) extension in the ClientHello",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-ignore_unexpected_eof",
          "Do not treat lack of close_notify from a peer as an error",
          "-status",
          "Request certificate status from server",
          "-serverinfo val",
          "types",
          "Send empty ClientHello extensions (comma-separated numbers)",
          "-alpn val",
          "Enable ALPN extension, considering named protocols supported (comma-separated list)",
          "-async",
          "Support asynchronous operation",
          "-nbio",
          "Use non-blocking IO",
          "Protocol and version options:",
          "-tls1",
          "Just use TLSv1",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-dtls",
          "Use any version of DTLS",
          "-timeout",
          "Enable send/receive timeout on DTLS connections",
          "-mtu +int",
          "Set the link layer MTU",
          "-dtls1",
          "Just use DTLSv1",
          "-dtls1_2",
          "Just use DTLSv1.2",
          "-nextprotoneg val",
          "Enable NPN extension, considering named protocols supported (comma-separated list)",
          "-early_data infile",
          "File to send as early data",
          "-enable_pha",
          "Enable post-handshake-authentication",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-srpuser val",
          "(deprecated) SRP authentication for 'user'",
          "-srppass val",
          "(deprecated) Password for 'user'",
          "-srp_lateuser",
          "(deprecated) SRP username into second ClientHello message",
          "-srp_moregroups",
          "(deprecated) Tolerate other than the known g N values.",
          "-srp_strength +int",
          "(deprecated) Minimal length in bits for N",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "TLS/SSL options:",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-client_renegotiation",
          "Allow client-initiated renegotiation",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-allow_no_dhe_kex",
          "In TLSv1.3 allow non-(ec)dhe based key exchange on resumption",
          "-prioritize_chacha",
          "Prioritize ChaCha ciphers when preferred by clients",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-groups val",
          "Groups to advertise (colon-separated list)",
          "-curves val",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-record_padding val",
          "Block size to pad TLS 1.3 records to.",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-no_middlebox",
          "Disable TLSv1.3 middlebox compat mode",
          "-no_etm",
          "Disable Encrypt-then-Mac extension",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-CRL infile",
          "CRL file to use",
          "-crl_download",
          "Download CRL from distribution points",
          "-CRLform PEM|DER",
          "CRL format (PEM or DER); default PEM",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "Restrict verify output to errors",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-chainCApath dir",
          "Use dir as certificate store path to build CA certificate chain",
          "-chainCAstore uri",
          "CA store URI for certificate chain",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-verifyCApath dir",
          "Use dir as certificate store path to verify CA certificate",
          "-verifyCAstore uri",
          "CA store URI for certificate verification",
          "Extended certificate options:",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM/DER/P12); has no effect",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (DER/PEM/P12); has no effect",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "host:port",
          "Where to connect; same as -connect option"
        ],
        "s_server": [
          "s_server: Use -help for summary.",
          "Usage: s_server [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-ssl_config val",
          "Configure SSL_CTX using the given configuration value",
          "-trace",
          "trace protocol messages",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Network options:",
          "-port +int",
          "TCP/IP port to listen on for connections (default is 4433)",
          "-accept val",
          "TCP/IP optional host and port to listen on for connections (default is *:4433)",
          "-unix val",
          "Unix domain socket to accept on",
          "-unlink",
          "For -unix, unlink existing socket first",
          "-4",
          "Use IPv4 only",
          "-6",
          "Use IPv6 only",
          "Identity options:",
          "-context val",
          "Set session ID context",
          "-CAfile infile",
          "PEM format file of CA's",
          "-CApath dir",
          "PEM format directory of CA's",
          "-CAstore uri",
          "URI to store of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store URI",
          "-nocert",
          "Don't use any certificates (Anon-DH)",
          "-verify int",
          "Turn on peer certificate verification",
          "-Verify int",
          "Turn on peer certificate verification, must have a cert",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-cert infile",
          "Server certificate file to use; default server.pem",
          "-cert2 infile",
          "Certificate file to use for servername; default server2.pem",
          "-certform PEM|DER",
          "Server certificate file format (PEM/DER/P12); has no effect",
          "-cert_chain infile",
          "Server certificate chain file in PEM format",
          "-build_chain",
          "Build server certificate chain",
          "-serverinfo val",
          "PEM serverinfo file for certificate",
          "-key val",
          "Private key file to use; default is -cert file or elseserver.pem",
          "-key2 infile",
          "-Private Key file to use for servername if not in -cert2",
          "-keyform format",
          "Key format (ENGINE, other values ignored)",
          "-pass val",
          "Private key and cert file pass phrase source",
          "-dcert infile",
          "Second server certificate file to use (usually for DSA)",
          "-dcertform PEM|DER",
          "Second server certificate file format (PEM/DER/P12); has no effect",
          "-dcert_chain infile",
          "second server certificate chain file in PEM format",
          "-dkey infile",
          "Second private key file to use (usually for DSA)",
          "-dkeyform PEM|DER",
          "Second key file format (ENGINE, other values ignored)",
          "-dpass val",
          "Second private key and cert file pass phrase source",
          "-dhparam infile",
          "DH parameters file to use",
          "-servername val",
          "Servername for HostName TLS extension",
          "-servername_fatal",
          "On servername mismatch send fatal alert (default warning alert)",
          "-nbio_test",
          "Test with the non-blocking test bio",
          "-crlf",
          "Convert LF from terminal into CRLF",
          "-quiet",
          "No server output",
          "-no_resume_ephemeral",
          "Disable caching and tickets if ephemeral (EC)DH is used",
          "-www",
          "Respond to a 'GET /' with a status page",
          "-WWW",
          "Respond to a 'GET with the file ./path",
          "-ignore_unexpected_eof",
          "Do not treat lack of close_notify from a peer as an error",
          "-tlsextdebug",
          "Hex dump of all TLS extensions received",
          "-HTTP",
          "Like -WWW but ./path includes HTTP headers",
          "-id_prefix val",
          "Generate SSL/TLS session IDs prefixed by arg",
          "-keymatexport val",
          "Export keying material using label",
          "-keymatexportlen +int",
          "Export len bytes of keying material; default 20",
          "-CRL infile",
          "CRL file to use",
          "-CRLform PEM|DER",
          "CRL file format (PEM or DER); default PEM",
          "-crl_download",
          "Download CRLs from distribution points in certificate CDP entries",
          "-chainCAfile infile",
          "CA file for certificate chain (PEM format)",
          "-chainCApath dir",
          "use dir as certificate store path to build CA certificate chain",
          "-chainCAstore uri",
          "use URI as certificate store to build CA certificate chain",
          "-verifyCAfile infile",
          "CA file for certificate verification (PEM format)",
          "-verifyCApath dir",
          "use dir as certificate store path to verify CA certificate",
          "-verifyCAstore uri",
          "use URI as certificate store to verify CA certificate",
          "-no_cache",
          "Disable session cache",
          "-ext_cache",
          "Disable internal cache, set up and use external cache",
          "-verify_return_error",
          "Close connection on verification error",
          "-verify_quiet",
          "No verify output except verify errors",
          "-ign_eof",
          "Ignore input EOF (default when -quiet)",
          "-no_ign_eof",
          "Do not ignore input EOF",
          "OCSP options:",
          "-status",
          "Request certificate status from server",
          "-status_verbose",
          "Print more output in certificate status callback",
          "-status_timeout int",
          "Status request responder timeout",
          "-status_url val",
          "Status request fallback URL",
          "-proxy val",
          "[http[s]://]host[:port][/path] of HTTP(S) proxy to use; path is ignored",
          "-no_proxy val",
          "List of addresses of servers not to use HTTP(S) proxy for",
          "Default from environment variable 'no_proxy', else 'NO_PROXY', else none",
          "-status_file infile",
          "File containing DER encoded OCSP Response",
          "Debug options:",
          "-security_debug",
          "Print output from SSL/TLS security framework",
          "-security_debug_verbose",
          "Print more output from SSL/TLS security framework",
          "-brief",
          "Restrict output to brief summary of connection parameters",
          "-rev",
          "act as an echo server that sends back received text reversed",
          "-debug",
          "Print more output",
          "-msg",
          "Show protocol messages",
          "-msgfile outfile",
          "File to send output of -msg or -trace, instead of stdout",
          "-state",
          "Print the SSL states",
          "-async",
          "Operate in asynchronous mode",
          "-max_pipelines +int",
          "Maximum number of encrypt/decrypt pipelines to be used",
          "-naccept +int",
          "Terminate after #num connections",
          "-keylogfile outfile",
          "Write TLS secrets to file",
          "-nbio",
          "Use non-blocking IO",
          "-timeout",
          "Enable timeouts",
          "-mtu +int",
          "Set link-layer MTU",
          "-read_buf +int",
          "Default read buffer size to be used for connections",
          "-split_send_frag +int",
          "Size used to split data for encrypt pipelines",
          "-max_send_frag +int",
          "Maximum Size of send frames",
          "Server identity options:",
          "-psk_identity val",
          "PSK identity to expect",
          "-psk_hint val",
          "PSK identity hint to use",
          "-psk val",
          "PSK in hex (without 0x)",
          "-psk_session infile",
          "File to read PSK SSL session from",
          "-srpvfile infile",
          "(deprecated) The verifier file for SRP",
          "-srpuserseed val",
          "(deprecated) A seed string for a default user salt",
          "Protocol and version options:",
          "-max_early_data int",
          "The maximum number of bytes of early data as advertised in tickets",
          "-recv_max_early_data int",
          "The maximum number of bytes of early data (hard limit)",
          "-early_data",
          "Attempt to read early data",
          "-num_tickets int",
          "The number of TLSv1.3 session tickets that a server will automatically issue",
          "-anti_replay",
          "Switch on anti-replay protection (default)",
          "-no_anti_replay",
          "Switch off anti-replay protection",
          "-http_server_binmode",
          "opening files in binary mode when acting as http server (-WWW and -HTTP)",
          "-no_ca_names",
          "Disable TLS Extension CA Names",
          "-stateless",
          "Require TLSv1.3 cookies",
          "-tls1",
          "Just talk TLSv1",
          "-tls1_1",
          "Just talk TLSv1.1",
          "-tls1_2",
          "just talk TLSv1.2",
          "-tls1_3",
          "just talk TLSv1.3",
          "-dtls",
          "Use any DTLS version",
          "-listen",
          "Listen for a DTLS ClientHello with a cookie and then connect",
          "-dtls1",
          "Just talk DTLSv1",
          "-dtls1_2",
          "Just talk DTLSv1.2",
          "-use_srtp val",
          "Offer SRTP key management with a colon-separated profile list",
          "-no_dhe",
          "Disable ephemeral DH",
          "-nextprotoneg val",
          "Set the advertised protocols for the NPN extension (comma-separated list)",
          "-alpn val",
          "Set the advertised protocols for the ALPN extension (comma-separated list)",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "TLS/SSL options:",
          "-no_ssl3",
          "Just disable SSLv3",
          "-no_tls1",
          "Just disable TLSv1",
          "-no_tls1_1",
          "Just disable TLSv1.1",
          "-no_tls1_2",
          "Just disable TLSv1.2",
          "-no_tls1_3",
          "Just disable TLSv1.3",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-no_comp",
          "Disable SSL/TLS compression (default)",
          "-comp",
          "Use SSL/TLS-level compression",
          "-no_ticket",
          "Disable use of TLS session tickets",
          "-serverpref",
          "Use server's cipher preferences",
          "-legacy_renegotiation",
          "Enable use of legacy renegotiation (dangerous)",
          "-client_renegotiation",
          "Allow client-initiated renegotiation",
          "-no_renegotiation",
          "Disable all renegotiation.",
          "-legacy_server_connect",
          "Allow initial connection to servers that don't support RI",
          "-no_resumption_on_reneg",
          "Disallow session resumption on renegotiation",
          "-no_legacy_server_connect",
          "Disallow initial connection to servers that don't support RI",
          "-allow_no_dhe_kex",
          "In TLSv1.3 allow non-(ec)dhe based key exchange on resumption",
          "-prioritize_chacha",
          "Prioritize ChaCha ciphers when preferred by clients",
          "-strict",
          "Enforce strict certificate checks as per TLS standard",
          "-sigalgs val",
          "Signature algorithms to support (colon-separated list)",
          "-client_sigalgs val",
          "Signature algorithms to support for client certificate authentication (colon-separated list)",
          "-groups val",
          "Groups to advertise (colon-separated list)",
          "-curves val",
          "-named_curve val",
          "Elliptic curve used for ECDHE (server-side only)",
          "-cipher val",
          "Specify TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-min_protocol val",
          "Specify the minimum protocol version to be used",
          "-max_protocol val",
          "Specify the maximum protocol version to be used",
          "-record_padding val",
          "Block size to pad TLS 1.3 records to.",
          "-debug_broken_protocol",
          "Perform all sorts of protocol violations for testing purposes",
          "-no_middlebox",
          "Disable TLSv1.3 middlebox compat mode",
          "-no_etm",
          "Disable Encrypt-then-Mac extension",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Extended certificate options:",
          "-xkey infile",
          "key for Extended certificates",
          "-xcert infile",
          "cert for Extended certificates",
          "-xchain infile",
          "chain for Extended certificates",
          "-xchain_build",
          "build certificate chain for the extended certificates",
          "-xcertform PEM|DER",
          "format of Extended certificate (PEM/DER/P12); has no effect",
          "-xkeyform PEM|DER",
          "format of Extended certificate's key (DER/PEM/P12); has no effect",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "s_time": [
          "s_time: Use -help for summary.",
          "Usage: s_time [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Connection options:",
          "-connect val",
          "Where to connect as post:port (default is localhost:4433)",
          "-new",
          "Just time new connections",
          "-reuse",
          "Just time connection reuse",
          "-bugs",
          "Turn on SSL bug compatibility",
          "-cipher val",
          "TLSv1.2 and below cipher list to be used",
          "-ciphersuites val",
          "Specify TLSv1.3 ciphersuites to be used",
          "-tls1",
          "Just use TLSv1.0",
          "-tls1_1",
          "Just use TLSv1.1",
          "-tls1_2",
          "Just use TLSv1.2",
          "-tls1_3",
          "Just use TLSv1.3",
          "-verify +int",
          "Turn on peer certificate verification, set depth",
          "-time +int",
          "Seconds to collect data, default 30",
          "-www val",
          "Fetch specified page from the site",
          "Certificate options:",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-cert infile",
          "Cert file to use, PEM format assumed",
          "-key infile",
          "File with key, PEM; default is -cert file",
          "-cafile infile",
          "PEM format file of CA's",
          "-CAfile infile",
          "-CApath dir",
          "PEM format directory of CA's",
          "-CAstore uri",
          "URI to store of CA's",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store URI",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "sess_id": [
          "sess_id: Use -help for summary.",
          "Usage: sess_id [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-context val",
          "Set the session ID context",
          "Input options:",
          "-in val",
          "Input file - default stdin",
          "-inform PEM|DER",
          "Input format - default PEM (DER or PEM)",
          "Output options:",
          "-out outfile",
          "Output file - default stdout",
          "-outform format",
          "Output format - default PEM (PEM, DER or NSS)",
          "-text",
          "Print ssl session id details",
          "-cert",
          "Output certificate",
          "-noout",
          "Don't output the encoded session info"
        ],
        "smime": [
          "No operation (-encrypt|-sign|...) specified",
          "smime: Use -help for summary.",
          "Usage: smime [options] [cert...]",
          "General options:",
          "-help",
          "Display this summary",
          "-in infile",
          "Input file",
          "-inform parm",
          "Input format SMIME (default), PEM or DER",
          "-out outfile",
          "Output file",
          "-outform parm",
          "Output format SMIME (default), PEM or DER",
          "-inkey val",
          "Input private key (if not signer or recipient)",
          "-keyform format",
          "Input private key format (ENGINE, other values ignored)",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-stream",
          "Enable CMS streaming",
          "-indef",
          "Same as -stream",
          "-noindef",
          "Disable CMS streaming",
          "-config infile",
          "Load a configuration file (this may load modules)",
          "Action options:",
          "-encrypt",
          "Encrypt message",
          "-decrypt",
          "Decrypt encrypted message",
          "-sign",
          "Sign message",
          "-resign",
          "Resign a signed message",
          "-verify",
          "Verify signed message",
          "Signing/Encryption options:",
          "-passin val",
          "Input file pass phrase source",
          "-md val",
          "Digest algorithm to use when signing or resigning",
          "-*",
          "Any supported cipher",
          "-pk7out",
          "Output PKCS#7 structure",
          "-nointern",
          "Don't search certificates in message for signer",
          "-nodetach",
          "Use opaque signing",
          "-noattr",
          "Don't include any signed attributes",
          "-binary",
          "Don't translate message to text",
          "-signer val",
          "Signer certificate file",
          "-content infile",
          "Supply or override content for detached signature",
          "-nocerts",
          "Don't include signers certificate when signing",
          "Verification/Decryption options:",
          "-nosigs",
          "Don't verify message signature",
          "-noverify",
          "Don't verify signers certificate",
          "-certfile infile",
          "Other certificates file",
          "-recip infile",
          "Recipient certificate file for decryption",
          "Email options:",
          "-to val",
          "To address",
          "-from val",
          "From address",
          "-subject val",
          "Subject",
          "-text",
          "Include or delete text MIME headers",
          "-nosmimecap",
          "Omit the SMIMECapabilities attribute",
          "Certificate chain options:",
          "-CApath dir",
          "Trusted certificates directory",
          "-CAfile infile",
          "Trusted certificates file",
          "-CAstore uri",
          "Trusted certificates store URI",
          "-no-CAfile",
          "Do not load the default certificates file",
          "-no-CApath",
          "Do not load certificates from the default certificates directory",
          "-no-CAstore",
          "Do not load certificates from the default certificates store",
          "-nochain",
          "set PKCS7_NOCHAIN so certificates contained in the message are not used as untrusted CAs",
          "-crlfeol",
          "Use CRLF as EOL termination instead of CR only",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "cert",
          "Recipient certs, used when encrypting"
        ],
        "speed": [
          "speed: Unknown algorithm help",
          "Usage: speed [options] [algorithm...]",
          "General options:",
          "-help",
          "Display this summary",
          "-mb",
          "Enable (tls1>=1) multi-block mode on EVP-named cipher",
          "-mr",
          "Produce machine readable output",
          "-multi +int",
          "Run benchmarks in parallel",
          "-async_jobs +int",
          "Enable async mode and start specified number of jobs",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-primes +int",
          "Specify number of primes (for RSA only)",
          "Selection options:",
          "-evp val",
          "Use EVP-named cipher or digest",
          "-hmac val",
          "HMAC using EVP-named digest",
          "-cmac val",
          "CMAC using EVP-named cipher",
          "-decrypt",
          "Time decryption instead of encryption (only EVP)",
          "-aead",
          "Benchmark EVP-named AEAD cipher in TLS-like sequence",
          "Timing options:",
          "-elapsed",
          "Use wall-clock time instead of CPU user time as divisor",
          "-seconds +int",
          "Run benchmarks for specified amount of seconds",
          "-bytes +int",
          "Run [non-PKI] benchmarks on custom-sized buffer",
          "-misalign +int",
          "Use specified offset to mis-align buffers",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "algorithm",
          "Algorithm(s) to test (optional; otherwise tests all)"
        ],
        "spkac": [
          "spkac: Use -help for summary.",
          "Usage: spkac [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-spksect val",
          "Specify the name of an SPKAC-dedicated section of configuration",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Input options:",
          "-in infile",
          "Input file",
          "-key infile",
          "Create SPKAC using private key",
          "-keyform format",
          "Private key file format (ENGINE, other values ignored)",
          "-passin val",
          "Input file pass phrase source",
          "-challenge val",
          "Challenge string",
          "-spkac val",
          "Alternative SPKAC name",
          "Output options:",
          "-digest val",
          "Sign new SPKAC with the specified digest (default: MD5)",
          "-out outfile",
          "Output file",
          "-noout",
          "Don't print SPKAC",
          "-pubkey",
          "Output public key",
          "-verify",
          "Verify SPKAC signature",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ],
        "srp": [
          "Exactly one of the options -add, -delete, -modify -list must be specified.",
          "srp: Use -help for summary.",
          "Usage: srp [options] [user...]",
          "General options:",
          "-help",
          "Display this summary",
          "-verbose",
          "Talk a lot while doing things",
          "-config infile",
          "A config file",
          "-name val",
          "The particular srp definition to use",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Action options:",
          "-add",
          "Add a user and SRP verifier",
          "-modify",
          "Modify the SRP verifier of an existing user",
          "-delete",
          "Delete user from verifier file",
          "-list",
          "List users",
          "Configuration options:",
          "-srpvfile infile",
          "The srp verifier file name",
          "-gn val",
          "Set g and N values to be used for new verifier",
          "-userinfo val",
          "Additional info to be set for user",
          "-passin val",
          "Input file pass phrase source",
          "-passout val",
          "Output file pass phrase source",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "user",
          "Username(s) to process (optional)"
        ],
        "storeutl": [
          "Couldn't open file or uri help",
          "00000000:error:16000069:STORE routines:ossl_store_get0_loader_int:unregistered scheme:crypto/store/store_register.c:237:scheme=file",
          "00000000:error:80000002:system library:file_open:No such file or directory:providers/implementations/storemgmt/file_store.c:269:calling stat(help)",
          "Usage: storeutl [options] uri",
          "General options:",
          "-help",
          "Display this summary",
          "-*",
          "Any supported digest",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Search options:",
          "-certs",
          "Search for certificates only",
          "-keys",
          "Search for keys only",
          "-crls",
          "Search for CRLs only",
          "-subject val",
          "Search by subject",
          "-issuer val",
          "Search by issuer and serial, issuer name",
          "-serial val",
          "Search by issuer and serial, serial number",
          "-fingerprint val",
          "Search by public key fingerprint, given in hex",
          "-alias val",
          "Search by alias",
          "-r",
          "Recurse through names",
          "Input options:",
          "-passin val",
          "Input file pass phrase source",
          "Output options:",
          "-out outfile",
          "Output file - default stdout",
          "-text",
          "Print a text form of the objects",
          "-noout",
          "No PEM output, just status",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "uri",
          "URI of the store object"
        ],
        "ts": [
          "ts: Use -help for summary.",
          "Usage: ts [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-config infile",
          "Configuration file",
          "-section val",
          "Section to use within config file",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-inkey val",
          "File with private key for reply",
          "-signer val",
          "Signer certificate file",
          "-chain infile",
          "File with signer CA chain",
          "-CAfile infile",
          "File with trusted CA certs",
          "-CApath dir",
          "Path to trusted CA files",
          "-CAstore uri",
          "URI to trusted CA store",
          "-untrusted infile",
          "Extra untrusted certs",
          "-token_in",
          "Input is a PKCS#7 file",
          "-token_out",
          "Output is a PKCS#7 file",
          "-passin val",
          "Input file pass phrase source",
          "-*",
          "Any supported digest",
          "Query options:",
          "-query",
          "Generate a TS query",
          "-data infile",
          "File to hash",
          "-digest val",
          "Digest (as a hex string)",
          "-queryfile infile",
          "File containing a TS query",
          "-cert",
          "Put cert request into query",
          "-in infile",
          "Input file",
          "Verify options:",
          "-verify",
          "Verify a TS response",
          "-reply",
          "Generate a TS reply",
          "-tspolicy val",
          "Policy OID to use",
          "-no_nonce",
          "Do not include a nonce",
          "-out outfile",
          "Output file",
          "-text",
          "Output text (not DER)",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Typical uses:",
          "openssl ts -query [-rand file...] [-config file] [-data file]",
          "[-digest hexstring] [-tspolicy oid] [-no_nonce] [-cert]",
          "[-in file] [-out file] [-text]",
          "openssl ts -reply [-config file] [-section tsa_section]",
          "[-queryfile file] [-passin password]",
          "[-signer tsa_cert.pem] [-inkey private_key.pem]",
          "[-chain certs_file.pem] [-tspolicy oid]",
          "[-in file] [-token_in] [-out file] [-token_out]",
          "[-text] [-engine id]",
          "openssl ts -verify -CApath dir -CAfile root-cert.pem -CAstore uri",
          "-untrusted extra-certs.pem [-data file] [-digest hexstring]",
          "[-queryfile request.tsq] -in response.tsr [-token_in] ..."
        ],
        "verify": [
          "Could not open file or uri for loading certificate file from help",
          "00000000:error:16000069:STORE routines:ossl_store_get0_loader_int:unregistered scheme:crypto/store/store_register.c:237:scheme=file",
          "00000000:error:80000002:system library:file_open:No such file or directory:providers/implementations/storemgmt/file_store.c:269:calling stat(help)",
          "Unable to load certificate file",
          "Usage: verify [options] [cert...]",
          "General options:",
          "-help",
          "Display this summary",
          "-engine val",
          "Use engine, possibly a hardware device",
          "-verbose",
          "Print extra information about the operations being performed.",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "Certificate chain options:",
          "-trusted infile",
          "A file of trusted certificates",
          "-CAfile infile",
          "-CApath dir",
          "A directory of files with trusted certificates",
          "-CAstore uri",
          "URI to a store of trusted certificates",
          "-no-CAfile",
          "Do not load the default trusted certificates file",
          "-no-CApath",
          "Do not load trusted certificates from the default directory",
          "-no-CAstore",
          "Do not load trusted certificates from the default certificates store",
          "-untrusted infile",
          "A file of untrusted certificates",
          "-CRLfile infile",
          "File containing one or more CRL's (in PEM format) to load",
          "-crl_download",
          "Try downloading CRL information for certificates via their CDP entries",
          "-show_chain",
          "Display information about the certificate chain",
          "Validation options:",
          "-policy val",
          "adds policy to the acceptable policy set",
          "-purpose val",
          "certificate chain purpose",
          "-verify_name val",
          "verification policy name",
          "-verify_depth int",
          "chain depth limit",
          "-auth_level int",
          "chain authentication security level",
          "-attime intmax",
          "verification epoch time",
          "-verify_hostname val",
          "expected peer hostname",
          "-verify_email val",
          "expected peer email",
          "-verify_ip val",
          "expected peer IP address",
          "-ignore_critical",
          "permit unhandled critical extensions",
          "-issuer_checks",
          "(deprecated)",
          "-crl_check",
          "check leaf certificate revocation",
          "-crl_check_all",
          "check full chain revocation",
          "-policy_check",
          "perform rfc5280 policy checks",
          "-explicit_policy",
          "set policy variable require-explicit-policy",
          "-inhibit_any",
          "set policy variable inhibit-any-policy",
          "-inhibit_map",
          "set policy variable inhibit-policy-mapping",
          "-x509_strict",
          "disable certificate compatibility work-arounds",
          "-extended_crl",
          "enable extended CRL features",
          "-use_deltas",
          "use delta CRLs",
          "-policy_print",
          "print policy processing diagnostics",
          "-check_ss_sig",
          "check root CA self-signatures",
          "-trusted_first",
          "search trust store first (default)",
          "-suiteB_128_only",
          "Suite B 128-bit-only mode",
          "-suiteB_128",
          "Suite B 128-bit mode allowing 192-bit algorithms",
          "-suiteB_192",
          "Suite B 192-bit-only mode",
          "-partial_chain",
          "accept chains anchored by intermediate trust-store CAs",
          "-no_alt_chains",
          "-no_check_time",
          "ignore certificate validity time",
          "-allow_proxy_certs",
          "allow the use of proxy certificates",
          "-vfyopt val",
          "Verification parameter in n:v form",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms",
          "Parameters:",
          "cert",
          "Certificate(s) to verify (optional; stdin used otherwise)",
          "Recognized certificate chain purposes:",
          "sslclient",
          "SSL client",
          "sslserver",
          "SSL server",
          "nssslserver",
          "Netscape SSL server",
          "smimesign",
          "S/MIME signing",
          "smimeencrypt",
          "S/MIME encryption",
          "crlsign",
          "CRL signing",
          "any",
          "Any Purpose",
          "ocsphelper",
          "OCSP helper",
          "timestampsign",
          "Time Stamp signing",
          "Recognized certificate policy names:",
          "default",
          "pkcs7",
          "smime_sign",
          "ssl_client",
          "ssl_server"
        ],
        "version": [
          "version: Use -help for summary.",
          "Usage: version [options]",
          "General options:",
          "-help",
          "Display this summary",
          "Output options:",
          "-a",
          "Show all data",
          "-b",
          "Show build date",
          "-d",
          "Show configuration directory",
          "-e",
          "Show engines directory",
          "-m",
          "Show modules directory",
          "-f",
          "Show compiler flags used",
          "-o",
          "Show some internal datatype options",
          "-p",
          "Show target build platform",
          "-r",
          "Show random seeding options",
          "-v",
          "Show library version",
          "-c",
          "Show CPU settings info"
        ],
        "x509": [
          "x509: Use -help for summary.",
          "Usage: x509 [options]",
          "General options:",
          "-help",
          "Display this summary",
          "-in infile",
          "Certificate input, or CSR input file with -req (default stdin)",
          "-passin val",
          "Private key and cert file pass-phrase source",
          "-new",
          "Generate a certificate from scratch",
          "-x509toreq",
          "Output a certification request (rather than a certificate)",
          "-req",
          "Input is a CSR file (rather than a certificate)",
          "-copy_extensions val",
          "copy extensions when converting from CSR to x509 or vice versa",
          "-inform format",
          "CSR input file format (DER or PEM) - default PEM",
          "-vfyopt val",
          "CSR verification parameter in n:v form",
          "-key val",
          "Key for signing, and to include unless using -force_pubkey",
          "-signkey val",
          "Same as -key",
          "-keyform PEM|DER|ENGINE",
          "Key input format (ENGINE, other values ignored)",
          "-out outfile",
          "Output file - default stdout",
          "-outform format",
          "Output format (DER or PEM) - default PEM",
          "-nocert",
          "No cert output (except for requested printing)",
          "-noout",
          "No output (except for requested printing)",
          "Certificate printing options:",
          "-text",
          "Print the certificate in text form",
          "-dateopt val",
          "Datetime format used for printing. (rfc_822/iso_8601). Default is rfc_822.",
          "-certopt val",
          "Various certificate text printing options",
          "-fingerprint",
          "Print the certificate fingerprint",
          "-alias",
          "Print certificate alias",
          "-serial",
          "Print serial number value",
          "-startdate",
          "Print the notBefore field",
          "-enddate",
          "Print the notAfter field",
          "-dates",
          "Print both notBefore and notAfter fields",
          "-subject",
          "Print subject DN",
          "-issuer",
          "Print issuer DN",
          "-nameopt val",
          "Certificate subject/issuer name printing options",
          "-email",
          "Print email address(es)",
          "-hash",
          "Synonym for -subject_hash (for backward compat)",
          "-subject_hash",
          "Print subject hash value",
          "-subject_hash_old",
          "Print old-style (MD5) subject hash value",
          "-issuer_hash",
          "Print issuer hash value",
          "-issuer_hash_old",
          "Print old-style (MD5) issuer hash value",
          "-ext val",
          "Restrict which X.509 extensions to print and/or copy",
          "-ocspid",
          "Print OCSP hash values for the subject name and public key",
          "-ocsp_uri",
          "Print OCSP Responder URL(s)",
          "-purpose",
          "Print out certificate purposes",
          "-pubkey",
          "Print the public key in PEM format",
          "-modulus",
          "Print the RSA key modulus",
          "Certificate checking options:",
          "-checkend intmax",
          "Check whether cert expires in the next arg seconds",
          "Exit 1 (failure) if so, 0 if not",
          "-checkhost val",
          "Check certificate matches host",
          "-checkemail val",
          "Check certificate matches email",
          "-checkip val",
          "Check certificate matches ipaddr",
          "Certificate output options:",
          "-set_serial val",
          "Serial number to use, overrides -CAserial",
          "-next_serial",
          "Increment current certificate serial number",
          "-days int",
          "Number of days until newly generated certificate expires - default 30",
          "-preserve_dates",
          "Preserve existing validity dates",
          "-subj val",
          "Set or override certificate subject (and issuer)",
          "-force_pubkey infile",
          "Place the given key in new certificate",
          "-clrext",
          "Do not take over any extensions from the source certificate or request",
          "-extfile infile",
          "Config file with X509V3 extensions to add",
          "-extensions val",
          "Section of extfile to use - default: unnamed section",
          "-sigopt val",
          "Signature parameter, in n:v form",
          "-badsig",
          "Corrupt last byte of certificate signature (for test)",
          "-*",
          "Any supported digest, used for signing and printing",
          "Micro-CA options:",
          "-CA infile",
          "Use the given CA certificate, conflicts with -key",
          "-CAform PEM|DER",
          "CA cert format (PEM/DER/P12); has no effect",
          "-CAkey val",
          "The corresponding CA key; default is -CA arg",
          "-CAkeyform PEM|DER|ENGINE",
          "CA key format (ENGINE, other values ignored)",
          "-CAserial val",
          "File that keeps track of CA-generated serial number",
          "-CAcreateserial",
          "Create CA serial number file if it does not exist",
          "Certificate trust output options:",
          "-trustout",
          "Mark certificate PEM output as trusted",
          "-setalias val",
          "Set certificate alias (nickname)",
          "-clrtrust",
          "Clear all trusted purposes",
          "-addtrust val",
          "Trust certificate for a given purpose",
          "-clrreject",
          "Clears all the prohibited or rejected uses of the certificate",
          "-addreject val",
          "Reject certificate for a given purpose",
          "Random state options:",
          "-rand val",
          "Load the given file(s) into the random number generator",
          "-writerand outfile",
          "Write random data to the specified file",
          "-engine val",
          "Use engine, possibly a hardware device",
          "Provider options:",
          "-provider-path val",
          "Provider load path (must be before 'provider' argument if required)",
          "-provider val",
          "Provider to load (can be specified multiple times)",
          "-propquery val",
          "Property query used when fetching algorithms"
        ]
      },
      "commands": [
        "asn1parse",
        "ca",
        "ciphers",
        "cmp",
        "cms",
        "crl",
        "crl2pkcs7",
        "dgst",
        "dhparam",
        "dsa",
        "dsaparam",
        "ec",
        "ecparam",
        "enc",
        "engine",
        "errstr",
        "fipsinstall",
        "gendsa",
        "genpkey",
        "genrsa",
        "help",
        "info",
        "kdf",
        "list",
        "mac",
        "nseq",
        "ocsp",
        "passwd",
        "pkcs12",
        "pkcs7",
        "pkcs8",
        "pkey",
        "pkeyparam",
        "pkeyutl",
        "prime",
        "rand",
        "rehash",
        "req",
        "rsa",
        "rsautl",
        "s_client",
        "s_server",
        "s_time",
        "sess_id",
        "smime",
        "speed",
        "spkac",
        "srp",
        "storeutl",
        "ts",
        "verify",
        "version",
        "x509"
      ],
      "digits": [
        "blake2b512",
        "blake2s256",
        "md4",
        "md5",
        "mdc2",
        "rmd160",
        "sha1",
        "sha224",
        "sha256",
        "sha3-224",
        "sha3-256",
        "sha3-384",
        "sha3-512",
        "sha384",
        "sha512",
        "sha512-224",
        "sha512-256",
        "shake128",
        "shake256",
        "sm3"
      ]
    }
  }
}