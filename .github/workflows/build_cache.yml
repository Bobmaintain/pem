name: Build OpenSSL Binaries
on:
  push:
    branches:
    - master
    - devel/v1
    paths:
    - .github/workflows/build.yml
    - bin/**.sh
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  TARGET: x86_64-unknown-linux-gnu
jobs:
  build:
    if: github.ref == 'refs/heads/master'
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        sudo apt-get install -y haveged ca-certificates
        sudo haveged -w 2048
        mkdir openssl
    - name: Cache OpenSSL Binary - ${{ runner.os }}-build-openssl-tests-v2-${{ matrix.LIBRARY}}-${{ matrix.VERSION }}
      id: openssl_cache
      uses: actions/cache@v2
      with:
        path: ./openssl/
        key: ${{ runner.os }}-build-openssl-tests-v2-${{ matrix.LIBRARY }}-${{ matrix.VERSION}}
    - name: Set ENV
      shell: bash
      run: |
        set -x
        if [[ -d "$GITHUB_WORKSPACE${{ matrix.OPENSSL_DIR }}" ]] && [[ "${{ matrix.OPENSSL_DIR }}" == "/openssl" ]] ; then echo "OPENSSL_DIR=$GITHUB_WORKSPACE${{ matrix.OPENSSL_DIR }}" >> $GITHUB_ENV ; echo "OPENSSL_BIN=$GITHUB_WORKSPACE${{ matrix.OPENSSL_DIR }}/bin/openssl" >> $GITHUB_ENV ; fi
        echo "LIBRARY=$(echo ${LIBRARY})" >> $GITHUB_ENV
        echo "VERSION=$(echo ${VERSION})" >> $GITHUB_ENV
      env:
        LIBRARY: ${{ matrix.LIBRARY }}
        VERSION: ${{ matrix.VERSION }}
    - name: Run Prepare
      shell: bash
      run: |
        set +e
        echo $PWD
        openssl version
        echo "OPENSSL_DIR=$OPENSSL_DIR"
        if [[ ! -z "$OPENSSL_DIR" ]] ; then "./bin/local_build_openssl.sh" ; fi
        if [[ "$CI" == 'true' ]] && [[ -f "$OPENSSL_BIN" ]]; then $OPENSSL_BIN version; else openssl version; fi
