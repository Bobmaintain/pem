{"version":3,"file":"openssl.spec.js","sourceRoot":"","sources":["../../test/openssl.spec.ts"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;AACZ,wCAAkC;AAClC,qEAAyC;AACzC,0DAAiC;AACjC,yEAAkC;AAClC,MAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AACtC,cAAI,CAAC,GAAG,CAAC,oBAAS,CAAC,CAAA;AAGnB,kEAAkE;AAClE,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA,CAAA,YAAY;IAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA,YAAY;IAE3B,QAAQ,CAAC,UAAU,EAAE;QACnB,EAAE,CAAC,yBAAyB,EAAE,UAAU,IAAI;YAC1C,OAAO,CAAC,IAAI,CAAC,UAAU,KAAK;gBAC1B,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;gBAC3B,IAAI,EAAE,CAAA;YACR,CAAC,EAAE;gBACD,SAAS;gBACT,UAAU;gBACV,KAAK;gBACL,IAAI;aACL,EAAE,oBAAoB,CAAC,CAAA;QAC1B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,2BAA2B,EAAE;QACpC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;YAC9B,IAAA,aAAK,EAAC,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;YAChC,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE;gBAC9C,IAAA,aAAM,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;gBACzE,IAAA,aAAM,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;aACnH;YACD,IAAI,EAAE,CAAA;QACR,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gBAAgB,EAAE;QACzB,EAAE,CAAC,uBAAuB,EAAE,UAAU,IAAI;YACxC,OAAO,CAAC,UAAU,CAAC,UAAU,KAAK,EAAE,MAAM;gBACxC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;gBACrB,IAAA,aAAM,EAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;gBACzB,IAAI,EAAE,CAAA;YACR,CAAC,EAAE;gBACD,SAAS;gBACT,UAAU;gBACV,KAAK;gBACL,IAAI;aACL,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAGF,QAAQ,CAAC,WAAW,EAAE;QACpB,EAAE,CAAC,IAAI,CAAC,oCAAoC,EAAE,UAAU,IAAI;YAC1D,uCAAuC;YACvC,IAAI,EAAE,CAAA;QACR,CAAC,CAAC,CAAA;QACF,kEAAkE;QAClE;;;;;;;;;;;;;;;;;;;;;;;;WAwBG;IACL,CAAC,CAAC,CAAA;AAEJ,CAAC,CAAC,CAAA","sourcesContent":["\"use strict\"\nimport {debug} from \"../src/debug\"\nimport * as openssl from \"../src/openssl\"\nimport chai, {expect} from \"chai\"\nimport dirtyChai from \"dirty-chai\"\nconst hlp = require(\"./pem.helper.js\")\nchai.use(dirtyChai)\n\n\n// NOTE: we cover here only the test cases left in coverage report\ndescribe(\"openssl.js tests\", function () {\n  this.timeout(300000)// 5 minutes\n  this.slow(2000)// 2 seconds\n\n  describe(\"#.exec()\", function () {\n    it(\"search string not found\", function (done) {\n      openssl.exec(function (error) {\n        hlp.checkError(error, true)\n        done()\n      }, [\n        \"dhparam\",\n        \"-outform\",\n        \"PEM\",\n        1024\n      ], \"DH PARAMETERS 1024\")\n    })\n  })\n\n  describe(\"#.get(\\\"openSslVersion\\\")\", function () {\n    it(\"get Version\", function (done) {\n      debug(\"Settings\", openssl.get())\n      if (process.env.LIBRARY && process.env.VERSION) {\n        expect(process.env.LIBRARY.toUpperCase()).to.equal(openssl.get(\"Vendor\"))\n        expect(process.env.VERSION).to.equal(openssl.get(\"VendorVersion\") + (openssl.get(\"VendorVersionBuildChar\") || \"\"))\n      }\n      done()\n    })\n  })\n\n  describe(\"#.execBinary()\", function () {\n    it(\"no tmpfiles parameter\", function (done) {\n      openssl.execBinary(function (error, result) {\n        hlp.checkError(error)\n        expect(result).to.be.ok()\n        done()\n      }, [\n        \"dhparam\",\n        \"-outform\",\n        \"PEM\",\n        1024\n      ])\n    })\n  })\n\n\n  describe(\"#.spawn()\", function () {\n    it.skip(\"error case [openssl return code 2]\", function (done) {\n      // TODO; couldn't figure an example out\n      done()\n    })\n    // TODO; I expect some more cases in here or code cleanup required\n    /**\n     *\n     *\n     * The exit codes for smime are as follows:\n     *\n     * 0   The operation was completely successful.\n     * 1   An error occurred parsing the command options.\n     * 2   One of the input files could not be read.\n     * 3   An error occurred creating the file or when reading the message.\n     * 4   An error occurred decrypting or verifying the message.\n     * 5   An error occurred writing certificates.\n     *\n     * The exit codes for cms are as follows:\n     *\n     * 0   The operation was completely successful.\n     * 1   An error occurred parsing the command options.\n     * 2   One of the input files could not be read.\n     * 3   An error occurred creating the CMS file or when reading the MIME message.\n     * 4   An error occurred decrypting or verifying the message.\n     * 5   The message was verified correctly but an error occurred writing out the signer's certificates.\n     * 6   An error occurred writing the output file.\n     * 32+ A verify error occurred while -verify_retcode is specified.\n     *\n     *\n     */\n  })\n\n})\n"]}